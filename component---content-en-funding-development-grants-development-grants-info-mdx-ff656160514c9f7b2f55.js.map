{"version":3,"sources":["webpack:///./content/en/funding/development-grants/development-grants-info.mdx","webpack:///./src/modules/layouts/mdx_layout.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","StatusBanner","Checklist","Aligner","Button","CTA","List","Box","Tout","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","warning","parentName","center","to","isMDXComponent","useTranslation","locale","t","DEFAULT_LOCALE","allMdx","useStaticQuery","children","pageContext","uri","pagePath","frontmatter","title","description","keywords","featuredImage","status","hideLanguageSelector","hideBreadcrumbs","pathDirs","replace","split","slice","urlNoLocale","join","log","calculateTreeData","edges","sidenavData","breadcrumbData","languageSelectorData","filter","node","UrlConverter","getLocaleFromPath","fileAbsolutePath","map","value","label","statusProps","text","currentTopSection","useLocation","pathname","_pageTitle","firstHeading","Children","toArray","find","c","undefined","getFirstHeading","pop","hasTopSection","renderSidenav","hideSidenav","renderLanguageSelector","renderBreadcrumbs","seo","contentWidthSubtract","sx","width","display","boundaryElement","dontUpdateHolderHeightWhenSticky","style","position","hideOnBoundaryHit","data","currentPath","as","mt","pl","pr","pb","marginTop","sticky","justifyContent","alignItems","flexWrap","px"],"mappings":"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","file":"component---content-en-funding-development-grants-development-grants-info-mdx-ff656160514c9f7b2f55.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/community-portal/community-portal/src/modules/layouts/mdx_layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst StatusBanner = makeShortcode(\"StatusBanner\");\nconst Checklist = makeShortcode(\"Checklist\");\nconst Aligner = makeShortcode(\"Aligner\");\nconst Button = makeShortcode(\"Button\");\nconst CTA = makeShortcode(\"CTA\");\nconst List = makeShortcode(\"List\");\nconst Box = makeShortcode(\"Box\");\nconst Tout = makeShortcode(\"Tout\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <StatusBanner warning mdxType=\"StatusBanner\">\n      <p><strong parentName=\"p\">{`The grants program is not accepting new applications at the moment. Please check back later for the next wave.`}</strong></p>\n    </StatusBanner>\n    <h1>{`Development Grants`}</h1>\n    <h2>{`The MakerDAO Core Community Development Initiative`}</h2>\n    <p>{`We provide funding for all kinds of teams that create infrastructure and applications for the Maker ecosystem.`}</p>\n    <p>{`So far, since February 2018, we've awarded over 683,887 DAI.`}</p>\n    <h2>{`Requirements`}</h2>\n    <p>{`The model we use to incubate our grants requires regular check-ins, operational transparency, high developer velocity, active repositories, and frequent communications with MakerDAO and other members of the cohort.`}</p>\n    <p>{`How well teams meet these requirements will determine whether they reach their milestones and whether additional funds will be released.`}</p>\n    <p>{`This grant is for any teams building on Maker or Dai.`}</p>\n    <Checklist mdxType=\"Checklist\">\n      <p>{`Self-direct your work`}</p>\n      <p>{`Actively commit to regular check-ins`}</p>\n      <p>{`Work fast and openly`}</p>\n      <p>{`Share code repository activity`}</p>\n      <p>{`Communicate with other members of the cohort often`}</p>\n      <p>{`Split your work into milestones, we distribute blocks of funds as teams reach predetermined milestones.`}</p>\n    </Checklist>\n    <p>{`Our `}<a parentName=\"p\" {...{\n        \"href\": \"/funding/development-grants/grantee-playbook/\"\n      }}>{`Grantee Playbook`}</a>{` will provide an idea of what's expected.`}</p>\n    <Aligner center mdxType=\"Aligner\">\n      <Button to=\"/funding/development-grants/grantee-playbook/\" mdxType=\"Button\">Read the Grantee Playbook</Button>\n    </Aligner>\n    <h2>{`Application`}</h2>\n    <p>{`Due to the high volume of worthy requests we receive, and the limited resources available, we prioritize applications with conservative budgets.`}</p>\n    <CTA mdxType=\"CTA\">\n      <h3>{`Apply to `}<a parentName=\"h3\" {...{\n          \"href\": \"mailto:grants@makerdao.com\"\n        }}>{`grants@makerdao.com`}</a></h3>\n    </CTA>\n    <p>{`To apply, please send an email describing:`}</p>\n    <List mdxType=\"List\">\n      <Box mdxType=\"Box\">\n        <h4>{`What is the Project?`}</h4>\n        <p>{`What does the project do, and whom are you helping? Describe the solution and anything else that will help us understand your approach.`}</p>\n      </Box>\n      <Box mdxType=\"Box\">\n        <h4>{`Budget`}</h4>\n        <p>{`Budget explanations, examples, and anything else that will help a user structure this section of their application.`}</p>\n      </Box>\n      <Box mdxType=\"Box\">\n        <h4>{`What’s the Problem?`}</h4>\n        <p>{`The problem you’re solving, explanations, examples, and anything else that will help a user structure this section of their application.`}</p>\n      </Box>\n    </List>\n    <Tout mdxType=\"Tout\">\n      <Box mdxType=\"Box\">\n        <h4>{`What Happens Next?`}</h4>\n        <p>{`Read about what happens once you’ve submitted your application.`}</p>\n        <p><a parentName=\"p\" {...{\n            \"href\": \"\"\n          }}>{`Grant Submission`}</a></p>\n      </Box>\n      <Box mdxType=\"Box\">\n        <h4>{`Life as a Grantee`}</h4>\n        <p>{`Learn everything you'll need to be a successful grantee.`}</p>\n        <p><a parentName=\"p\" {...{\n            \"href\": \"/funding/development-grants/grantee-playbook/\"\n          }}>{`Grantee Playbook`}</a></p>\n      </Box>\n    </Tout>\n    <h2>{`Past Grant Recipients`}</h2>\n    <List mdxType=\"List\">\n      <p><a parentName=\"p\" {...{\n          \"href\": \"https://dafnir.com/\"\n        }}><strong parentName=\"a\">{`Dafinir`}</strong></a>{`\nSend Dai and the recipient gets local money.`}</p>\n      <p><a parentName=\"p\" {...{\n          \"href\": \"https://xdai.io/\"\n        }}><strong parentName=\"a\">{`Burner Wallet`}</strong></a>{`\nA mobile phone can send DAI to another address in five seconds with a simple QR code scan.`}</p>\n      <p><a parentName=\"p\" {...{\n          \"href\": \"https://www.pooltogether.com/\"\n        }}><strong parentName=\"a\">{`Pool Together`}</strong></a>{`\nA no-loss, audited savings game powered by blockchain technology.`}</p>\n      <p><a parentName=\"p\" {...{\n          \"href\": \"https://sablier.finance/\"\n        }}><strong parentName=\"a\">{`Sablier`}</strong></a>{`\nA decentralized app for continuous payments.`}</p>\n    </List>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport {Children, Fragment} from 'react';\nimport { Box, Flex, jsx } from \"theme-ui\";\nimport Sticky from \"react-sticky-el\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\n\nimport {MobileNav} from '@modules/navigation';\nimport { useTranslation } from \"@modules/localization/\";\nimport { LanguageSelector } from \"@modules/localization\";\nimport { Sidenav, Breadcrumbs } from \"@modules/navigation\";\nimport { StatusBanner } from \"@modules/ui\";\nimport calculateTreeData from \"@modules/navigation/calculateTreeData\";\nimport { SEO } from \"@modules/utility\";\nimport { UrlConverter, getLocaleFromPath } from \"@utils\";\n\nexport default (props) => {\n  const { locale, t, DEFAULT_LOCALE } = useTranslation();\n\n  const { allMdx } = useStaticQuery(graphql`\n    query getMDXData {\n      # Regex for all files that are NOT config files\n      allMdx(\n        filter: {\n          fileAbsolutePath: {\n            regex: \"//([\\\\\\\\w]{2})/(?!header.mdx|index.mdx|sidenav.mdx|example.mdx|social.mdx|footer.mdx|404.mdx|.js|.json)/\"\n          }\n        }\n      ) {\n        edges {\n          node {\n            headings(depth: h1) {\n              value\n            }\n            fileAbsolutePath\n            frontmatter {\n              title\n              order\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const { children, pageContext, uri } = props;\n\n  const {pagePath} = pageContext; \n  const {\n    title,\n    description,\n    keywords,\n    featuredImage,\n    status,\n    hideLanguageSelector,\n    hideBreadcrumbs,\n  } = pageContext.frontmatter;\n\n  const pathDirs = pagePath.replace(/^\\/|\\/$/g, \"\").split(\"/\").slice(1);\n  const urlNoLocale = pathDirs.join(\"/\");\n  console.log(pathDirs[0]);\n  const { sidenavData, breadcrumbData } = calculateTreeData(\n    allMdx.edges,\n    pathDirs[0],\n    DEFAULT_LOCALE,\n    locale,\n    pathDirs\n  );\n\n  //NOTE(Rejon): Must be in the shape that React Select expects for it's options.\n  //Something that can be queried? \n  const languageSelectorData = allMdx.edges\n    .filter(({ node }) => {\n      //Drop the end slash, remove the locale, compare the string\n      //TODO(Rejon): This works for now, but can probably be optimized with a Regex solution.\n      const nodeURL = UrlConverter(node)\n        .replace(/^\\/|\\/$/g, \"\")\n        .split(\"/\")\n        .slice(1)\n        .join(\"/\");\n\n      return (\n        nodeURL === urlNoLocale &&\n        getLocaleFromPath(node.fileAbsolutePath) !== locale\n      );\n    })\n    .map(({ node }) => ({\n      value: UrlConverter(node),\n      label: t(\n        \"Language\",\n        null,\n        null,\n        getLocaleFromPath(node.fileAbsolutePath)\n      ),\n    }));\n\n  const statusProps =\n    typeof status === \"object\"\n      ? { children: status.text, ...status }\n      : { children: status };\n\n  const { pathname } = useLocation();\n  const path = pathname.split(\"/\");\n  const currentTopSection = path[2];\n\n  //For the sake of SEO we may want the page title to be based on the first h1 in our MDX file.\n  //if no title is specified in the metadata.\n  const getFirstHeading = () => {\n    //NOTE(Rejon): The children of layouts provided are MDX components!\n    //Find the first mdx child that's an H1\n    const firstHeading = Children.toArray(children).find(\n      (c) => c.props.mdxType === \"h1\"\n    );\n\n    //If we have an h1 in our file return it.\n    if (firstHeading !== undefined) {\n      return firstHeading.props.children;\n    }\n\n    return undefined;\n  };\n\n  //SEO page title priority is: frontmatter title -> First H1 in mdx -> Filename fallback from uri\n  //NOTE(Rejon): If the page is an index of a directory, the uri split will be the name of the directory. ie. /en/bounties -> bounties\n  const _pageTitle = title || getFirstHeading() || uri.split(\"/\").pop();\n\n  const hasTopSection =\n    currentTopSection !== undefined && currentTopSection !== \"\";\n\n  const renderSidenav = pageContext.frontmatter && !pageContext.frontmatter.hideSidenav && hasTopSection;\n  const renderLanguageSelector = hasTopSection && !hideLanguageSelector;\n  const renderBreadcrumbs = (!hideBreadcrumbs || (hasTopSection && !hideLanguageSelector));\n\n  const seo = {\n    title: _pageTitle,\n    description,\n    keywords,\n    featuredImage,\n  };\n\n  let contentWidthSubtract = renderLanguageSelector ? 234 : 0; //NOTE(Rejon): Based on word from design, language selector being hidden doesn't change content width.\n\n  if (renderSidenav) {\n    contentWidthSubtract += 256;\n  }\n\n\n  return (\n    <Fragment>\n      {renderSidenav\n          &&\n          <Box\n            sx={{\n              width: \"256px\",\n              display: [\"none\", \"none\", \"initial\"],\n            }}\n          >\n          <Sticky\n            boundaryElement=\".content-boundary\"\n            dontUpdateHolderHeightWhenSticky={true}\n            style={{ position: \"relative\" }}\n            hideOnBoundaryHit={false}\n            sx={{display: [\"none\", \"none\", \"initial\"]}}\n          >\n            <Sidenav data={sidenavData} currentPath={pagePath}/>\n          </Sticky>\n        </Box>\n      }\n      <Box as=\"article\" sx={{\n        width: ['100%', '100%', `calc(100% - ${contentWidthSubtract}px)`],\n        mt: hasTopSection ? [4, 4, \"59px\"] : 0,\n        pl: hasTopSection ? [4, 4, \"64px\"] : 0,\n        pr: hasTopSection ? [4, 4, 0] : 0,\n        pb: 4,\n        \n      }}>\n      <SEO {...seo} />\n      \n      {status && (\n        <Box sx={{ marginTop: hasTopSection ? 2 : 0 }}>\n          <StatusBanner sticky {...statusProps} sx={{ width: \"100%\" }} />\n        </Box>\n      )}\n      {renderBreadcrumbs && \n        <Flex\n          sx={{\n            justifyContent: \"space-between\",\n            position: \"relative\",\n            alignItems: \"flex-start\",\n            flexWrap: [\"wrap\", \"wrap\", \"unset\"],\n            px: !hasTopSection ? [3, 3, 0] : 0,\n          }}\n        >\n          <Breadcrumbs data={breadcrumbData} pathDirs={pathDirs}/>\n        </Flex>\n      }\n      <Box sx={{display: ['block', 'block', 'none']}}>\n        {/* MOBILE LANGUAGE SELECTOR */}\n        {renderLanguageSelector && <LanguageSelector data={languageSelectorData} pagePath={pagePath}/>}\n      </Box>\n      <Box>\n        {children}\n      </Box>\n      </Box>\n      \n      <Box sx={{display: ['none', 'none', 'block']}}>\n        {/* DESKTOP LANGUAGE SELECTOR */}\n        {renderLanguageSelector && <LanguageSelector data={languageSelectorData} pagePath={pagePath}/>}\n      </Box>\n      <MobileNav sidenavData={sidenavData}/>\n    </Fragment>\n  );\n};\n"],"sourceRoot":""}