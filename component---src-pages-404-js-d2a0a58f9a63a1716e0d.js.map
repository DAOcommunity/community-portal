{"version":3,"sources":["webpack:///./src/pages/404.js"],"names":["browser","window","PageLayout","children","seoTitle","t","sx","width","justifyContent","alignItems","py","title","flex","flexDirection","p","display","to","mt","onClick","navigate","disabled","hideExternalIcon","fontWeight","ml","cursor","height","src","NotFoundPage","useTranslation","locale","nodes","useStaticQuery","allMdx","page","find","fileAbsolutePath","indexOf","frontmatter","firstHeading","headings","length","value","body","fontSize","mb"],"mappings":"4FAAA,gIAYMA,EAA4B,oBAAXC,QAA0BA,OAG3CC,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,SAAUC,EAAvB,EAAuBA,EAAvB,OACjB,YAAC,IAAD,CACEC,GAAI,CACFC,MAAO,OACPC,eAAgB,SAChBC,WAAY,SACZC,GAAI,SAGN,YAAC,IAAD,CAAKC,MAAOP,IACZ,YAAC,IAAD,CACEE,GAAI,CACFM,KAAM,EACNC,cAAe,SACfC,EAAG,KACHP,MAAO,OACPQ,QAAS,iBAGVZ,EACD,YAAC,IAAD,KACE,YAAC,IAAD,CACEa,GAAI,sDACJV,GAAI,CACFS,QAAS,eACTE,GAAI,QAGLZ,EAAE,eAEL,YAAC,IAAD,CACEa,QAAS,WACPC,oBAAU,IAEZC,UAAU,EACVC,kBAAkB,EAClBf,GAAI,CACFgB,WAAY,OACZP,QAAS,eACTQ,GAAI,OACJC,OAAQ,YAGTnB,EAAE,cAIT,YAAC,IAAD,CACEC,GAAI,CAAEC,MAAO,QAASkB,OAAQ,QAASV,QAAS,gBAChDW,IACE,iIA+DOC,UAzDM,WAAO,IAAD,EACHC,cAAdC,EADiB,EACjBA,OAAQxB,EADS,EACTA,EAIAyB,EAAUC,yBAAe,cAAjCC,OAmBR,IAAKhC,EACH,OAAO,+BAGT,IAAMiC,EAAOH,EAAMA,MAAMI,MACvB,mBAAuE,IAAvE,EAAGC,iBAAwCC,QAAjB,IAA6BP,EAA7B,QAGtBlB,EAAQsB,GAAQA,EAAKI,YAAcJ,EAAKI,YAAY1B,MAAQ,KAC5D2B,EACJL,GAAQA,EAAKM,SAASC,OAAS,EAAIP,EAAKM,SAAS,GAAGE,MAAQ,KAGxDrC,EAAWO,GAAS2B,GAAgBjC,EAAE,OAE5C,OACE,YAACH,EAAD,CAAYE,SAAUA,EAAUC,EAAGA,GAChC4B,EACC,YAAC,cAAD,KAAcA,EAAKS,MAEnB,YAAC,IAAD,CAAKpC,GAAI,CAAEqC,SAAU,UACnB,YAAC,IAAD,CAAMrC,GAAI,CAAEqC,SAAU,MAAO1B,GAAI,MAAO2B,GAAI,UAA5C,OACA,YAAC,IAAD,CAAKtC,GAAI,CAAEW,GAAI,MAAO2B,GAAI,QAA1B,oDAEE,uBACA,uBAHF","file":"component---src-pages-404-js-d2a0a58f9a63a1716e0d.js","sourcesContent":["//** @jsx jsx */\nimport React from \"react\";\n\nimport { SEO } from \"@modules/utility\";\nimport { Box, Flex, Text, Image, jsx } from \"theme-ui\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { MDXRenderer } from \"gatsby-plugin-mdx\";\nimport { navigate } from \"@reach/router\";\nimport Button from \"@modules/ui/Button\";\n\nimport { useTranslation } from \"@modules/localization\";\n\nconst browser = typeof window !== \"undefined\" && window; //<- This is to stop 404 flashes on route fallbacks.\n\n//404Page Wrapper\nconst PageLayout = ({ children, seoTitle, t }) => (\n  <Flex\n    sx={{\n      width: \"100%\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      py: \"77px\",\n    }}\n  >\n    <SEO title={seoTitle} />\n    <Flex\n      sx={{\n        flex: 2,\n        flexDirection: \"column\",\n        p: \"5%\",\n        width: \"100%\",\n        display: \"inline-block\",\n      }}\n    >\n      {children}\n      <Box>\n        <Button\n          to={\"https://github.com/makerdao/community-portal/issues\"}\n          sx={{\n            display: \"inline-block\",\n            mt: \"5px\",\n          }}\n        >\n          {t(\"Bug_Report\")}\n        </Button>\n        <Text\n          onClick={() => {\n            navigate(-1);\n          }}\n          disabled={true}\n          hideExternalIcon={true}\n          sx={{\n            fontWeight: \"bold\",\n            display: \"inline-block\",\n            ml: \"15px\",\n            cursor: \"pointer\",\n          }}\n        >\n          {t(\"Go_Back\")}\n        </Text>\n      </Box>\n    </Flex>\n    <Image\n      sx={{ width: \"400px\", height: \"400px\", display: \"inline-block\" }}\n      src={\n        \"https://cdn.shopify.com/s/files/1/0010/0994/2575/products/2046-60-mistyteal_3472a883-658e-4f06-b350-387a8eafa4ae_2000x.png\"\n      }\n    />\n  </Flex>\n);\n\nconst NotFoundPage = () => {\n  const { locale, t } = useTranslation();\n  //NOTE(Rejon): I could do a gatsby-node and programmatically create these pages.\n  //             But there's a chance that a missing 404 in the content folder will break the app.\n  //             I'll take the L.\n  const { allMdx: nodes } = useStaticQuery(graphql`\n    query Get404Pages {\n      allMdx(\n        filter: { fileAbsolutePath: { regex: \"//([\\\\\\\\w]{2})/404.mdx$/\" } }\n      ) {\n        nodes {\n          headings(depth: h1) {\n            value\n          }\n          fileAbsolutePath\n          body\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  `);\n\n  if (!browser) {\n    return <></>;\n  }\n\n  const page = nodes.nodes.find(\n    ({ fileAbsolutePath }) => fileAbsolutePath.indexOf(`/${locale}/`) !== -1\n  );\n\n  const title = page && page.frontmatter ? page.frontmatter.title : null;\n  const firstHeading =\n    page && page.headings.length > 0 ? page.headings[0].value : null;\n\n  //Use the Title Rule. Else just use a hardcoded value.\n  const seoTitle = title || firstHeading || t(\"404\");\n\n  return (\n    <PageLayout seoTitle={seoTitle} t={t}>\n      {page ? (\n        <MDXRenderer>{page.body}</MDXRenderer>\n      ) : (\n        <Box sx={{ fontSize: \"1.5em\" }}>\n          <Text sx={{ fontSize: \"2em\", mt: \"1em\", mb: \".75em\" }}>404</Text>\n          <Box sx={{ mt: \"1em\", mb: \"1em\" }}>\n            Uh oh, the page you're looking for doesn't exist.\n            <br />\n            <br />\n            Think something's broken on our end?\n          </Box>\n        </Box>\n      )}\n    </PageLayout>\n  );\n};\nexport default NotFoundPage;\n"],"sourceRoot":""}