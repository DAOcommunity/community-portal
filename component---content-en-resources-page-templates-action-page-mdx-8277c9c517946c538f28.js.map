{"version":3,"sources":["webpack:///./content/en/resources/page-templates/action-page.mdx","webpack:///./src/modules/layouts/mdx_layout.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","CTA","Link","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","to","isMDXComponent","useTranslation","locale","t","DEFAULT_LOCALE","allMdx","useStaticQuery","children","pageContext","uri","pagePath","frontmatter","title","description","keywords","featuredImage","status","hideLanguageSelector","hideBreadcrumbs","pathDirs","replace","split","slice","urlNoLocale","join","log","calculateTreeData","edges","sidenavData","breadcrumbData","languageSelectorData","filter","node","UrlConverter","getLocaleFromPath","fileAbsolutePath","map","value","label","statusProps","text","currentTopSection","useLocation","pathname","_pageTitle","firstHeading","Children","toArray","find","c","undefined","getFirstHeading","pop","hasTopSection","renderSidenav","hideSidenav","renderLanguageSelector","renderBreadcrumbs","seo","contentWidthSubtract","sx","width","display","boundaryElement","dontUpdateHolderHeightWhenSticky","style","position","hideOnBoundaryHit","data","currentPath","as","mt","pl","pr","pb","marginTop","sticky","justifyContent","alignItems","flexWrap","px"],"mappings":"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","file":"component---content-en-resources-page-templates-action-page-mdx-8277c9c517946c538f28.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/community-portal/community-portal/src/modules/layouts/mdx_layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst CTA = makeShortcode(\"CTA\");\nconst Link = makeShortcode(\"Link\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`Action Page`}</h1>\n    <h2>{`Work With Us Example: Translations`}</h2>\n    <h2>{`Page purpose`}</h2>\n    <p>{`Funnel a user into an action, for example joining the translation team, suggesting new content or viewing open bounties.`}</p>\n    <h2>{`Page structure`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Intro section`}</li>\n      <li parentName=\"ol\">{`Outline requirements`}</li>\n      <li parentName=\"ol\">{`Funnel users into tasks with CTAs`}</li>\n      <li parentName=\"ol\">{`Explain payment`}</li>\n      <li parentName=\"ol\">{`Provide resources / related links in case a user has taken a wrong turn`}</li>\n    </ol>\n    <h2><strong parentName=\"h2\">{`Page title`}</strong></h2>\n    <p>{`These pages live under \"Work with us\" – explain in the title how the users can work with us –for example: Content, Bounties, Translations. These are hopefully keywords users are looking for.`}</p>\n    <h2><strong parentName=\"h2\">{`Intro`}</strong></h2>\n    <p>{`This intro should situate the user and explain what they can do on this page. Be sure to address the user and explain what they can do here rather than talking from Maker's perspective. Remember you're talking directly to our users.`}</p>\n    <p>{`For example:`}</p>\n    <p><em parentName=\"p\">{`Bounties are small to medium tasks that we need help with. They mostly cover work related to this site. You can earn Dai by completing bounties.`}</em></p>\n    <h2>{`Requirements`}</h2>\n    <p>{`If this section includes an application page, it's likely you'll have requirements on that page. However if it's a task like helping out with Bounties, the main call to action is to view open bounties and express interest in the chat. So it's important we surface some basic requirements on this page so a user knows whether to bother.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"../../images/bounties-requirements.png\",\n        \"alt\": \"Bounties Requirements\"\n      }}></img></p>\n    <h2>{`Call to action`}</h2>\n    <p>{`If this section or page has an associated call to action, these should be placed shortly after the introduction so that users can quickly identify that they'll be achieve what they set out to do on this page.`}</p>\n    <p>{`The call to action should explain to the user how they can start work. This might be to start an application process or to express interest in a chat.`}</p>\n    <CTA mdxType=\"CTA\">\n      <h3>{`Start Work`}</h3>\n      <p>{`If you think you meet all the requirements, you're ready to start work. As soon as you spot a bounty you'd like to work on, let us know in the chat. Form there we can assign folks from the community to help you get started and get to know the Maker Community.`}</p>\n      <Link to=\"chat.makerdao.com/channel/community-development\" mdxType=\"Link\">Community Chat</Link>\n    </CTA>\n    <p>{`On some pages like Content there may be two possible calls to action:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Write new content`}</li>\n      <li parentName=\"ul\">{`Edit content`}</li>\n    </ul>\n    <p>{`In this case, have two sections that outline the two different tasks and their calls to action.`}</p>\n    <h2>{`Discuss payment`}</h2>\n    <p>{`One of the selling points of contributing to the community is the possibility to earn Dai. It's likely that this will be top of mind for anyone interested in working with us. Outline how payment works to not only encourage contribution but avoid questions down the line.`}</p>\n    <h2>{`Resources`}</h2>\n    <p>{`If there are resources that will help users with this contribution method, it's worth linking to it here. Things like the writing style guide would be useful links on both the Content and Bounties page.`}</p>\n    <h2>{`Related links and suggested reading`}</h2>\n    <p>{`One thing to consider at the bottom of the page is if the user hasn't found what they're looking for, is there something else you can suggest they try?`}</p>\n    <p>{`For example on the Bounties page, some users might be thinking bigger so it's a good idea to link them to Community projects.`}</p>\n    <p>{`Some suggested reading is a good idea for linking to content that helps set user expectations about this particular contribution method.`}</p>\n    <p>{`For example: on the bounties page you might want to link to the page about the process for working on a bounty`}</p>\n    <p>{`As a rule of thumb this gives you the opportunity to link to other pages within the section.`}</p>\n    <p><strong parentName=\"p\">{`This section will signal to the user that it's the end of the page/ information on the topic`}</strong>{`. Where we direct the user next is important so this section should always anticipate: `}<em parentName=\"p\">{`if I haven't found what I'm looking for so far, what else might I be interested in?`}</em></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport {Children, Fragment} from 'react';\nimport { Box, Flex, jsx } from \"theme-ui\";\nimport Sticky from \"react-sticky-el\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\n\nimport {MobileNav} from '@modules/navigation';\nimport { useTranslation } from \"@modules/localization/\";\nimport { LanguageSelector } from \"@modules/localization\";\nimport { Sidenav, Breadcrumbs } from \"@modules/navigation\";\nimport { StatusBanner } from \"@modules/ui\";\nimport calculateTreeData from \"@modules/navigation/calculateTreeData\";\nimport { SEO } from \"@modules/utility\";\nimport { UrlConverter, getLocaleFromPath } from \"@utils\";\n\nexport default (props) => {\n  const { locale, t, DEFAULT_LOCALE } = useTranslation();\n\n  const { allMdx } = useStaticQuery(graphql`\n    query getMDXData {\n      # Regex for all files that are NOT config files\n      allMdx(\n        filter: {\n          fileAbsolutePath: {\n            regex: \"//([\\\\\\\\w]{2})/(?!header.mdx|index.mdx|sidenav.mdx|example.mdx|social.mdx|footer.mdx|404.mdx|.js|.json)/\"\n          }\n        }\n      ) {\n        edges {\n          node {\n            headings(depth: h1) {\n              value\n            }\n            fileAbsolutePath\n            frontmatter {\n              title\n              order\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const { children, pageContext, uri } = props;\n\n  const {pagePath} = pageContext; \n  const {\n    title,\n    description,\n    keywords,\n    featuredImage,\n    status,\n    hideLanguageSelector,\n    hideBreadcrumbs,\n  } = pageContext.frontmatter;\n\n  const pathDirs = pagePath.replace(/^\\/|\\/$/g, \"\").split(\"/\").slice(1);\n  const urlNoLocale = pathDirs.join(\"/\");\n  console.log(pathDirs[0]);\n  const { sidenavData, breadcrumbData } = calculateTreeData(\n    allMdx.edges,\n    pathDirs[0],\n    DEFAULT_LOCALE,\n    locale,\n    pathDirs\n  );\n\n  //NOTE(Rejon): Must be in the shape that React Select expects for it's options.\n  //Something that can be queried? \n  const languageSelectorData = allMdx.edges\n    .filter(({ node }) => {\n      //Drop the end slash, remove the locale, compare the string\n      //TODO(Rejon): This works for now, but can probably be optimized with a Regex solution.\n      const nodeURL = UrlConverter(node)\n        .replace(/^\\/|\\/$/g, \"\")\n        .split(\"/\")\n        .slice(1)\n        .join(\"/\");\n\n      return (\n        nodeURL === urlNoLocale &&\n        getLocaleFromPath(node.fileAbsolutePath) !== locale\n      );\n    })\n    .map(({ node }) => ({\n      value: UrlConverter(node),\n      label: t(\n        \"Language\",\n        null,\n        null,\n        getLocaleFromPath(node.fileAbsolutePath)\n      ),\n    }));\n\n  const statusProps =\n    typeof status === \"object\"\n      ? { children: status.text, ...status }\n      : { children: status };\n\n  const { pathname } = useLocation();\n  const path = pathname.split(\"/\");\n  const currentTopSection = path[2];\n\n  //For the sake of SEO we may want the page title to be based on the first h1 in our MDX file.\n  //if no title is specified in the metadata.\n  const getFirstHeading = () => {\n    //NOTE(Rejon): The children of layouts provided are MDX components!\n    //Find the first mdx child that's an H1\n    const firstHeading = Children.toArray(children).find(\n      (c) => c.props.mdxType === \"h1\"\n    );\n\n    //If we have an h1 in our file return it.\n    if (firstHeading !== undefined) {\n      return firstHeading.props.children;\n    }\n\n    return undefined;\n  };\n\n  //SEO page title priority is: frontmatter title -> First H1 in mdx -> Filename fallback from uri\n  //NOTE(Rejon): If the page is an index of a directory, the uri split will be the name of the directory. ie. /en/bounties -> bounties\n  const _pageTitle = title || getFirstHeading() || uri.split(\"/\").pop();\n\n  const hasTopSection =\n    currentTopSection !== undefined && currentTopSection !== \"\";\n\n  const renderSidenav = pageContext.frontmatter && !pageContext.frontmatter.hideSidenav && hasTopSection;\n  const renderLanguageSelector = hasTopSection && !hideLanguageSelector;\n  const renderBreadcrumbs = (!hideBreadcrumbs || (hasTopSection && !hideLanguageSelector));\n\n  const seo = {\n    title: _pageTitle,\n    description,\n    keywords,\n    featuredImage,\n  };\n\n  let contentWidthSubtract = renderLanguageSelector ? 234 : 0; //NOTE(Rejon): Based on word from design, language selector being hidden doesn't change content width.\n\n  if (renderSidenav) {\n    contentWidthSubtract += 256;\n  }\n\n\n  return (\n    <Fragment>\n      {renderSidenav\n          &&\n          <Box\n            sx={{\n              width: \"256px\",\n              display: [\"none\", \"none\", \"initial\"],\n            }}\n          >\n          <Sticky\n            boundaryElement=\".content-boundary\"\n            dontUpdateHolderHeightWhenSticky={true}\n            style={{ position: \"relative\" }}\n            hideOnBoundaryHit={false}\n            sx={{display: [\"none\", \"none\", \"initial\"]}}\n          >\n            <Sidenav data={sidenavData} currentPath={pagePath}/>\n          </Sticky>\n        </Box>\n      }\n      <Box as=\"article\" sx={{\n        width: ['100%', '100%', `calc(100% - ${contentWidthSubtract}px)`],\n        mt: hasTopSection ? [4, 4, \"59px\"] : 0,\n        pl: hasTopSection ? [4, 4, \"64px\"] : 0,\n        pr: hasTopSection ? [4, 4, 0] : 0,\n        pb: 4,\n        \n      }}>\n      <SEO {...seo} />\n      \n      {status && (\n        <Box sx={{ marginTop: hasTopSection ? 2 : 0 }}>\n          <StatusBanner sticky {...statusProps} sx={{ width: \"100%\" }} />\n        </Box>\n      )}\n      {renderBreadcrumbs && \n        <Flex\n          sx={{\n            justifyContent: \"space-between\",\n            position: \"relative\",\n            alignItems: \"flex-start\",\n            flexWrap: [\"wrap\", \"wrap\", \"unset\"],\n            px: !hasTopSection ? [3, 3, 0] : 0,\n          }}\n        >\n          <Breadcrumbs data={breadcrumbData} pathDirs={pathDirs}/>\n        </Flex>\n      }\n      <Box sx={{display: ['block', 'block', 'none']}}>\n        {/* MOBILE LANGUAGE SELECTOR */}\n        {renderLanguageSelector && <LanguageSelector data={languageSelectorData} pagePath={pagePath}/>}\n      </Box>\n      <Box>\n        {children}\n      </Box>\n      </Box>\n      \n      <Box sx={{display: ['none', 'none', 'block']}}>\n        {/* DESKTOP LANGUAGE SELECTOR */}\n        {renderLanguageSelector && <LanguageSelector data={languageSelectorData} pagePath={pagePath}/>}\n      </Box>\n      <MobileNav sidenavData={sidenavData}/>\n    </Fragment>\n  );\n};\n"],"sourceRoot":""}