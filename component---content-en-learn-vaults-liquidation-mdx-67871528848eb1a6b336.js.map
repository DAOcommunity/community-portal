{"version":3,"sources":["webpack:///./content/en/learn/vaults/liquidation.mdx","webpack:///./src/modules/layouts/site_layout.js","webpack:///./src/modules/layouts/mdx_layout.js"],"names":["name","_frontmatter","Tout","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent","Layout","children","seo","sx","flexDirection","minHeight","height","as","maxWidth","flex","width","m","pr","pt","position","className","pageContext","uri","frontmatter","title","description","keywords","featuredImage","status","hideLanguageSelector","hideSidenav","hideBreadcrumbs","statusProps","text","currentTopSection","useLocation","pathname","split","hasTopSection","undefined","renderSidenav","firstHeading","React","Children","toArray","find","c","getFirstHeading","pop","boundaryElement","minWidth","display","dontUpdateHolderHeightWhenSticky","style","hideOnBoundaryHit","flexGrow","pl","mt","pb","marginTop","sticky","justifyContent","alignItems","flexWrap","px","lineHeight","mb"],"mappings":"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","file":"component---content-en-learn-vaults-liquidation-mdx-67871528848eb1a6b336.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/rejon/community-portal/src/modules/layouts/mdx_layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Tout = makeShortcode(\"Tout\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`Liquidation`}</h1>\n    <p>{`Liquidation is the process of selling collateral to cover the amount of Dai a user has generated from their Vault.`}</p>\n    <p>{`Liquidation helps to ensure that Dai is always backed by an appropriate amount of collateral by closing-out Vaults that are under their minimum required Collateralization Ratio for their given collateral type.`}</p>\n    <h2>{`How Liquidation Works`}</h2>\n    <p>{`A Vault can be liquidated if the value of its collateral falls below the required minimum level, called the Liquidation Ratio.`}</p>\n    <p>{`To make sure that the required surplus of collateral exists at all times, a class of users called Keepers are incentivized to maintain a constant watch for Vaults that become under-collateralized.`}</p>\n    <p>{`During the Liquidation process, enough collateral is sold to cover the debt along with a Liquidation Penalty, leaving the remaining collateral available for withdrawal.`}</p>\n    <h2>{`Liquidation Ratio`}</h2>\n    <p>{`The Liquidation Ratio is the minimum required collateralization level for each Vault type before it is considered undercollateralized and subject to Liquidation.`}</p>\n    <p>{`The Maker Protocol’s Oracles provide the system with pricing data that is used to track Vaults for when their Liquidation Ratio is breached. Once breached, they are available for Liquidation.`}</p>\n    <p>{`Each Vault type’s Liquidation Ratio is determined by a combination of the collateral’s risk profile and the Stability Fee. There may be multiple Vault types for each collateral, with varying Liquidation Ratios and Stability Fees.`}</p>\n    <p>{`The Liquidation Ratio of a Vault is typically displayed on front-ends that offer Vaults. To calculate a Liquidation Ratio, simply use the following formula`}</p>\n    <Tout mdxType=\"Tout\">\n      <p>{`Liquidation Ratio = (Collateral Amount x Collateral Price) ÷ Generated Dai × 100`}</p>\n    </Tout>\n    <h3>{`Example`}</h3>\n    <p>{`For example, a Vault with a 150% Liquidation Ratio will require a minimum $1.50 of collateral value for every $1 of Dai generated.`}</p>\n    <p>{`If the value of the collateral falls to \\\\$1.49 it will be Liquidated to cover the generated Dai in addition to a fee called the Liquidation Penalty.`}</p>\n    <h2>{`Liquidation Price`}</h2>\n    <p>{`The Liquidation Price is the price at which a Vault becomes vulnerable to liquidation.`}</p>\n    <p>{`Vault owners can lower their liquidation price by adding more collateral or returning Dai to the Vault.`}</p>\n    <p>{`The Liquidation Price of a Vault is typically displayed on front-ends that offer Vaults. To calculate a Liquidation Price, simply use the following formula:`}</p>\n    <Tout mdxType=\"Tout\">\n      <p>{`Liquidation Price = (Generated Dai `}{`*`}{` Liquidation Ratio) / (Amount of Collateral)`}</p>\n    </Tout>\n    <h2>{`Liquidation Penalty`}</h2>\n    <p>{`A Liquidation Penalty is a fee paid by Vault owners when the value of their collateral reaches the Vault's Liqudation Price.`}</p>\n    <p>{`The Liquidation Penalty is added to the Vault’s total outstanding generated DAI when liquidation occurs, which results in more collateral being sold at auction.`}</p>\n    <p>{`Proceeds from Liquidation Penalties are put towards the Surplus Auctions, which result in burned MKR.`}</p>\n    <p>{`Liquidation Penalties prevent `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/livnev/auction-grinding/blob/master/grinding.pdf\"\n      }}>{`Auction Grinding Attacks`}</a>{`, which allow an attacker to break the Maker Protocol's auction mechanism and exploit the Maker Protocol for profit.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","//** @jsx jsx */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Flex, jsx } from \"theme-ui\";\nimport { SEO } from \"@modules/utility\";\n\nimport { Header, Footer, NavigationProvider } from \"@modules/navigation\";\n\nconst Layout = ({ children, seo }) => (\n  <NavigationProvider>\n    <Flex\n      sx={{\n        flexDirection: \"column\",\n        minHeight: \"100vh\",\n        height: \"100%\",\n      }}\n    >\n      <SEO {...seo} />\n      <Header />\n      <Flex\n        as=\"main\"\n        sx={{\n          maxWidth: \"1364px\",\n          flex: \"1 0 auto\",\n          width: \"100%\",\n          m: \"0 auto\",\n          pr: 0,\n          pt: [\"90px\", \"90px\", \"unset\"],\n          position: \"relative\",\n        }}\n        className=\"content-boundary\"\n      >\n        {children}\n      </Flex>\n      <Footer />\n    </Flex>\n  </NavigationProvider>\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","/** @jsx jsx */\nimport React from \"react\";\nimport { Box, Flex, jsx } from \"theme-ui\";\nimport Sticky from \"react-sticky-el\";\nimport { useLocation } from \"@reach/router\";\n\nimport Layout from \"@modules/layouts/site_layout\";\nimport { LanguageSelector } from \"@modules/localization\";\nimport { Sidenav, Breadcrumbs } from \"@modules/navigation\";\nimport { StatusBanner } from \"@modules/ui\";\n\nexport default (props) => {\n  const { children, pageContext, uri } = props;\n  const {\n    title,\n    description,\n    keywords,\n    featuredImage,\n    status,\n    hideLanguageSelector,\n    hideSidenav,\n    hideBreadcrumbs,\n  } = pageContext.frontmatter;\n\n  const statusProps =\n    typeof status === \"object\"\n      ? { children: status.text, ...status }\n      : { children: status };\n\n  const { pathname } = useLocation();\n  const path = pathname.split(\"/\");\n  const currentTopSection = path[2];\n\n  //For the sake of SEO we may want the page title to be based on the first h1 in our MDX file.\n  //if no title is specified in the metadata.\n  const getFirstHeading = () => {\n    //NOTE(Rejon): The children of layouts provided are MDX components!\n    //Find the first mdx child that's an H1\n    const firstHeading = React.Children.toArray(children).find(\n      (c) => c.props.mdxType === \"h1\"\n    );\n\n    //If we have an h1 in our file return it.\n    if (firstHeading !== undefined) {\n      return firstHeading.props.children;\n    }\n\n    return undefined;\n  };\n\n  //SEO page title priority is: frontmatter title -> First H1 in mdx -> Filename fallback from uri\n  //NOTE(Rejon): If the page is an index of a directory, the uri split will be the name of the directory. ie. /en/bounties -> bounties\n  const _pageTitle = title || getFirstHeading() || uri.split(\"/\").pop();\n\n  const hasTopSection =\n    currentTopSection !== undefined && currentTopSection !== \"\";\n  const renderSidenav = hasTopSection && !hideSidenav;\n\n  const seo = {\n    title: _pageTitle,\n    description,\n    keywords,\n    featuredImage,\n  };\n\n  return (\n    <Layout seo={seo}>\n      {renderSidenav && (\n        <Sticky\n          boundaryElement=\".content-boundary\"\n          sx={{\n            width: \"20%\",\n            minWidth: \"260px\",\n            display: [\"none\", \"none\", \"initial\"],\n          }}\n          dontUpdateHolderHeightWhenSticky={true}\n          style={{ position: \"relative\" }}\n          hideOnBoundaryHit={false}\n        >\n          <Sidenav />\n        </Sticky>\n      )}\n\n      <Flex sx={{ flexGrow: 1, flexDirection: \"column\" }}>\n        <article\n          sx={{\n            pl: hasTopSection ? [4, 4, \"64px\"] : 0,\n            mt: hasTopSection ? [4, 4, \"59px\"] : 0,\n            pb: 4,\n            pr: hasTopSection ? 4 : 0,\n          }}\n        >\n          {status && (\n            <Box sx={{ marginTop: hasTopSection ? 2 : 0 }}>\n              <StatusBanner sticky {...statusProps} sx={{ width: \"100%\" }} />\n            </Box>\n          )}\n          {(!hideBreadcrumbs || (hasTopSection && !hideLanguageSelector)) && (\n            <Flex\n              sx={{\n                justifyContent: \"space-between\",\n                position: \"relative\",\n                alignItems: \"flex-start\",\n                flexWrap: [\"wrap\", \"wrap\", \"unset\"],\n                mt: !renderSidenav ? \"2rem\" : \"\",\n                px: !hasTopSection ? [3, 3, 0] : 0,\n              }}\n            >\n              {!hideBreadcrumbs && <Breadcrumbs />}\n              {hasTopSection && !hideLanguageSelector && <LanguageSelector />}\n            </Flex>\n          )}\n          <Box\n            sx={\n              hasTopSection && !hideLanguageSelector\n                ? {\n                    \"& > *:nth-child(1)\": {\n                      lineHeight: \"normal\",\n                    },\n                    \"& > *:nth-child(1), & > *:nth-child(2)\": {\n                      maxWidth: [\"100%\", \"100%\", \"calc(100% - 234px - 1rem)\"],\n                    },\n                    \"& > *:nth-child(2)\": { mb: \"32px\" },\n                  }\n                : {}\n            }\n          >\n            {children}\n          </Box>\n        </article>\n      </Flex>\n    </Layout>\n  );\n};\n"],"sourceRoot":""}