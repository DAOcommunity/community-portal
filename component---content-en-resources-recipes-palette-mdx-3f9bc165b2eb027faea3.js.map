{"version":3,"sources":["webpack:///./content/en/resources/recipes/palette.mdx","webpack:///./src/modules/layouts/mdx_layout.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","Accordion","Aligner","Image","Callout","Authors","Box","Button","Checklist","Chocolate","Icon","Code","Column","InfoBlock","List","Link","Process","StatusBanner","Tout","Video","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","center","sx","height","width","src","bottom","right","variant","icon","all","list","author","to","disabled","inline","secondary","outline","small","size","warning","sticky","isMDXComponent","children","pageContext","uri","frontmatter","title","description","keywords","featuredImage","status","hideLanguageSelector","hideBreadcrumbs","statusProps","text","currentTopSection","useLocation","pathname","split","hasTopSection","undefined","seo","firstHeading","Children","toArray","find","c","getFirstHeading","pop","marginTop","justifyContent","position","alignItems","flexWrap","px","lineHeight","maxWidth","mb"],"mappings":"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","file":"component---content-en-resources-recipes-palette-mdx-3f9bc165b2eb027faea3.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/community-portal/community-portal/src/modules/layouts/mdx_layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Accordion = makeShortcode(\"Accordion\");\nconst Aligner = makeShortcode(\"Aligner\");\nconst Image = makeShortcode(\"Image\");\nconst Callout = makeShortcode(\"Callout\");\nconst Authors = makeShortcode(\"Authors\");\nconst Box = makeShortcode(\"Box\");\nconst Button = makeShortcode(\"Button\");\nconst Checklist = makeShortcode(\"Checklist\");\nconst Chocolate = makeShortcode(\"Chocolate\");\nconst Icon = makeShortcode(\"Icon\");\nconst Code = makeShortcode(\"Code\");\nconst Column = makeShortcode(\"Column\");\nconst InfoBlock = makeShortcode(\"InfoBlock\");\nconst List = makeShortcode(\"List\");\nconst Link = makeShortcode(\"Link\");\nconst Process = makeShortcode(\"Process\");\nconst StatusBanner = makeShortcode(\"StatusBanner\");\nconst Tout = makeShortcode(\"Tout\");\nconst Video = makeShortcode(\"Video\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`Component Palette`}</h1>\n    <h4>{`This page serves as a palette for all the components this project has to offer.`}</h4>\n    <p>{`If you want to know where we started and `}<strong parentName=\"p\">{`why`}</strong>{` components exist see `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.notion.so/Components-e4455d1797f74c48aae3019692a39413\"\n      }}>{`this`}</a>{`.`}</p>\n    <hr></hr>\n    <h4>{`Definitions`}</h4>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`WYSIWYG`}</strong>{`: What you see is what you get.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Component`}</strong>{`: A lego block like code element you can use for more advanced content like buttons.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`MD`}</strong>{`: Shorthand for Markdown`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`MDX`}</strong>{`: Shorthand for MarkdownExtended (ie. MDX is the name of the rendering engine we use.)`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Child/Children`}</strong>{`: Content that is wrapped by a Component. New lines between content will be recognized as a new child.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Child Rule`}</strong>{`: A pattern introduced for more complex components that recognized each individual child as a repeatable element of a component. (ie. List, InfoBlock, ect.)`}</p>\n      </li>\n    </ul>\n    <hr></hr>\n    <h4>{`Disclaimers`}</h4>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`To see dark/light mode variants click the moon/sun in the header`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`This palette is primarily to showcase component usage in a vacuum. See the `}<a parentName=\"p\" {...{\n            \"href\": \"/resources/frankenstein\"\n          }}>{`Frankenstein page`}</a>{` for advanced usages.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`For an in-depth on props available for these components please see the `}<a parentName=\"p\" {...{\n            \"href\": \"/resources/content/cheatsheet\"\n          }}>{`Cheatsheet`}</a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Any component that's not listed here, but exists in the project`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Always remember. What you see is what you get. (WYSIWYG). We follow the markdown spec and will `}<strong parentName=\"p\">{`NOT`}</strong>{` deviate from it.`}</p>\n      </li>\n    </ul>\n    <hr></hr>\n    <h2>{`Accordion`}</h2>\n    <p>{`Click the Accordion header to show and hide the content it offers.`}</p>\n    <p>{`The First element is always the header. Every other element will be hidden away.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`<Accordion>Hello World This is hidden inside the Accordion.</Accordion>\n`}</code></pre>\n    <hr></hr>\n    <Accordion mdxType=\"Accordion\">\n      <p>{`Hello World`}</p>\n      <p>{`This is hidden inside the Accordion.`}</p>\n    </Accordion>\n    <hr></hr>\n    <h2>{`Aligner`}</h2>\n    <p>{`This is a utility component built to work with the `}<inlineCode parentName=\"p\">{`Image`}</inlineCode>{` component.`}</p>\n    <p><strong parentName=\"p\">{`Dev Note (Réjon): This component exists because remark-images wraps our elements automatically with styles that make it difficult to align an image. It only really works well if the container of the image is large enough to facilitate it.`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`<Aligner center sx={{height: '400px', width: '100%'}}>\n\n<Image src=\"/images/starfox.png\" />\n\n</Aligner>\n\n<Aligner bottom right sx={{height: '400px', width: '100%'}}>\n\n![starfox](/images/starfox.png)\n\n</Aligner>\n`}</code></pre>\n    <hr></hr>\n    <Aligner center sx={{\n      height: '400px',\n      width: '100%'\n    }} mdxType=\"Aligner\">\n      <Image src=\"/images/starfox.png\" mdxType=\"Image\" />\n    </Aligner>\n    <Aligner bottom right sx={{\n      height: '400px',\n      width: '100%'\n    }} mdxType=\"Aligner\">\n      <p><img parentName=\"p\" {...{\n          \"src\": \"/images/starfox.png\",\n          \"alt\": \"starfox\"\n        }}></img></p>\n    </Aligner>\n    <hr></hr>\n    <h2>{`Authors`}</h2>\n    <Callout variant=\"warning\" icon=\"warning\" mdxType=\"Callout\">\n      <h4>{`Child Rule in Effect`}</h4>\n    </Callout>\n    <p>{`This is a utility component originally built to display the AllContributors grid.\nYet, it also serves as good way for folks to set an author at the end of a page.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`<Authors all/>\n\n<Authors list author=\"@MaximumCrash\"/>\n`}</code></pre>\n    <hr></hr>\n    <Authors all mdxType=\"Authors\" />\n    <Authors list author=\"@MaximumCrash\" mdxType=\"Authors\" />\n    <hr></hr>\n    <p>{`It's also possible to render a custom author by filling out the correct information like so:`}</p>\n    <p><strong parentName=\"p\">{`Dev Note(Réjon): You MUST fill out the information EXACTLY how it's written below to get a custom author to render with the correct information.`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`<Authors list>\n  <Box>\n    ![Réjon](/images/starfox.png) [Réjon Taylor-Foster](https://rejontaylor.com)\n    [Another Test](https://github.com) [Twitter](https://twitter.com)\n    [Medium](https://medium.com) # Réjon Taylor-Foster ## Lorem ipsum dolor sit\n    amet, consectetur adipiscing elit. Donec pharetra quam augue. Nulla\n    facilisi. Ut sed volutpat nisl. Cras eget nunc sed erat malesuada faucibus.\n    Donec non vehicula elit. Interdum et malesuada fames ac ante ipsum primis in\n    faucibus. Sed blandit imperdiet maximus. In hac habitasse platea dictumst.\n    Sed id luctus justo. Morbi in tortor et quam lacinia finibus ac in quam.\n    Suspendisse mollis efficitur dui eu laoreet. ### MaximumCrash - ideas -\n    audio - doc - 👀 - 💦\n  </Box>\n</Authors>\n`}</code></pre>\n    <Authors list mdxType=\"Authors\">\n      <Box mdxType=\"Box\">\n        <p><img parentName=\"p\" {...{\n            \"src\": \"/images/starfox.png\",\n            \"alt\": \"Réjon\"\n          }}></img></p>\n        <p><a parentName=\"p\" {...{\n            \"href\": \"https://rejontaylor.com\"\n          }}>{`Réjon Taylor-Foster`}</a></p>\n        <p><a parentName=\"p\" {...{\n            \"href\": \"https://github.com\"\n          }}>{`Another Test`}</a></p>\n        <p><a parentName=\"p\" {...{\n            \"href\": \"https://twitter.com\"\n          }}>{`Twitter`}</a></p>\n        <p><a parentName=\"p\" {...{\n            \"href\": \"https://medium.com\"\n          }}>{`Medium`}</a></p>\n        <h1>{`Réjon Taylor-Foster`}</h1>\n        <h2>{`Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec pharetra quam augue. Nulla facilisi. Ut sed volutpat nisl. Cras eget nunc sed erat malesuada faucibus. Donec non vehicula elit. Interdum et malesuada fames ac ante ipsum primis in faucibus. Sed blandit imperdiet maximus. In hac habitasse platea dictumst. Sed id luctus justo. Morbi in tortor et quam lacinia finibus ac in quam. Suspendisse mollis efficitur dui eu laoreet.`}</h2>\n        <h3>{`MaximumCrash`}</h3>\n        <ul>\n          <li parentName=\"ul\">{`ideas`}</li>\n          <li parentName=\"ul\">{`audio`}</li>\n          <li parentName=\"ul\">{`doc`}</li>\n          <li parentName=\"ul\">{`👀`}</li>\n          <li parentName=\"ul\">{`💦`}</li>\n        </ul>\n      </Box>\n    </Authors>\n    <hr></hr>\n    <h2>{`Button`}</h2>\n    <p>{`It's a button. Not much more to it.`}</p>\n    <p><strong parentName=\"p\">{`Dev Note(Réjon): Because this site doesn't provide any stateful functionality (besides light/dark modes), Buttons are built to serve as a unique visual display of links.`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`<Button to=\"/\"> ET phone Home </Button>\n\n<Button secondary inline to=\"/resources/recipes/palette\"> Inlined Secondary </Button>\n\n<Button outline to=\"/resources/recipes/palette\"> Click Here </Button>\n\n<Button small to=\"/resources/recipes/palette\"> Small Button </Button>\n\n<Button to=\"https://makerdao.com\"> External Link Button </Button>\n`}</code></pre>\n    <hr></hr>\n    <Button to=\"/\" mdxType=\"Button\"> ET phone Home </Button>\n    <Button disabled inline to=\"/resources/recipes/palette\" mdxType=\"Button\">\n  {\" \"}\n  Disabled Inline{\" \"}\n    </Button>\n    <Button secondary inline to=\"/resources/recipes/palette\" mdxType=\"Button\">\n  {\" \"}\n  Inlined Secondary{\" \"}\n    </Button>\n    <Button outline to=\"/resources/recipes/palette\" mdxType=\"Button\">\n  {\" \"}\n  Click Here{\" \"}\n    </Button>\n    <Button small to=\"/resources/recipes/palette\" mdxType=\"Button\">\n  {\" \"}\n  Small Button{\" \"}\n    </Button>\n    <Button to=\"https://makerdao.com\" mdxType=\"Button\"> External Link Button </Button>\n    <hr></hr>\n    <h2>{`Callout`}</h2>\n    <p>{`This component is for callouts. It can also be written as a blockquote `}<inlineCode parentName=\"p\">{`>`}</inlineCode>{` markdown style.`}</p>\n    <p>{`To have icons show up you have to provide an icon name from our icon palette. See the `}<a parentName=\"p\" {...{\n        \"href\": \"/resources/icon-palette\"\n      }}>{`Icon Palette`}</a>{` for those.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`<Callout>\n\nHowdy\n\n</Callout>\n\n<Callout icon=\"lightbulb\">\n\nMaker dao callout\n\n</Callout>\n\n> blockquote Callout Markdown Style\n`}</code></pre>\n    <hr></hr>\n    <Callout mdxType=\"Callout\">\n      <p>{`Howdy`}</p>\n    </Callout>\n    <Callout icon=\"lightbulb\" mdxType=\"Callout\">\n      <p>{`Maker dao callout`}</p>\n    </Callout>\n    <blockquote>\n      <p parentName=\"blockquote\">{`blockquote Callout Markdown Style`}</p>\n    </blockquote>\n    <hr></hr>\n    <h2>{`Checklist`}</h2>\n    <Callout variant=\"warning\" icon=\"warning\" mdxType=\"Callout\">\n      <h4>{`Child Rule in Effect`}</h4>\n    </Callout>\n    <p>{`This is a non-functioning checklist component. It is simply styled to look like one.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`<Checklist>\n  Child A Child B\n  <Box>\n    Child C<Checklist>Child C - A Child C - B</Checklist>\n  </Box>\n</Checklist>\n`}</code></pre>\n    <hr></hr>\n    <Checklist mdxType=\"Checklist\">\n      <p>{`Child A`}</p>\n      <p>{`Child B`}</p>\n      <Box mdxType=\"Box\">\n        <p>{`Child C`}</p>\n        <Checklist mdxType=\"Checklist\">\n          <p>{`Child C - A`}</p>\n          <p>{`Child C - B`}</p>\n        </Checklist>\n      </Box>\n    </Checklist>\n    <hr></hr>\n    <h2>{`Chocolate (Box)`}</h2>\n    <Callout variant=\"warning\" icon=\"warning\" mdxType=\"Callout\">\n      <h4>{`Child Rule in Effect`}</h4>\n    </Callout>\n    <p>{`Originally named \"Chocolate Box\" components, this component takes into consideration the child rule.\nEach child is recognized as a new element. Thus it's recommended for more diverse content to be contained\nby a `}<inlineCode parentName=\"p\">{`Box`}</inlineCode>{` component.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`<Chocolate>\n  <Box>\n    <Icon size={\"40px\"} name=\"maker\" />\n    ##### Child A Some content about something\n  </Box>\n\n  <Box>\n    <Icon size={\"40px\"} name=\"globe\" />\n    ##### Child B Some content about something\n  </Box>\n\n  <Box>\n    <Icon size={\"40px\"} name=\"wrench\" />\n    ##### Child C Some content about something\n  </Box>\n</Chocolate>\n`}</code></pre>\n    <hr></hr>\n    <Chocolate mdxType=\"Chocolate\">\n      <Box mdxType=\"Box\">\n        <Icon size={\"40px\"} name=\"maker\" mdxType=\"Icon\" />\n        <h5>{`Child A`}</h5>\n        <p>{`Some content about something`}</p>\n      </Box>\n      <Box mdxType=\"Box\">\n        <Icon size={\"40px\"} name=\"globe\" mdxType=\"Icon\" />\n        <h5>{`Child B`}</h5>\n        <p>{`Some content about something`}</p>\n      </Box>\n      <Box mdxType=\"Box\">\n        <Icon size={\"40px\"} name=\"wrench\" mdxType=\"Icon\" />\n        <h5>{`Child C`}</h5>\n        <p>{`Some content about something`}</p>\n      </Box>\n    </Chocolate>\n    <hr></hr>\n    <h3>{`Code`}</h3>\n    <p>{`There are 2 types of code elements.`}</p>\n    <ol>\n      <li parentName=\"ol\">{`The code blocks you've been seeing so far that leverage 3 back ticks `}<inlineCode parentName=\"li\">{`(\\`\\`\\`)`}</inlineCode></li>\n      <li parentName=\"ol\">{`Inline code that leverage 1 back tick `}<inlineCode parentName=\"li\">{`like this`}</inlineCode></li>\n    </ol>\n    <p>{`#2 makes use of the `}<inlineCode parentName=\"p\">{`Code`}</inlineCode>{` component like so:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`<Code>\n\nconst var = \"variable\";\n\n</Code>\n`}</code></pre>\n    <Code mdxType=\"Code\">const var = \"variable\";</Code>\n    <p>{`However `}<strong parentName=\"p\">{`inline code doesn't support language highlighting`}</strong>{`.`}</p>\n    <p>{`#1 makes use of the PrismJS library in conjunction with ThemeUI to render code blocks like so.`}</p>\n    <p><strong parentName=\"p\">{`Dev Note(Réjon): We only support so many languages (JS, Text, HTML, CSS, and Markdown). If you want more, check out the `}<a parentName=\"strong\" {...{\n          \"href\": \"https://prismjs.com/#supported-languages\"\n        }}>{`PrismJS documentation`}</a>{` about it.`}</strong></p>\n    <p>{`You can provide a language to show it's tab.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const variable = \"string\";\n`}</code></pre>\n    <p>{`If you want to show a file name just provide `}<inlineCode parentName=\"p\">{`title=file-name.js`}</inlineCode>{` (or whatever the name is)`}</p>\n    <div {...{\n      \"className\": \"gatsby-code-title prism-code-title\"\n    }}>{`palette.mdx`}</div>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const example = \"This is an example with a title tab\";\n`}</code></pre>\n    <hr></hr>\n    <h3>{`Column`}</h3>\n    <Callout variant=\"warning\" icon=\"warning\" mdxType=\"Callout\">\n      <h4>{`Child Rule in Effect`}</h4>\n    </Callout>\n    <p>{`This component follows a similar pattern to that of the `}<inlineCode parentName=\"p\">{`Chocolate Box`}</inlineCode>{` component.\nTo get a header though, there needs to be a child that has children. It is recommended\nto use a `}<inlineCode parentName=\"p\">{`Box`}</inlineCode>{`.`}</p>\n    <p><strong parentName=\"p\">{`Dev Note(Réjon): In design documentation this is mentioned as the \"2-Column Comparison\" component.`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`<Column>\n\nChild A - Full Width\n\n</Column>\n\n<Column>\n\nChild A - with Sibling\n\nChild B - with Sibling\n\n</Column>\n\n<Column>\n\n<Box>\n\n#### Child A\n\nFull Width with a Header\n\n</Box>\n\n</Column>\n\n\n<Column>\n\n<Box>\n\n#### Child A\n\nWith a sibling and a Header\n\n</Box>\n\n<Box>\n\n#### Child B\n\nWith a sibling and a Header\n\n</Box>\n\n</Column>\n`}</code></pre>\n    <hr></hr>\n    <Column mdxType=\"Column\">\n      <p>{`Child A - Full Width`}</p>\n    </Column>\n    <hr></hr>\n    <Column mdxType=\"Column\">\n      <p>{`Child A - with Sibling`}</p>\n      <p>{`Child B - with Sibling`}</p>\n    </Column>\n    <hr></hr>\n    <Column mdxType=\"Column\">\n      <Box mdxType=\"Box\">\n        <h4>{`Child A`}</h4>\n        <p>{`Full Width with a Header`}</p>\n      </Box>\n    </Column>\n    <hr></hr>\n    <Column mdxType=\"Column\">\n      <Box mdxType=\"Box\">\n        <h4>{`Child A`}</h4>\n        <p>{`With a sibling and a Header`}</p>\n      </Box>\n      <Box mdxType=\"Box\">\n        <h4>{`Child B`}</h4>\n        <p>{`With a sibling and a Header`}</p>\n      </Box>\n    </Column>\n    <hr></hr>\n    <h2>{`Info Block`}</h2>\n    <Callout variant=\"warning\" icon=\"warning\" mdxType=\"Callout\">\n      <h4>{`Child Rule in Effect`}</h4>\n    </Callout>\n    <p>{`This component is similar to that of a Hero content section.\nDepending on when you put the image is the side it will show up on. If there's no image first or last in content, the content will be centered.`}</p>\n    <p><strong parentName=\"p\">{`It is highly recommend you use a box component here. Each child is recognized and will render as so.`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`<InfoBlock>\n\n![starfox](/images/starfox.png)\n\n<Box>\n\n### Hello World\n\nSome more content\n\n</Box>\n\n</InfoBlock>\n\n<InfoBlock>\n\n<Box>\n\n### Hello World\n\nSome more content\n\n</Box>\n\n<Image src=\"/images/starfox.png\" />\n\n</InfoBlock>\n\n<InfoBlock>\n\n<Box>\n\n### I am centered\n\n<Image src=\"/images/starfox.png\" />\n\nSome more content\n\n</Box>\n\n</InfoBlock>\n`}</code></pre>\n    <hr></hr>\n    <InfoBlock mdxType=\"InfoBlock\">\n      <p><img parentName=\"p\" {...{\n          \"src\": \"/images/starfox.png\",\n          \"alt\": \"starfox\"\n        }}></img></p>\n      <Box mdxType=\"Box\">\n        <h3>{`Hello World`}</h3>\n        <p>{`Some more content`}</p>\n      </Box>\n    </InfoBlock>\n    <InfoBlock mdxType=\"InfoBlock\">\n      <Box mdxType=\"Box\">\n        <h3>{`Hello World`}</h3>\n        <p>{`Some more content`}</p>\n      </Box>\n      <Image src=\"/images/starfox.png\" mdxType=\"Image\" />\n    </InfoBlock>\n    <InfoBlock mdxType=\"InfoBlock\">\n      <Box mdxType=\"Box\">\n        <h3>{`I am centered`}</h3>\n        <Image src=\"/images/starfox.png\" mdxType=\"Image\" />\n        <p>{`Some more content`}</p>\n      </Box>\n    </InfoBlock>\n    <hr></hr>\n    <h2>{`List`}</h2>\n    <p>{`The List component is great if you want to display content...in the form of....a list.`}</p>\n    <Callout variant=\"warning\" icon=\"warning\" mdxType=\"Callout\">\n      <h4>{`Child Rule in Effect`}</h4>\n    </Callout>\n    <p><strong parentName=\"p\">{`To get the most out of lists (ie. headers, subcontent, links) you MUST use a `}<inlineCode parentName=\"strong\">{`Box`}</inlineCode>{` or `}<inlineCode parentName=\"strong\">{`Link`}</inlineCode>{` component\nbased on your specific needs.`}</strong></p>\n    <hr></hr>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`<List>\n\nElement A\n\nElement B\n\n</List>\n\n<List>\n\n<Box>\n\nElement A Header\n\nSome content below the header\n\n</Box>\n\nElement B with no subcontent\n\n<Box>\n\nElement C Header\n\nSome content below the header\n\n</Box>\n\n</List>\n\n<List>\n\n<Link to=\"/\">\n\nLink Element A Header\n\nSome content below the header\n\n</Link>\n\n<Link to=\"https://makerdao.com/\">\n\nExternal Link Element B Header\n\nSome content below the header\n\n</Link>\n\n</List>\n`}</code></pre>\n    <hr></hr>\n    <List mdxType=\"List\">\n      <p>{`Element A`}</p>\n      <p>{`Element B`}</p>\n    </List>\n    <hr></hr>\n    <List mdxType=\"List\">\n      <Box mdxType=\"Box\">\n        <p>{`Element A Header`}</p>\n        <p>{`Some content below the header`}</p>\n      </Box>\n      <p>{`Element B with no subcontent`}</p>\n      <Box mdxType=\"Box\">\n        <p>{`Element C Header`}</p>\n        <p>{`Some content below the header`}</p>\n      </Box>\n    </List>\n    <hr></hr>\n    <List mdxType=\"List\">\n      <Link to=\"/\" mdxType=\"Link\">\n        <p>{`Link Element A Header`}</p>\n        <p>{`Some content below the header`}</p>\n      </Link>\n      <Link to=\"https://makerdao.com/\" mdxType=\"Link\">\n        <p>{`External Link Element B Header`}</p>\n        <p>{`Some content below the header`}</p>\n      </Link>\n    </List>\n    <hr></hr>\n    <h2>{`Process`}</h2>\n    <p>{`This components great for stepping folks through a numbered process.`}</p>\n    <Callout variant=\"warning\" icon=\"warning\" mdxType=\"Callout\">\n      <h4>{`Child Rule in Effect`}</h4>\n    </Callout>\n    <p><strong parentName=\"p\">{`Dev Note(Réjon): In design specs this in named \"Process Stepper\"`}</strong></p>\n    <hr></hr>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`<Process>\n  ### Process Information 1 ### Process Information 2\n  <Box>\n    ### Process Information 3 Some more content here. The usual suspects and\n    whatever you'd want to put.\n  </Box>\n</Process>\n`}</code></pre>\n    <hr></hr>\n    <Process mdxType=\"Process\">\n      <h3>{`Process Information 1`}</h3>\n      <h3>{`Process Information 2`}</h3>\n      <Box mdxType=\"Box\">\n        <h3>{`Process Information 3`}</h3>\n        <p>{`Some more content here. The usual suspects and whatever you'd want to put.`}</p>\n      </Box>\n    </Process>\n    <hr></hr>\n    <h3>{`Status Banner`}</h3>\n    <p>{`This is your run of the mill status banner. It's also capable of being sticky.`}</p>\n    <hr></hr>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`<StatusBanner>\n\nRegular old status banner\n\n</StatusBanner>\n\n<StatusBanner warning>\n\nWarning status!\n\n</StatusBanner>\n\n<StatusBanner sticky>\n\nI will stick to the top of the screen.\n\n</StatusBanner>\n`}</code></pre>\n    <hr></hr>\n    <StatusBanner mdxType=\"StatusBanner\">\n      <p>{`Regular old status banner`}</p>\n    </StatusBanner>\n    <hr></hr>\n    <StatusBanner warning mdxType=\"StatusBanner\">\n      <p>{`Warning status!`}</p>\n    </StatusBanner>\n    <hr></hr>\n    <StatusBanner sticky mdxType=\"StatusBanner\">\n      <p>{`I will stick to the top of the screen.`}</p>\n    </StatusBanner>\n    <hr></hr>\n    <h2>{`Tables`}</h2>\n    <p>{`We support the lowest spec for tables in MD. None of that Github alignment stuff here.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`| Header A       | Header B                    |\n| --------------- | ------------------------- |\n| Content A        | Content A              |\n| Content B          | Content B              |\n`}</code></pre>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Header A`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Header B`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Content A`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Content A`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Content B`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Content B`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <hr></hr>\n    <h2>{`Tout`}</h2>\n    <Callout variant=\"warning\" icon=\"warning\" mdxType=\"Callout\">\n      <h4>{`Child Rule in Effect`}</h4>\n    </Callout>\n    <p>{`Tout components are meant to be like ultra fancy links, but you can put anything inside of them.\n`}<strong parentName=\"p\">{`If there's only one child it will be full width.`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`<Tout>\n\nElement A - Full Width\n\n</Tout>\n\n\n<Tout>\n\n### Element A\n\n### Element B\n\n</Tout>\n`}</code></pre>\n    <hr></hr>\n    <Tout mdxType=\"Tout\">\n      <p>{`Element A - Full Width`}</p>\n    </Tout>\n    <hr></hr>\n    <Tout mdxType=\"Tout\">\n      <h3>{`Element A`}</h3>\n      <h3>{`Element B`}</h3>\n    </Tout>\n    <hr></hr>\n    <h2>{`Video`}</h2>\n    <p>{`It's possible to show videos here. They'll always be full width with no styles.`}</p>\n    <hr></hr>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`\\`youtube: [Your love!](mzDVaKRApcg)\\`\n\n<Video src=\"https://www.youtube.com/embed/kpk2tdsPh0A\"/>\n`}</code></pre>\n    <hr></hr>\n    <p><div parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-iframe-wrapper\",\n        \"style\": {\n          \"paddingBottom\": \"50%\",\n          \"position\": \"relative\",\n          \"height\": \"0\",\n          \"overflow\": \"hidden\"\n        }\n      }}>{` `}<div parentName=\"div\" {...{\n          \"className\": \"embedVideo-container\"\n        }}>{` `}<iframe parentName=\"div\" {...{\n            \"title\": \"Your love!\",\n            \"src\": \"https://www.youtube.com/embed/mzDVaKRApcg?rel=0\",\n            \"className\": \"embedVideo-iframe\",\n            \"style\": {\n              \"border\": \"0\",\n              \"position\": \"absolute\",\n              \"top\": \"0\",\n              \"left\": \"0\",\n              \"width\": \"100%\",\n              \"height\": \"100%\"\n            },\n            \"allowFullScreen\": true\n          }}></iframe>{` `}</div>{` `}</div></p>\n    <hr></hr>\n    <Video src=\"https://www.youtube.com/embed/kpk2tdsPh0A\" mdxType=\"Video\" />\n    <hr></hr>\n    <h3>{`This is a living document. Add or remove components as you change things. And always remember to have fun.`}</h3>\n    <Authors author=\"@MaximumCrash\" list mdxType=\"Authors\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport {Children, Fragment} from 'react';\nimport { Box, Flex, jsx } from \"theme-ui\";\nimport Sticky from \"react-sticky-el\";\nimport { useLocation } from \"@reach/router\";\n\nimport { LanguageSelector } from \"@modules/localization\";\nimport { Sidenav, Breadcrumbs } from \"@modules/navigation\";\nimport { StatusBanner } from \"@modules/ui\";\nimport { SEO } from \"@modules/utility\";\n\n\nexport default (props) => {\n  const { children, pageContext, uri } = props;\n  const {\n    title,\n    description,\n    keywords,\n    featuredImage,\n    status,\n    hideLanguageSelector,\n    hideBreadcrumbs,\n  } = pageContext.frontmatter;\n\n  const statusProps =\n    typeof status === \"object\"\n      ? { children: status.text, ...status }\n      : { children: status };\n\n  const { pathname } = useLocation();\n  const path = pathname.split(\"/\");\n  const currentTopSection = path[2];\n\n  //For the sake of SEO we may want the page title to be based on the first h1 in our MDX file.\n  //if no title is specified in the metadata.\n  const getFirstHeading = () => {\n    //NOTE(Rejon): The children of layouts provided are MDX components!\n    //Find the first mdx child that's an H1\n    const firstHeading = Children.toArray(children).find(\n      (c) => c.props.mdxType === \"h1\"\n    );\n\n    //If we have an h1 in our file return it.\n    if (firstHeading !== undefined) {\n      return firstHeading.props.children;\n    }\n\n    return undefined;\n  };\n\n  //SEO page title priority is: frontmatter title -> First H1 in mdx -> Filename fallback from uri\n  //NOTE(Rejon): If the page is an index of a directory, the uri split will be the name of the directory. ie. /en/bounties -> bounties\n  const _pageTitle = title || getFirstHeading() || uri.split(\"/\").pop();\n\n  const hasTopSection =\n    currentTopSection !== undefined && currentTopSection !== \"\";\n\n  const seo = {\n    title: _pageTitle,\n    description,\n    keywords,\n    featuredImage,\n  };\n\n  return (\n    <Fragment>\n      <SEO {...seo} />\n      \n      {status && (\n        <Box sx={{ marginTop: hasTopSection ? 2 : 0 }}>\n          <StatusBanner sticky {...statusProps} sx={{ width: \"100%\" }} />\n        </Box>\n      )}\n          {(!hideBreadcrumbs || (hasTopSection && !hideLanguageSelector)) && (\n            <Flex\n              sx={{\n                justifyContent: \"space-between\",\n                position: \"relative\",\n                alignItems: \"flex-start\",\n                flexWrap: [\"wrap\", \"wrap\", \"unset\"],\n                px: !hasTopSection ? [3, 3, 0] : 0,\n              }}\n            >\n              {!hideBreadcrumbs && <Breadcrumbs />}\n              {hasTopSection && !hideLanguageSelector && <LanguageSelector />}\n            </Flex>\n          )}\n          <Box\n            sx={\n              hasTopSection && !hideLanguageSelector\n                ? {\n                    \"& > *:nth-of-type(1)\": {\n                      lineHeight: \"normal\",\n                    },\n                    \"& > *:nth-of-type(1), & > *:nth-of-type(2)\": {\n                      maxWidth: [\"100%\", \"100%\", \"calc(100% - 234px - 1rem)\"],\n                    },\n                    \"& > *:nth-of-type(2)\": { mb: \"32px\" },\n                  }\n                : {}\n            }\n          >\n            {children}\n          </Box>\n    </Fragment>\n  );\n};\n"],"sourceRoot":""}