(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{GRRF:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return r})),n.d(t,"default",(function(){return g}));var o=n("zLVn"),a=(n("q1tI"),n("7ljp")),i=n("z1h2"),r={},l=function(e){return function(t){return console.warn("Component '"+e+"' was not imported, exported, or provided by MDXProvider as global scope"),Object(a.mdx)("div",t)}},c=l("Tout"),d=l("Box"),s=l("Link"),m=l("Aligner"),u=l("Image"),p=l("InfoBlock"),h=l("Button"),b={_frontmatter:r},x=i.a;function g(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.mdx)(x,Object.assign({},b,n,{components:t,mdxType:"MDXLayout"}),Object(a.mdx)("h1",null,"Advanced"),Object(a.mdx)("p",null,"We finished our intermediate tutorial with the ",Object(a.mdx)("inlineCode",{parentName:"p"},"<Box>")," - a basic element that behaves like an html\n",Object(a.mdx)("inlineCode",{parentName:"p"},"<div>")," and allows us to have many new lines, a.k.a. ",Object(a.mdx)("strong",{parentName:"p"},"children"),", behave like one child when rendered as\na React component. Now it's time to see the advantage of this pattern when creating more complicated, visual\ncomponents which you could not dream of in normal md."),Object(a.mdx)("h2",null,"Touts"),Object(a.mdx)("p",null,"We've covered CTAs, which are just good-looking green boxes; we've covered Callouts, which can be boxes\nof various different colours which also include an icon; and we've covered images. So what happens when we\nwant a good-coloured box, with a nice image to end off our page, direct people to where they need to go next\nor just generally add that extra little touch to our content? Enter the tout..."),Object(a.mdx)("div",{className:"gatsby-code-title prism-code-title"},"tout.mdx"),Object(a.mdx)("pre",null,Object(a.mdx)("code",Object.assign({parentName:"pre"},{className:"language-md"}),"<Tout image>\n\n<Box>\n\n## Working on a bounty\n\nSee what's expected of you if you work on a Maker community bounty\n\n[Working on a bounty](http://makerdao.com)\n\n</Box>\n\n</Tout>\n\n<Tout image alt>\n\n<Box>\n\n## Working on a bounty\n\nSee what's expected of you if you work on a Maker community bounty.\n\n[Working on a bounty](http://makerdao.com)\n\n</Box>\n\n<Box>\n\n## Say hi!\n\nThe best place to start is in our chat. Say hello and get to know us.\n\n<Link icon=\"rocketchat\">Community chat</Link>\n\n</Box>\n\n</Tout>\n")),Object(a.mdx)("p",null,"This is the whole shibang. We're passing in properties like ",Object(a.mdx)("inlineCode",{parentName:"p"},"image")," to get the preset brand image to appear\nat the bottom of the tout, and you can choose another property ",Object(a.mdx)("inlineCode",{parentName:"p"},"alt")," to get the tout to change colour from our\nprimary to alternative brand colour. All of these colours can of course be controlled and changed in\n",Object(a.mdx)("a",Object.assign({parentName:"p"},{href:"https://github.com/makerdao/community-portal/blob/r2d/src/gatsby-plugin-theme-ui/index.js"}),"src/gatsby-plugin-theme-ui/index.js"),".\nAll of the above renders like this:"),Object(a.mdx)(c,{image:!0,mdxType:"Tout"},Object(a.mdx)(d,{mdxType:"Box"},Object(a.mdx)("h2",null,"Working on a bounty"),Object(a.mdx)("p",null,"See what's expected of you if you work on a Maker community bounty"),Object(a.mdx)("p",null,Object(a.mdx)("a",Object.assign({parentName:"p"},{href:"http://makerdao.com"}),"Working on a bounty")))),Object(a.mdx)(c,{image:!0,alt:!0,mdxType:"Tout"},Object(a.mdx)(d,{mdxType:"Box"},Object(a.mdx)("h2",null,"Working on a bounty"),Object(a.mdx)("p",null,"See what's expected of you if you work on a Maker community bounty."),Object(a.mdx)("p",null,Object(a.mdx)("a",Object.assign({parentName:"p"},{href:"http://makerdao.com"}),"Working on a bounty"))),Object(a.mdx)(d,{mdxType:"Box"},Object(a.mdx)("h2",null,"Say hi!"),Object(a.mdx)("p",null,"The best place to start is in our chat. Say hello and get to know us."),Object(a.mdx)(s,{icon:"rocketchat",mdxType:"Link"},"Community chat"))),Object(a.mdx)("p",null,"Of course, you don't have to include the ",Object(a.mdx)("inlineCode",{parentName:"p"},"image")," or the ",Object(a.mdx)("inlineCode",{parentName:"p"},"alt")," tags - touts are really flexible like that.\nIf you just want a box - similar to CTAs but with flexible colouring, or similar to Callouts, but without the\nspacing necessary for icons - then you can go right ahead:"),Object(a.mdx)("div",{className:"gatsby-code-title prism-code-title"},"simple-touts.mdx"),Object(a.mdx)("pre",null,Object(a.mdx)("code",Object.assign({parentName:"pre"},{className:"language-md"}),'<Tout>\n\n# Hiya\n\n</Tout>\n\n<Tout alt>\n\nHello World\n\n</Tout>\n\n<Tout color="red">\n\nHello World\n\n</Tout>\n\n<Tout stroke>\n\n# Hello World ?\n\n</Tout>\n\n<Tout alt stroke>\n\n# Hello World ?\n\n</Tout>\n\n<Tout alt stroke color="red">\n\n# Hello World ?\n\n</Tout>\n\n<Tout fade>\n\n# Hello World ?\n\n</Tout>\n\n<Tout fade color="black">\n\n# Hello World ?\n\n</Tout>\n')),Object(a.mdx)("p",null,"Which ends up rendering like this:"),Object(a.mdx)(c,{mdxType:"Tout"},Object(a.mdx)("h1",null,"Hiya")),Object(a.mdx)(c,{alt:!0,mdxType:"Tout"},Object(a.mdx)("p",null,"Hello World")),Object(a.mdx)(c,{color:"red",mdxType:"Tout"},Object(a.mdx)("p",null,"Hello World")),Object(a.mdx)(c,{stroke:!0,mdxType:"Tout"},Object(a.mdx)("h1",null,"Hello World")),Object(a.mdx)(c,{alt:!0,stroke:!0,mdxType:"Tout"},Object(a.mdx)("h1",null,"Hello World")),Object(a.mdx)(c,{alt:!0,stroke:!0,color:"red",mdxType:"Tout"},Object(a.mdx)("h1",null,"Hello World")),Object(a.mdx)(c,{fade:!0,mdxType:"Tout"},Object(a.mdx)("h1",null,"Hello World")),Object(a.mdx)(c,{fade:!0,alt:!0,stroke:!0,mdxType:"Tout"},Object(a.mdx)("h1",null,"Hello World ?")),Object(a.mdx)(c,{fade:!0,color:"black",mdxType:"Tout"},Object(a.mdx)("h1",null,"Hello World ?")),Object(a.mdx)("p",null,"Here you can see how we're combining multiple different kinds of props to get different results. The sky\nreally is the limit once you understand how to compose your props in mdx to give you what you need. If you're\nstruggling to remember all the different kinds of components and the properties they offer, just head on over\nto our cheatsheet."),Object(a.mdx)("p",null,"What makes this component advanced is implied in the final tout, which has props: ",Object(a.mdx)("inlineCode",{parentName:"p"},'fade colour="black"'),". You'll\nsee that the text renders as white, without us doing anything about it. How is that possible?! Through something\ncalled ",Object(a.mdx)("strong",{parentName:"p"},"HexLuminance"),". Basically, we automatically detect how dark the background is and, based on the W3C\nstandards, choose whether to render dark or light text. :mind_blown:"),Object(a.mdx)("blockquote",null,Object(a.mdx)("p",{parentName:"blockquote"},"NOTE: Based on the prop (stroke/fade) the HexLuminance check changes. This is because stroke doesn't have a\nbackground and fades do, but in both cases a color prop can be provided.")),Object(a.mdx)("h2",null,"Returning to images"),Object(a.mdx)("p",null,"When we first showed you how to use images in the basic tutorial, we did not add any props. Thus, there was a\nslight visual issue with the bottom margin, and the image is always left-aligned. Now it's time to fix that.\nImages on the web are a whole rabbit hole, and Gatsby uses a specific plugin - ",Object(a.mdx)("inlineCode",{parentName:"p"},"gatsby-remark-images")," - to process\nand load things extra quickly. Unfortunately, this means it wraps our images and we don't really want to hack around\nin that to get center-alignment or any of the other good things our designers desire. So, we have a wrapper component of\nour own called ",Object(a.mdx)("inlineCode",{parentName:"p"},"<Aligner>"),"."),Object(a.mdx)("p",null,"The reason we're only introducing it now is because using it requires understanding a few things about DAI-ui - the\ntheme library we're using - and how it can be used to style React components. Without getting too technical, there is\nsomething called ",Object(a.mdx)("a",Object.assign({parentName:"p"},{href:"https://theme-ui.com/sx-prop"}),"emotion css"),", which allows us to style our components inline by adding another prop called ",Object(a.mdx)("inlineCode",{parentName:"p"},"sx"),". Just\nlike ",Object(a.mdx)("inlineCode",{parentName:"p"},"mdx")," extends ",Object(a.mdx)("inlineCode",{parentName:"p"},"md"),", ",Object(a.mdx)("inlineCode",{parentName:"p"},"sx")," extends the possible ",Object(a.mdx)("inlineCode",{parentName:"p"},"styles"),". The variety of ways in which you can use ",Object(a.mdx)("inlineCode",{parentName:"p"},"sx")," is almost endless,\nso check out our cheatsheet for some basic starting points, and then dive into the beauty that is DAI-ui."),Object(a.mdx)("div",{className:"gatsby-code-title prism-code-title"},"aligned-image.mdx"),Object(a.mdx)("pre",null,Object(a.mdx)("code",Object.assign({parentName:"pre"},{className:"language-md"}),'<Aligner xCenter sx={{marginBottom: 4}}>\n\n<Image src="../../../images/starfox.png"/>\n\n</Aligner>\n')),Object(a.mdx)("p",null,"Will give us both an image centred in the x-direction, as well as a better margin beneath it:"),Object(a.mdx)(m,{xCenter:!0,sx:{marginBottom:4},mdxType:"Aligner"},Object(a.mdx)(u,{src:"../../../images/starfox.png",mdxType:"Image"})),Object(a.mdx)("p",null,"We use the prop ",Object(a.mdx)("inlineCode",{parentName:"p"},"xCenter")," here, though there are others available to you, listed in the cheatsheet."),Object(a.mdx)("p",null,"You could have specified ",Object(a.mdx)("inlineCode",{parentName:"p"},'sx={{marginBottom: "10px"}}'),", but the ",Object(a.mdx)("inlineCode",{parentName:"p"},"4")," here indicates a preset from DAI-ui -\nwhich you can also find in the gatsby-plugin-theme-ui index file - which helps\nensure that all our margins and padding through the site remain the same, without having to change each individual\ncomponent. So, if you are going to add you own styles, the best practice is to ensure you use the correct preset.\nYou can find a list of presents and their associated values on the cheat sheet page too."),Object(a.mdx)("p",null,"Let's introduce one more component to see all the crazy things we can do with ",Object(a.mdx)("inlineCode",{parentName:"p"},"sx")," and DAI-ui..."),Object(a.mdx)("h2",null,"InfoBlocks"),Object(a.mdx)("p",null,"The InfoBlock is a somewhat peculiar component in our specs, because the designs called for many different\nkinds, with different styles. So, we implemented a bare-bones version and will show you here how to apply advanced\nmdx styles of your own, depending on your needs."),Object(a.mdx)("p",null,"Info Blocks have 3 states:"),Object(a.mdx)("ol",null,Object(a.mdx)("li",{parentName:"ol"},"Image on the Left")),Object(a.mdx)("div",{className:"gatsby-code-title prism-code-title"},"left-image-infoblock.mdx"),Object(a.mdx)("pre",null,Object(a.mdx)("code",Object.assign({parentName:"pre"},{className:"language-md"}),'<InfoBlock>\n\n<Image src="../../../images/starfox.png"/>\n\n# Say hi!\n\nThe best place to start is in our chat. Say hello and get to know us.\n\n<Link icon="rocketchat">Community chat</Link>\n\n</InfoBlock>\n')),Object(a.mdx)(p,{mdxType:"InfoBlock"},Object(a.mdx)(u,{src:"../../../images/starfox.png",mdxType:"Image"}),Object(a.mdx)("h1",null,"Say hi!"),Object(a.mdx)("p",null,"The best place to start is in our chat. Say hello and get to know us."),Object(a.mdx)(s,{icon:"rocketchat",mdxType:"Link"},"Community chat")),Object(a.mdx)("ol",{start:2},Object(a.mdx)("li",{parentName:"ol"},"Image on the Right")),Object(a.mdx)("div",{className:"gatsby-code-title prism-code-title"},"right-image-infoblock.mdx"),Object(a.mdx)("pre",null,Object(a.mdx)("code",Object.assign({parentName:"pre"},{className:"language-md"}),'<InfoBlock>\n\n# Say hi!\n\nThe best place to start is in our chat. Say hello and get to know us.\n\n<Link icon="rocketchat" to="https://chat.makerdao.com">Community chat</Link>\n\n![InfoBlock](../../../images/infoblock_test.png)\n\n</InfoBlock>\n')),Object(a.mdx)(p,{mdxType:"InfoBlock"},Object(a.mdx)("h1",null,"Say hi!"),Object(a.mdx)("p",null,"The best place to start is in our chat. Say hello and get to know us."),Object(a.mdx)(s,{icon:"rocketchat",to:"https://chat.makerdao.com",mdxType:"Link"},"Community chat"),Object(a.mdx)("p",null,Object(a.mdx)("img",Object.assign({parentName:"p"},{src:"../../../images/infoblock_test.png",alt:"InfoBlock"})))),Object(a.mdx)("blockquote",null,Object(a.mdx)("p",{parentName:"blockquote"},"If you put the image first (whether as a React component or as a normal\nmd image), it will appear on the left, and if you put it last, it will appear on the right.")),Object(a.mdx)("ol",{start:3},Object(a.mdx)("li",{parentName:"ol"},"No Image priority at all (no Image First OR Last in mdx)")),Object(a.mdx)("div",{className:"gatsby-code-title prism-code-title"},"no-image-infoblock.mdx"),Object(a.mdx)("pre",null,Object(a.mdx)("code",Object.assign({parentName:"pre"},{className:"language-md"}),"<InfoBlock sx={{color: 'onPrimary', background: 'url(https://media3.giphy.com/headers/sazanimation/QGsbVkvFm2uM.gif)'}}>\n\nHello World :)\n\n![Starfox](../../../images/starfox.png)\n\nGood luck!\n\n</InfoBlock>\n")),Object(a.mdx)(p,{sx:{color:"onPrimary",background:"url(https://media3.giphy.com/headers/sazanimation/QGsbVkvFm2uM.gif)"},mdxType:"InfoBlock"},Object(a.mdx)("p",null,"Hello World :)"),Object(a.mdx)("p",null,Object(a.mdx)("img",Object.assign({parentName:"p"},{src:"../../../images/starfox.png",alt:"Starfox"}))),Object(a.mdx)("p",null,"Good luck!")),Object(a.mdx)("p",null,"To get the Alternative Header style, just apply the ",Object(a.mdx)("inlineCode",{parentName:"p"},"alt")," Prop like so:"),Object(a.mdx)("div",{className:"gatsby-code-title prism-code-title"},"alt-infoblock.mdx"),Object(a.mdx)("pre",null,Object(a.mdx)("code",Object.assign({parentName:"pre"},{className:"language-md"}),"<InfoBlock alt>\n\nMaker makes decisions in two ways.\n\nVoting using the Maker Protocol's on-chain governance system.\n\nAnd off-chain, engaging with the community and other stakeholders in places like the forums and the public governance calls.\n\nThe Interim Governance Facilitator is currently tasked with several administrative duties that keep the larger community organized,\nproactive, aware, and ready to make decisions.\n\n<br/>\n<br/>\n<br/>\n\n<Button>Learn how to vote in Maker governance</Button>\n\n![MakerLogo](../../../images/altblock_test.png)\n\n</InfoBlock>\n")),Object(a.mdx)(p,{alt:!0,mdxType:"InfoBlock"},Object(a.mdx)("p",null,"Maker makes decisions in two ways."),Object(a.mdx)("p",null,"Voting using the Maker Protocol's on-chain governance system."),Object(a.mdx)("p",null,"And off-chain, engaging with the community and other stakeholders in places like the forums and the public governance calls."),Object(a.mdx)("p",null,"The Interim Governance Facilitator is currently tasked with several administrative duties that keep the larger community organized,\nproactive, aware, and ready to make decisions."),Object(a.mdx)("br",null),Object(a.mdx)("br",null),Object(a.mdx)("br",null),Object(a.mdx)(h,{mdxType:"Button"},"Learn how to vote in Maker governance"),Object(a.mdx)("p",null,Object(a.mdx)("img",Object.assign({parentName:"p"},{src:"../../../images/altblock_test.png",alt:"MakerLogo"})))),Object(a.mdx)("p",null,"You'll notice that we passed a gif as a background image into the InfoBlock with no preference on the order\nof the image. Yeah, it doesn't look great and you probably won't ever need to do anything that outlandish, but\nit does illustrate a critical point. ",Object(a.mdx)("strong",{parentName:"p"},"You can add whatever style you like to your components"),". You actually\nhave ",Object(a.mdx)("strong",{parentName:"p"},"complete control as a content creator")," over how your content appears, without ever needing a nerdy developer\nto come and insert stuff for you. Congratulations, you are now a junior front-end developer!"))}g.isMDXComponent=!0},z1h2:function(e,t,n){"use strict";var o=n("rePB"),a=n("q1tI"),i=n.n(a),r=n("2A+t"),l=n("izhR"),c=n("xEQ+"),d=n.n(c),s=n("YwZP"),m=n("d+M2"),u=n("4XhP"),p=function(e){var t=e.children,n=e.seo;return Object(r.c)(u.f,null,Object(r.c)(l.p,{sx:{flexDirection:"column",minHeight:"100vh",height:"100%"}},Object(r.c)(m.b,n),Object(r.c)(u.c,null),Object(r.c)(l.p,{as:"main",sx:{maxWidth:"1364px",flex:"1 0 auto",width:"100%",m:"0 auto",pr:0,pt:["90px","90px","unset"],position:"relative"},className:"content-boundary"},t),Object(r.c)(u.b,null)))},h=n("tW5L"),b=n("/xXG");function x(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}t.a=function(e){var t=e.children,n=e.pageContext,a=e.uri,c=n.frontmatter,m=c.title,g=c.description,j=c.keywords,O=c.featuredImage,y=c.status,f=c.hideLanguageSelector,k=c.hideSidenav,w=c.hideBreadcrumbs,v="object"==typeof y?function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?x(Object(n),!0).forEach((function(t){Object(o.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):x(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({children:y.text},y):{children:y},T=Object(s.useLocation)().pathname.split("/")[2],N=void 0!==T&&""!==T,I=N&&!k,B={title:m||function(){var e=i.a.Children.toArray(t).find((function(e){return"h1"===e.props.mdxType}));if(void 0!==e)return e.props.children}()||a.split("/").pop(),description:g,keywords:j,featuredImage:O};return Object(r.c)(p,{seo:B},I&&Object(r.c)(d.a,{boundaryElement:".content-boundary",sx:{width:"20%",minWidth:"260px",display:["none","none","initial"]},dontUpdateHolderHeightWhenSticky:!0,style:{position:"relative"},hideOnBoundaryHit:!1},Object(r.c)(u.g,null)),Object(r.c)(l.p,{sx:{flexGrow:1,flexDirection:"column"}},Object(r.c)("article",{sx:{pl:N?[4,4,"64px"]:0,mt:N?[4,4,"59px"]:0,pb:4,pr:N?4:0}},y&&Object(r.c)(l.f,{sx:{marginTop:N?2:0}},Object(r.c)(b.m,Object.assign({sticky:!0},v,{sx:{width:"100%"}}))),(!w||N&&!f)&&Object(r.c)(l.p,{sx:{justifyContent:"space-between",position:"relative",alignItems:"flex-start",flexWrap:["wrap","wrap","unset"],mt:I?"":"2rem",px:N?0:[3,3,0]}},!w&&Object(r.c)(u.a,null),N&&!f&&Object(r.c)(h.b,null)),Object(r.c)(l.f,{sx:N&&!f?{"& > *:nth-child(1)":{lineHeight:"normal"},"& > *:nth-child(1), & > *:nth-child(2)":{maxWidth:["100%","100%","calc(100% - 234px - 1rem)"]},"& > *:nth-child(2)":{mb:"32px"}}:{}},t))))}}}]);
//# sourceMappingURL=component---content-en-resources-content-advanced-mdx-bfded1bc92e1bcd70541.js.map