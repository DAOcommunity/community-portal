{"version":3,"sources":["webpack:///./content/en/contribute/content/reviewer-guide.mdx","webpack:///./src/modules/layouts/mdx_layout.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","Callout","Box","List","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","icon","secondary","sx","paddingX","isMDXComponent","useTranslation","locale","t","DEFAULT_LOCALE","allMdx","useStaticQuery","children","pageContext","uri","pagePath","frontmatter","title","description","keywords","featuredImage","status","hideLanguageSelector","hideBreadcrumbs","pathDirs","replace","split","slice","urlNoLocale","join","calculateTreeData","edges","sidenavData","breadcrumbData","languageSelectorData","filter","node","UrlConverter","getLocaleFromPath","fileAbsolutePath","map","value","label","statusProps","text","currentTopSection","useLocation","pathname","_pageTitle","firstHeading","Children","toArray","find","c","undefined","getFirstHeading","pop","hasTopSection","renderSidenav","hideSidenav","renderLanguageSelector","renderBreadcrumbs","seo","contentWidthSubtract","width","display","boundaryElement","dontUpdateHolderHeightWhenSticky","style","position","hideOnBoundaryHit","data","currentPath","as","mt","pl","pr","pb","marginTop","sticky","justifyContent","alignItems","flexWrap","px"],"mappings":"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","file":"component---content-en-contribute-content-reviewer-guide-mdx-1fb3e45d90f743e7d8b0.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/community-portal/community-portal/src/modules/layouts/mdx_layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Callout = makeShortcode(\"Callout\");\nconst Box = makeShortcode(\"Box\");\nconst List = makeShortcode(\"List\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`Reviewer Guide`}</h1>\n    <h2>{`Reviewers are responsible for editing and maintaining MakerDAO’s Community Development resources. All writers and contributors are welcome to assume the Reviewer role.`}</h2>\n    <p>{`This guide introduces the review process and outlines editing standards. MakerDAO expects its Writers and Reviewers to adhere to the principles described within this guide and all other Comm-Dev `}<a parentName=\"p\" {...{\n        \"href\": \"/contribute/\"\n      }}>{`contributor guides.`}</a></p>\n    <Callout icon=\"warning\" secondary mdxType=\"Callout\">\n      <p><strong parentName=\"p\">{`Please Note:`}</strong>{` `}</p>\n      <p>{`Reviewers should be comfortable working with Google Docs and HackMD. They should be open to learning the basics of Markdown, GitHub, and VSCode.`}</p>\n    </Callout>\n    <h2>{`Reviewer Roles`}</h2>\n    <Box sx={{\n      paddingX: 2\n    }} mdxType=\"Box\">\n      <p>{`Reviewer roles for Community Development projects are divided into three categories.`}</p>\n      <List mdxType=\"List\">\n        <Box sx={{\n          paddingX: 4\n        }} mdxType=\"Box\">\n          <p><strong parentName=\"p\">{`Tone | Grammar`}</strong></p>\n          <p>{`Reviewers assess content and resources for tone and consistency. They ensure that all documents adhere to the Writing Style Guide.`}</p>\n          <ul>\n            <li parentName=\"ul\">{`This role does not require in-depth knowledge about MakerDAO.`}</li>\n          </ul>\n        </Box>\n        <Box mdxType=\"Box\">\n          <p><strong parentName=\"p\">{`Content | Concepts`}</strong></p>\n          <p>{`Reviewers edit content and make sure that all ideas presented are factual and easy to comprehend.`}</p>\n          <ul>\n            <li parentName=\"ul\">{`Content Reviewers should have a deeper understanding of MakerDAO and its functions.`}</li>\n          </ul>\n        </Box>\n        <Box mdxType=\"Box\">\n          <p><strong parentName=\"p\">{`Maintenance`}</strong></p>\n          <p>{`Reviewers refer to document-specific maintenance guides to make sure that existing documents are standardized and up to date.`}</p>\n          <ul>\n            <li parentName=\"ul\">{`Check GitHub for a document-specific maintenance guide before working on an existing resource.`}</li>\n          </ul>\n        </Box>\n      </List>\n    </Box>\n    <h2>{`General Expectations`}</h2>\n    <Box sx={{\n      paddingX: 2\n    }} mdxType=\"Box\">\n      <hr></hr>\n      <ul>\n        <li parentName=\"ul\">{`Reviewers should be proficient writers with some background knowledge of cryptocurrencies and MakerDAO.`}</li>\n        <li parentName=\"ul\">{`They should be familiar with the Comm-Dev `}<a parentName=\"li\" {...{\n            \"href\": \"/contribute/\"\n          }}>{`contributor guides.`}</a></li>\n        <li parentName=\"ul\">{`By and large, all contributors should focus on effective collaboration.`}</li>\n      </ul>\n      <Callout icon=\"warning\" secondary mdxType=\"Callout\">\n        <p><strong parentName=\"p\">{`Please Note:`}</strong>{` `}</p>\n        <p>{`The Reviewer’s top priority is to make sure that concepts are clearly expressed, and that the writing and tone adhere to the `}<a parentName=\"p\" {...{\n            \"href\": \"/contribute/content/writing-style-guide/\"\n          }}>{`Writing Style Guide.`}</a></p>\n      </Callout>\n    </Box>\n    <h2>{`Reviewing an Existing Project`}</h2>\n    <Box sx={{\n      paddingX: 2\n    }} mdxType=\"Box\">\n      <p>{`The guideline below offers general advice to ease the Reviewer's work process.`}</p>\n      <hr></hr>\n      <ul>\n        <li parentName=\"ul\">{`Existing documents may be at any stage:`}\n          <ul parentName=\"li\">\n            <li parentName=\"ul\">{`Google Doc`}</li>\n            <li parentName=\"ul\">{`HackMD`}</li>\n            <li parentName=\"ul\">{`VSCode`}</li>\n            <li parentName=\"ul\">{`Live on GitHub`}</li>\n          </ul>\n        </li>\n        <li parentName=\"ul\">{`Give existing documents a full read-through before starting work.`}</li>\n        <li parentName=\"ul\">{`When possible, improve the clarity and presentation of the material.`}</li>\n        <li parentName=\"ul\">{`Check for and correct any typos, grammatical errors, and deviations from the `}<a parentName=\"li\" {...{\n            \"href\": \"/contribute/content/writing-style-guide/\"\n          }}>{`Writing Style Guide.`}</a></li>\n        <li parentName=\"ul\">{`Expand on and update concepts as MakerDAO grows.`}\n          <ul parentName=\"li\">\n            <li parentName=\"ul\">{`Incorporate new developments within MakerDAO.`}</li>\n            <li parentName=\"ul\">{`Update documents to reflect the latest terminology and language as Maker grows and standards change.`}</li>\n          </ul>\n        </li>\n        <li parentName=\"ul\">{`Add cross-linking to relevant resources.`}</li>\n        <li parentName=\"ul\">{`Take into account that final iterations are converted to Markdown and published on GitHub.`}\n          <ul parentName=\"li\">\n            <li parentName=\"ul\">{`Avoid including direct links in a Google Doc.`}\n              <ul parentName=\"li\">\n                <li parentName=\"ul\">{`Use the Markdown format to simplify conversion later on.`}</li>\n                <li parentName=\"ul\"><strong parentName=\"li\">{`Example:`}</strong>{` `}<inlineCode parentName=\"li\">{`[link](https://link.com)`}</inlineCode></li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n        <li parentName=\"ul\">{`Use the Google Docs heading presets.`}\n          <ul parentName=\"li\">\n            <li parentName=\"ul\">{`These work well with tools that convert documents into Markdown.`}</li>\n            <li parentName=\"ul\">{`Headings can also help structure a document.`}\n              <ul parentName=\"li\">\n                <li parentName=\"ul\">{`Google's outline tool follows the preset header formats.`}</li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </Box>\n    {\n      /* While these could be used here and give the page a better flow I am not convinced they need to be added here.  */\n    }\n    {\n      /* <Tout>\n      <Box>\n      ## Write Like Maker\n      See what's expected when you write for the Maker community.\n      [Writing Style Guide](/contribute/content/writing-style-guide/)\n      </Box>\n      <Box>\n      ## Learn the Tools\n      Take a look at the tools we use and why we use them.\n      [Contributor Tools](/contribute/content/contributor-tools/)\n      </Box>\n      </Tout> */\n    }\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport {Children, Fragment} from 'react';\nimport { Box, Flex, jsx } from \"theme-ui\";\nimport Sticky from \"react-sticky-el\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\n\nimport {MobileNav} from '@modules/navigation';\nimport { useTranslation } from \"@modules/localization/\";\nimport { LanguageSelector } from \"@modules/localization\";\nimport { Sidenav, Breadcrumbs } from \"@modules/navigation\";\nimport { StatusBanner } from \"@modules/ui\";\nimport calculateTreeData from \"@modules/navigation/calculateTreeData\";\nimport { SEO } from \"@modules/utility\";\nimport { UrlConverter, getLocaleFromPath } from \"@utils\";\n\nexport default (props) => {\n  const { locale, t, DEFAULT_LOCALE } = useTranslation();\n\n  const { allMdx } = useStaticQuery(graphql`\n    query getMDXData {\n      # Regex for all files that are NOT config files\n      allMdx(\n        filter: {\n          fileAbsolutePath: {\n            regex: \"//([\\\\\\\\w]{2})/(?!header.mdx|index.mdx|sidenav.mdx|example.mdx|social.mdx|footer.mdx|404.mdx|.js|.json)/\"\n          }\n        }\n      ) {\n        edges {\n          node {\n            headings(depth: h1) {\n              value\n            }\n            fileAbsolutePath\n            frontmatter {\n              title\n              order\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const { children, pageContext, uri } = props;\n\n  const {pagePath} = pageContext; \n  const {\n    title,\n    description,\n    keywords,\n    featuredImage,\n    status,\n    hideLanguageSelector,\n    hideBreadcrumbs,\n  } = pageContext.frontmatter;\n\n  const pathDirs = pagePath.replace(/^\\/|\\/$/g, \"\").split(\"/\").slice(1);\n  const urlNoLocale = pathDirs.join(\"/\");\n  \n  const { sidenavData, breadcrumbData } = calculateTreeData(\n    allMdx.edges,\n    pathDirs[0],\n    DEFAULT_LOCALE,\n    locale,\n    pathDirs\n  );\n\n  //NOTE(Rejon): Must be in the shape that React Select expects for it's options.\n  //Something that can be queried? \n  const languageSelectorData = allMdx.edges\n    .filter(({ node }) => {\n      //Drop the end slash, remove the locale, compare the string\n      //TODO(Rejon): This works for now, but can probably be optimized with a Regex solution.\n      const nodeURL = UrlConverter(node)\n        .replace(/^\\/|\\/$/g, \"\")\n        .split(\"/\")\n        .slice(1)\n        .join(\"/\");\n\n      return (\n        nodeURL === urlNoLocale &&\n        getLocaleFromPath(node.fileAbsolutePath) !== locale\n      );\n    })\n    .map(({ node }) => ({\n      value: UrlConverter(node),\n      label: t(\n        \"Language\",\n        null,\n        null,\n        getLocaleFromPath(node.fileAbsolutePath)\n      ),\n    }));\n\n  const statusProps =\n    typeof status === \"object\"\n      ? { children: status.text, ...status }\n      : { children: status };\n\n  const { pathname } = useLocation();\n  const path = pathname.split(\"/\");\n  const currentTopSection = path[2];\n\n  //For the sake of SEO we may want the page title to be based on the first h1 in our MDX file.\n  //if no title is specified in the metadata.\n  const getFirstHeading = () => {\n    //NOTE(Rejon): The children of layouts provided are MDX components!\n    //Find the first mdx child that's an H1\n    const firstHeading = Children.toArray(children).find(\n      (c) => c.props.mdxType === \"h1\"\n    );\n\n    //If we have an h1 in our file return it.\n    if (firstHeading !== undefined) {\n      return firstHeading.props.children;\n    }\n\n    return undefined;\n  };\n\n  //SEO page title priority is: frontmatter title -> First H1 in mdx -> Filename fallback from uri\n  //NOTE(Rejon): If the page is an index of a directory, the uri split will be the name of the directory. ie. /en/bounties -> bounties\n  const _pageTitle = title || getFirstHeading() || uri.split(\"/\").pop();\n\n  const hasTopSection =\n    currentTopSection !== undefined && currentTopSection !== \"\";\n\n  const renderSidenav = pageContext.frontmatter && !pageContext.frontmatter.hideSidenav && hasTopSection;\n  const renderLanguageSelector = hasTopSection && !hideLanguageSelector;\n  const renderBreadcrumbs = (!hideBreadcrumbs || (hasTopSection && !hideLanguageSelector));\n\n  const seo = {\n    title: _pageTitle,\n    description,\n    keywords,\n    featuredImage,\n  };\n\n  let contentWidthSubtract = renderLanguageSelector ? 234 : 0; //NOTE(Rejon): Based on word from design, language selector being hidden doesn't change content width.\n\n  if (renderSidenav) {\n    contentWidthSubtract += 256;\n  }\n\n\n  return (\n    <Fragment>\n      {renderSidenav\n          &&\n          <Box\n            sx={{\n              width: \"256px\",\n              display: [\"none\", \"none\", \"initial\"],\n            }}\n          >\n          <Sticky\n            boundaryElement=\".content-boundary\"\n            dontUpdateHolderHeightWhenSticky={true}\n            style={{ position: \"relative\" }}\n            hideOnBoundaryHit={false}\n            sx={{display: [\"none\", \"none\", \"initial\"]}}\n          >\n            <Sidenav data={sidenavData} currentPath={pagePath}/>\n          </Sticky>\n        </Box>\n      }\n      <Box as=\"article\" sx={{\n        width: ['100%', '100%', `calc(100% - ${contentWidthSubtract}px)`],\n        mt: hasTopSection ? [4, 4, \"59px\"] : 0,\n        pl: hasTopSection ? [4, 4, \"64px\"] : 0,\n        pr: hasTopSection ? [4, 4, 0] : 0,\n        pb: 4,\n        \n      }}>\n      <SEO {...seo} />\n      \n      {status && (\n        <Box sx={{ marginTop: hasTopSection ? 2 : 0 }}>\n          <StatusBanner sticky {...statusProps} sx={{ width: \"100%\" }} />\n        </Box>\n      )}\n      {renderBreadcrumbs && \n        <Flex\n          sx={{\n            justifyContent: \"space-between\",\n            position: \"relative\",\n            alignItems: \"flex-start\",\n            flexWrap: [\"wrap\", \"wrap\", \"unset\"],\n            px: !hasTopSection ? [3, 3, 0] : 0,\n          }}\n        >\n          <Breadcrumbs data={breadcrumbData} pathDirs={pathDirs}/>\n        </Flex>\n      }\n      <Box sx={{display: ['block', 'block', 'none']}}>\n        {/* MOBILE LANGUAGE SELECTOR */}\n        {renderLanguageSelector && <LanguageSelector data={languageSelectorData} pagePath={pagePath}/>}\n      </Box>\n      <Box>\n        {children}\n      </Box>\n      </Box>\n      \n      <Box sx={{display: ['none', 'none', 'block']}}>\n        {/* DESKTOP LANGUAGE SELECTOR */}\n        {renderLanguageSelector && <LanguageSelector data={languageSelectorData} pagePath={pagePath}/>}\n      </Box>\n      <MobileNav sidenavData={sidenavData}/>\n    </Fragment>\n  );\n};\n"],"sourceRoot":""}