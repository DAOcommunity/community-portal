{"version":3,"sources":["webpack:///./content/en/learn/index.mdx","webpack:///./src/modules/layouts/mdx_layout.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","Box","Chocolate","Flex","Icon","Button","InfoBlock","List","Link","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","sx","textAlign","parentName","backgroundColor","borderRadius","padding","display","flexDirection","flexWrap","position","size","to","alignSelf","mt","paddingRight","paddingLeft","isMDXComponent","useTranslation","locale","t","DEFAULT_LOCALE","allMdx","useStaticQuery","children","pageContext","uri","pagePath","frontmatter","title","description","keywords","featuredImage","status","hideLanguageSelector","hideBreadcrumbs","pathDirs","replace","split","slice","urlNoLocale","join","calculateTreeData","edges","sidenavData","breadcrumbData","languageSelectorData","filter","node","UrlConverter","getLocaleFromPath","fileAbsolutePath","map","value","label","statusProps","text","currentTopSection","useLocation","pathname","_pageTitle","firstHeading","Children","toArray","find","c","undefined","getFirstHeading","pop","hasTopSection","renderSidenav","hideSidenav","renderLanguageSelector","renderBreadcrumbs","seo","contentWidthSubtract","width","boundaryElement","dontUpdateHolderHeightWhenSticky","style","hideOnBoundaryHit","data","currentPath","as","pl","pr","pb","marginTop","sticky","justifyContent","alignItems","px"],"mappings":"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","file":"component---content-en-learn-index-mdx-dd560fe6abb053f2c3bb.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/community-portal/community-portal/src/modules/layouts/mdx_layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Box = makeShortcode(\"Box\");\nconst Chocolate = makeShortcode(\"Chocolate\");\nconst Flex = makeShortcode(\"Flex\");\nconst Icon = makeShortcode(\"Icon\");\nconst Button = makeShortcode(\"Button\");\nconst InfoBlock = makeShortcode(\"InfoBlock\");\nconst List = makeShortcode(\"List\");\nconst Link = makeShortcode(\"Link\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Box sx={{\n      textAlign: \"center\"\n    }} mdxType=\"Box\">\n      <h1>{`Learn About MakerDAO`}</h1>\n      <p><img parentName=\"p\" {...{\n          \"src\": \"/images/illus_learn.png\",\n          \"alt\": \"Learn\"\n        }}></img></p>\n    </Box>\n    <h2>{`The Future of Finance - All Welcome`}</h2>\n    <p>{`Learning about MakerDAO and DeFi is easy, and getting in on the action with MakerDAO is easy. We are here to teach everything, from the basics of wallets to the details of Maker governance. Check out the links below to get started.`}</p>\n    <Box sx={{\n      backgroundColor: 'primaryMuted',\n      borderRadius: '12px',\n      padding: '12px',\n      display: 'flex',\n      flexDirection: 'column',\n      flexWrap: 'wrap'\n    }} mdxType=\"Box\">\n      <Chocolate mdxType=\"Chocolate\">\n        <Flex sx={{\n          position: 'relative',\n          flexDirection: 'column'\n        }} mdxType=\"Flex\">\n          <Icon size={\"40px\"} name=\"link\" mdxType=\"Icon\" />\n          <p>{`Learn about Blockchain`}</p>\n          <Button to=\"/learn/blockchain-fundamentals/\" sx={{\n            alignSelf: 'flex-start',\n            mt: 'auto'\n          }} mdxType=\"Button\">Blockchain</Button>\n        </Flex>\n        <Flex sx={{\n          position: 'relative',\n          flexDirection: 'column'\n        }} mdxType=\"Flex\">\n          <Icon size={\"40px\"} name=\"maker\" mdxType=\"Icon\" />\n          <p>{`Get to know MakerDAO`}</p>\n          <Button to=\"/learn/MakerDAO/\" sx={{\n            alignSelf: 'flex-start',\n            mt: 'auto'\n          }} mdxType=\"Button\">MakerDAO</Button>\n        </Flex>\n        <Flex sx={{\n          position: 'relative',\n          flexDirection: 'column'\n        }} mdxType=\"Flex\">\n          <Icon size={\"40px\"} name=\"dai\" mdxType=\"Icon\" />\n          <p>{`Find out how to get & use Dai, a decentralized stablecoin`}</p>\n          <Button to=\"/learn/Dai/\" sx={{\n            alignSelf: 'flex-start',\n            mt: 'auto'\n          }} mdxType=\"Button\">Dai</Button>\n        </Flex>\n        <Flex sx={{\n          position: 'relative',\n          flexDirection: 'column'\n        }} mdxType=\"Flex\">\n          <Icon size={\"40px\"} name=\"open_in_new_tab\" mdxType=\"Icon\" />\n          <p>{`Learn how to mint new Dai with Maker Vaults`}</p>\n          <Button to=\"/learn/vaults/\" sx={{\n            alignSelf: 'flex-start',\n            mt: 'auto'\n          }} mdxType=\"Button\">Vaults</Button>\n        </Flex>\n        <Flex sx={{\n          position: 'relative',\n          flexDirection: 'column'\n        }} mdxType=\"Flex\">\n          <Icon size={\"40px\"} name=\"press\" mdxType=\"Icon\" />\n          <p>{`Find out how to use Maker to participate in MakerDAO governance`}</p>\n          <Button to=\"/learn/governance/\" sx={{\n            alignSelf: 'flex-start',\n            mt: 'auto'\n          }} mdxType=\"Button\">Governance</Button>\n        </Flex>\n        <Flex sx={{\n          position: 'relative',\n          flexDirection: 'column'\n        }} mdxType=\"Flex\">\n          <Icon size={\"40px\"} name=\"menu\" mdxType=\"Icon\" />\n          <p>{`Get informed about off-chain and on-chain price oracles`}</p>\n          <Button to=\"/learn/Oracles/\" sx={{\n            alignSelf: 'flex-start',\n            mt: 'auto'\n          }} mdxType=\"Button\">Oracles</Button>\n        </Flex>\n      </Chocolate>\n    </Box>\n    <InfoBlock mdxType=\"InfoBlock\">\n      <Box sx={{\n        paddingRight: '35px'\n      }} mdxType=\"Box\">\n        <h2>{`Learn How to Get Dai and Earn Interest with Maker Vaults`}</h2>\n      </Box>\n      <Box sx={{\n        paddingLeft: '25px'\n      }} mdxType=\"Box\">\n        <List mdxType=\"List\">\n          <Link to=\"/learn/vaults/vaults-tutorial/\" mdxType=\"Link\">Vaults Tutorial</Link>\n          <Link to=\"/learn/vaults/vault-onboarding-guide/\" mdxType=\"Link\">Vaults Onboarding Guide</Link>\n          <Link to=\"/learn/vaults/risk/\" mdxType=\"Link\">Risk</Link>\n        </List>\n      </Box>\n    </InfoBlock>\n    {\n      /* <InfoBlock>\n      ![Welcome to Comm-dev](/images/illus_home.png)\n      <Box>\n      ## Learn How to Vote on Changes to MakerDAO\n      Vote on changes to the MakerDAO system using the Maker governance token. Learn more about how voting works!\n      <Button to=\"/en/learn/governance/how-voting-works/\">How Voting Works</Button>\n      </Box>\n      </InfoBlock> */\n    }\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport {Children, Fragment} from 'react';\nimport { Box, Flex, jsx } from \"theme-ui\";\nimport Sticky from \"react-sticky-el\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\n\nimport {MobileNav} from '@modules/navigation';\nimport { useTranslation } from \"@modules/localization/\";\nimport { LanguageSelector } from \"@modules/localization\";\nimport { Sidenav, Breadcrumbs } from \"@modules/navigation\";\nimport { StatusBanner } from \"@modules/ui\";\nimport calculateTreeData from \"@modules/navigation/calculateTreeData\";\nimport { SEO } from \"@modules/utility\";\nimport { UrlConverter, getLocaleFromPath } from \"@utils\";\n\nexport default (props) => {\n  const { locale, t, DEFAULT_LOCALE } = useTranslation();\n\n  const { allMdx } = useStaticQuery(graphql`\n    query getMDXData {\n      # Regex for all files that are NOT config files\n      allMdx(\n        filter: {\n          fileAbsolutePath: {\n            regex: \"//([\\\\\\\\w]{2})/(?!header.mdx|index.mdx|sidenav.mdx|example.mdx|social.mdx|footer.mdx|404.mdx|.js|.json)/\"\n          }\n        }\n      ) {\n        edges {\n          node {\n            headings(depth: h1) {\n              value\n            }\n            fileAbsolutePath\n            frontmatter {\n              title\n              order\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const { children, pageContext, uri } = props;\n\n  const {pagePath} = pageContext; \n  const {\n    title,\n    description,\n    keywords,\n    featuredImage,\n    status,\n    hideLanguageSelector,\n    hideBreadcrumbs,\n  } = pageContext.frontmatter;\n\n  const pathDirs = pagePath.replace(/^\\/|\\/$/g, \"\").split(\"/\").slice(1);\n  const urlNoLocale = pathDirs.join(\"/\");\n  \n  const { sidenavData, breadcrumbData } = calculateTreeData(\n    allMdx.edges,\n    pathDirs[0],\n    DEFAULT_LOCALE,\n    locale,\n    pathDirs\n  );\n\n  //NOTE(Rejon): Must be in the shape that React Select expects for it's options.\n  //Something that can be queried? \n  const languageSelectorData = allMdx.edges\n    .filter(({ node }) => {\n      //Drop the end slash, remove the locale, compare the string\n      //TODO(Rejon): This works for now, but can probably be optimized with a Regex solution.\n      const nodeURL = UrlConverter(node)\n        .replace(/^\\/|\\/$/g, \"\")\n        .split(\"/\")\n        .slice(1)\n        .join(\"/\");\n\n      return (\n        nodeURL === urlNoLocale &&\n        getLocaleFromPath(node.fileAbsolutePath) !== locale\n      );\n    })\n    .map(({ node }) => ({\n      value: UrlConverter(node),\n      label: t(\n        \"Language\",\n        null,\n        null,\n        getLocaleFromPath(node.fileAbsolutePath)\n      ),\n    }));\n\n  const statusProps =\n    typeof status === \"object\"\n      ? { children: status.text, ...status }\n      : { children: status };\n\n  const { pathname } = useLocation();\n  const path = pathname.split(\"/\");\n  const currentTopSection = path[2];\n\n  //For the sake of SEO we may want the page title to be based on the first h1 in our MDX file.\n  //if no title is specified in the metadata.\n  const getFirstHeading = () => {\n    //NOTE(Rejon): The children of layouts provided are MDX components!\n    //Find the first mdx child that's an H1\n    const firstHeading = Children.toArray(children).find(\n      (c) => c.props.mdxType === \"h1\"\n    );\n\n    //If we have an h1 in our file return it.\n    if (firstHeading !== undefined) {\n      return firstHeading.props.children;\n    }\n\n    return undefined;\n  };\n\n  //SEO page title priority is: frontmatter title -> First H1 in mdx -> Filename fallback from uri\n  //NOTE(Rejon): If the page is an index of a directory, the uri split will be the name of the directory. ie. /en/bounties -> bounties\n  const _pageTitle = title || getFirstHeading() || uri.split(\"/\").pop();\n\n  const hasTopSection =\n    currentTopSection !== undefined && currentTopSection !== \"\";\n\n  const renderSidenav = pageContext.frontmatter && !pageContext.frontmatter.hideSidenav && hasTopSection;\n  const renderLanguageSelector = hasTopSection && !hideLanguageSelector;\n  const renderBreadcrumbs = (!hideBreadcrumbs || (hasTopSection && !hideLanguageSelector));\n\n  const seo = {\n    title: _pageTitle,\n    description,\n    keywords,\n    featuredImage,\n  };\n\n  let contentWidthSubtract = renderLanguageSelector ? 234 : 0; //NOTE(Rejon): Based on word from design, language selector being hidden doesn't change content width.\n\n  if (renderSidenav) {\n    contentWidthSubtract += 256;\n  }\n\n\n  return (\n    <Fragment>\n      {renderSidenav\n          &&\n          <Box\n            sx={{\n              width: \"256px\",\n              display: [\"none\", \"none\", \"initial\"],\n            }}\n          >\n          <Sticky\n            boundaryElement=\".content-boundary\"\n            dontUpdateHolderHeightWhenSticky={true}\n            style={{ position: \"relative\" }}\n            hideOnBoundaryHit={false}\n            sx={{display: [\"none\", \"none\", \"initial\"]}}\n          >\n            <Sidenav data={sidenavData} currentPath={pagePath}/>\n          </Sticky>\n        </Box>\n      }\n      <Box as=\"article\" sx={{\n        width: ['100%', '100%', `calc(100% - ${contentWidthSubtract}px)`],\n        mt: hasTopSection ? [4, 4, \"59px\"] : 0,\n        pl: hasTopSection ? [4, 4, \"64px\"] : 0,\n        pr: hasTopSection ? [4, 4, 0] : 0,\n        pb: 4,\n        \n      }}>\n      <SEO {...seo} />\n      \n      {status && (\n        <Box sx={{ marginTop: hasTopSection ? 2 : 0 }}>\n          <StatusBanner sticky {...statusProps} sx={{ width: \"100%\" }} />\n        </Box>\n      )}\n      {renderBreadcrumbs && \n        <Flex\n          sx={{\n            justifyContent: \"space-between\",\n            position: \"relative\",\n            alignItems: \"flex-start\",\n            flexWrap: [\"wrap\", \"wrap\", \"unset\"],\n            px: !hasTopSection ? [3, 3, 0] : 0,\n          }}\n        >\n          <Breadcrumbs data={breadcrumbData} pathDirs={pathDirs}/>\n        </Flex>\n      }\n      <Box sx={{display: ['block', 'block', 'none']}}>\n        {/* MOBILE LANGUAGE SELECTOR */}\n        {renderLanguageSelector && <LanguageSelector data={languageSelectorData} pagePath={pagePath}/>}\n      </Box>\n      <Box>\n        {children}\n      </Box>\n      </Box>\n      \n      <Box sx={{display: ['none', 'none', 'block']}}>\n        {/* DESKTOP LANGUAGE SELECTOR */}\n        {renderLanguageSelector && <LanguageSelector data={languageSelectorData} pagePath={pagePath}/>}\n      </Box>\n      <MobileNav sidenavData={sidenavData}/>\n    </Fragment>\n  );\n};\n"],"sourceRoot":""}