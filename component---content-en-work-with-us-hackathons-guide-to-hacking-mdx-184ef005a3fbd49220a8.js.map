{"version":3,"sources":["webpack:///./content/en/work_with_us/hackathons/guide-to-hacking.mdx","webpack:///./src/modules/layouts/mdx_layout.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","Checklist","Link","List","Tout","Box","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","to","icon","alt","image","sx","marginBottom","isMDXComponent","children","pageContext","uri","frontmatter","title","description","keywords","featuredImage","status","hideLanguageSelector","hideBreadcrumbs","statusProps","text","currentTopSection","useLocation","pathname","split","hasTopSection","undefined","seo","firstHeading","Children","toArray","find","c","getFirstHeading","pop","marginTop","sticky","width","justifyContent","position","alignItems","flexWrap","px","lineHeight","maxWidth","mb"],"mappings":"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","file":"component---content-en-work-with-us-hackathons-guide-to-hacking-mdx-184ef005a3fbd49220a8.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/community-portal/community-portal/src/modules/layouts/mdx_layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Checklist = makeShortcode(\"Checklist\");\nconst Link = makeShortcode(\"Link\");\nconst List = makeShortcode(\"List\");\nconst Tout = makeShortcode(\"Tout\");\nconst Box = makeShortcode(\"Box\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`Hacking with MakerDAO`}</h1>\n    <h2>{`Developer resources`}</h2>\n    <p>{`Any project seems complex at first. This guide will get anyone started with MakerDAO with the most up-to-date documentation,\nas well as all the open source tools built to help you hack together something genuinely valuable.`}</p>\n    <h2>{`What should I bring`}</h2>\n    <h3>{`In-Person hackathons:`}</h3>\n    <p>{`These events can be quite a lot to take in at first if you've never been to something like it, so we've put together a list of\n`}<strong parentName=\"p\">{`non-obvious essentials`}</strong>{` to help you prepare:`}</p>\n    <Checklist mdxType=\"Checklist\">\n      <p>{`Notebook/scratch paper + pen/pencil`}</p>\n      <p>{`Toothbrush & paste`}</p>\n      <p>{`Deodorant`}</p>\n      <p>{`Sleeping bag/blanket, pillow`}</p>\n      <p>{`Sweater or jacket`}</p>\n      <p>{`Umbrella or raincoat`}</p>\n      <p>{`Extra clothes depending on the length of the event`}</p>\n      <p>{`Good vibes`}</p>\n    </Checklist>\n    <h3>{`Virtual Hackathons:`}</h3>\n    <p>{`In the current global climate, virtual events have become much more popular. Obviously, you need not bring anything,\nbut familiarizing yourself with MakerDAO before the event begins is a great way to get a headstart so and spend all the time building.`}</p>\n    <p>{`We recommend you join our `}<Link to=\"https://chat.makerdao.com/channel/community-development\" icon=\"rocketchat\" mdxType=\"Link\">{`community chat`}</Link>{`\nand ask questions either in the #dev or #community-development channels to get ahead.`}</p>\n    <h2>{`Start Hacking`}</h2>\n    <h3>{`Protocol`}</h3>\n    <List mdxType=\"List\">\n      <Link to=\"https://docs.makerdao.com\" mdxType=\"Link\">\n        <p>{`Maker Docs`}</p>\n        <p>{`Smart contract and protocol level documentation`}</p>\n      </Link>\n      <Link to=\"https://awesome.makerdao.com/#developer-resources\" mdxType=\"Link\">\n        <p>{`A curated list of documentation, guides, tools and APIs`}</p>\n        <p>{`Maker Developer Resources`}</p>\n      </Link>\n    </List>\n    <h3>{`Frontend`}</h3>\n    <List mdxType=\"List\">\n      <Link to=\"https://github.com/makerdao/dai-ui\" mdxType=\"Link\">\n        <p>{`Dai UI`}</p>\n        <p>{`Components and React-based recipes for various themes`}</p>\n      </Link>\n    </List>\n    <h3>{`Examples`}</h3>\n    <List mdxType=\"List\">\n      <Link to=\"#\" mdxType=\"Link\">\n        <p>{`Previous Hacks`}</p>\n        <p>{`A list of the best examples of hacks using Maker and DAI from previous events.`}</p>\n      </Link>\n    </List>\n    <h2>{`Best Practices`}</h2>\n    <Checklist mdxType=\"Checklist\">\n      <p>{`Take advantage of the opportunity to find mentors. A more experienced guide can help find up-to-date resources and suggest the latest, most efficient ways of building.`}</p>\n      <p>{`Set up a team ahead of time. Try and find a diverse group of people with different skills to round out your idea.`}</p>\n      <p>{`Hackathons are a meeting place for many different types of developers. Everyone is nervous. Most of us are introverts, so don't be afraid to take a chance and make some new friends who may be able to teach you something different.`}</p>\n      <p>{`Don't rely on the WiFi; download the latest software you need ahead of time.`}</p>\n      <p>{`Self-care is important. Be sure to get good rest and allow yourself to take breaks.`}</p>\n      <p>{`Balance work and play. There are both interesting people to meet and exciting, winning ideas to work on.`}</p>\n      <p>{`Think of your project as having core-features and nice-to-have features. Define the core features up-front, and add the nice-to-haves only after the main features are built.`}</p>\n      <p>{`Check and submit your hackathonâ€™s submission system at least an hour before the deadline. Most hackathons use a system like DevPost to keep the submission process running smoothly, but uploading can crash last minute.`}</p>\n      <p>{`Try to polish up for presentations. Use this hackathon and its platform to build a portfolio for yourself.`}</p>\n    </Checklist>\n    <h2>{`Post-Hackathon Best Practices`}</h2>\n    <Checklist mdxType=\"Checklist\">\n      <p>{`Update your repository or project page to reflect the current status of the project.`}</p>\n      <p>{`Tweet about your project. There may be other developers interested in helping you continuing to build out your hack.`}</p>\n      <p>{`Stay in touch with your teammates.`}</p>\n    </Checklist>\n    <Tout alt image mdxType=\"Tout\">\n      <Box mdxType=\"Box\">\n        <h2>{`Grants`}</h2>\n        <p>{`The Maker Grants Program uses Hackathons as a way to find good candidates for development grants. Winners are often fast-tracked.`}</p>\n        <p>{`We review all submissions and may reach out to interesting projects that were not necessarily winners. If you follow the best practices above,\nit'll be easier for us to contact you after the event.`}</p>\n        <Box sx={{\n          marginBottom: 3\n        }} mdxType=\"Box\">\n          <Link to=\"/funding/grants/\" mdxType=\"Link\">Grants</Link>\n        </Box>\n      </Box>\n    </Tout>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport {Children, Fragment} from 'react';\nimport { Box, Flex, jsx } from \"theme-ui\";\nimport Sticky from \"react-sticky-el\";\nimport { useLocation } from \"@reach/router\";\n\nimport { LanguageSelector } from \"@modules/localization\";\nimport { Sidenav, Breadcrumbs } from \"@modules/navigation\";\nimport { StatusBanner } from \"@modules/ui\";\nimport { SEO } from \"@modules/utility\";\n\n\nexport default (props) => {\n  const { children, pageContext, uri } = props;\n  const {\n    title,\n    description,\n    keywords,\n    featuredImage,\n    status,\n    hideLanguageSelector,\n    hideBreadcrumbs,\n  } = pageContext.frontmatter;\n\n  const statusProps =\n    typeof status === \"object\"\n      ? { children: status.text, ...status }\n      : { children: status };\n\n  const { pathname } = useLocation();\n  const path = pathname.split(\"/\");\n  const currentTopSection = path[2];\n\n  //For the sake of SEO we may want the page title to be based on the first h1 in our MDX file.\n  //if no title is specified in the metadata.\n  const getFirstHeading = () => {\n    //NOTE(Rejon): The children of layouts provided are MDX components!\n    //Find the first mdx child that's an H1\n    const firstHeading = Children.toArray(children).find(\n      (c) => c.props.mdxType === \"h1\"\n    );\n\n    //If we have an h1 in our file return it.\n    if (firstHeading !== undefined) {\n      return firstHeading.props.children;\n    }\n\n    return undefined;\n  };\n\n  //SEO page title priority is: frontmatter title -> First H1 in mdx -> Filename fallback from uri\n  //NOTE(Rejon): If the page is an index of a directory, the uri split will be the name of the directory. ie. /en/bounties -> bounties\n  const _pageTitle = title || getFirstHeading() || uri.split(\"/\").pop();\n\n  const hasTopSection =\n    currentTopSection !== undefined && currentTopSection !== \"\";\n\n  const seo = {\n    title: _pageTitle,\n    description,\n    keywords,\n    featuredImage,\n  };\n\n  return (\n    <Fragment>\n      <SEO {...seo} />\n      \n      {status && (\n        <Box sx={{ marginTop: hasTopSection ? 2 : 0 }}>\n          <StatusBanner sticky {...statusProps} sx={{ width: \"100%\" }} />\n        </Box>\n      )}\n          {(!hideBreadcrumbs || (hasTopSection && !hideLanguageSelector)) && (\n            <Flex\n              sx={{\n                justifyContent: \"space-between\",\n                position: \"relative\",\n                alignItems: \"flex-start\",\n                flexWrap: [\"wrap\", \"wrap\", \"unset\"],\n                px: !hasTopSection ? [3, 3, 0] : 0,\n              }}\n            >\n              {!hideBreadcrumbs && <Breadcrumbs />}\n              {hasTopSection && !hideLanguageSelector && <LanguageSelector />}\n            </Flex>\n          )}\n          <Box\n            sx={\n              hasTopSection && !hideLanguageSelector\n                ? {\n                    \"& > *:nth-of-type(1)\": {\n                      lineHeight: \"normal\",\n                    },\n                    \"& > *:nth-of-type(1), & > *:nth-of-type(2)\": {\n                      maxWidth: [\"100%\", \"100%\", \"calc(100% - 234px - 1rem)\"],\n                    },\n                    \"& > *:nth-of-type(2)\": { mb: \"32px\" },\n                  }\n                : {}\n            }\n          >\n            {children}\n          </Box>\n    </Fragment>\n  );\n};\n"],"sourceRoot":""}