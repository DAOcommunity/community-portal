{"version":3,"sources":["webpack:///./content/en/learn/vaults/risk.mdx","webpack:///./src/modules/layouts/mdx_layout.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","children","pageContext","uri","frontmatter","title","description","keywords","featuredImage","status","hideLanguageSelector","hideBreadcrumbs","statusProps","text","currentTopSection","useLocation","pathname","split","hasTopSection","undefined","seo","firstHeading","Children","toArray","find","c","getFirstHeading","pop","sx","marginTop","sticky","width","justifyContent","position","alignItems","flexWrap","px","lineHeight","maxWidth","mb"],"mappings":"8OAMaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,sCACA,8DACA,yJACA,yCACA,gLACA,wCACA,2LACA,mNACA,gIACA,+JACA,sCACA,4KACA,0CACA,0HACA,wBACE,oBAAIC,WAAW,MACb,mBAAGA,WAAW,MAAd,sEAEF,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,+DAEF,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,0GAGJ,sDACA,+PACA,wBACE,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,kBAEF,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,iBAEF,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,yBAGJ,2CACA,4GACA,wBACE,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,8DAEF,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,sDAEF,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,mIAORJ,EAAWK,gBAAiB,G,4XC7Db,aAACH,GAAW,IACjBI,EAA+BJ,EAA/BI,SAAUC,EAAqBL,EAArBK,YAAaC,EAAQN,EAARM,IADP,EAUpBD,EAAYE,YAPdC,EAHsB,EAGtBA,MACAC,EAJsB,EAItBA,YACAC,EALsB,EAKtBA,SACAC,EANsB,EAMtBA,cACAC,EAPsB,EAOtBA,OACAC,EARsB,EAQtBA,qBACAC,EATsB,EAStBA,gBAGIC,EACc,iBAAXH,E,yWAAP,EACMR,SAAUQ,EAAOI,MAASJ,GAC5B,CAAER,SAAUQ,GAIZK,EAFeC,wBAAbC,SACcC,MAAM,KACG,GAuBzBC,OACkBC,IAAtBL,GAAyD,KAAtBA,EAE/BM,EAAM,CACVf,MANiBA,GAjBK,WAGtB,IAAMgB,EAAeC,WAASC,QAAQtB,GAAUuB,MAC9C,SAACC,GAAD,MAA2B,OAApBA,EAAE5B,MAAMC,WAIjB,QAAqBqB,IAAjBE,EACF,OAAOA,EAAaxB,MAAMI,SAQFyB,IAAqBvB,EAAIc,MAAM,KAAKU,MAO9DrB,cACAC,WACAC,iBAGF,OACE,YAAC,WAAD,KACE,YAAC,IAAQY,GAERX,GACC,YAAC,IAAD,CAAKmB,GAAI,CAAEC,UAAWX,EAAgB,EAAI,IACxC,YAAC,IAAD,eAAcY,QAAM,GAAKlB,EAAzB,CAAsCgB,GAAI,CAAEG,MAAO,cAGhDpB,GAAoBO,IAAkBR,IACvC,YAAC,IAAD,CACEkB,GAAI,CACFI,eAAgB,gBAChBC,SAAU,WACVC,WAAY,aACZC,SAAU,CAAC,OAAQ,OAAQ,SAC3BC,GAAKlB,EAA4B,EAAZ,CAAC,EAAG,EAAG,MAG5BP,GAAmB,YAAC,IAAD,MACpBO,IAAkBR,GAAwB,YAAC,IAAD,OAG/C,YAAC,IAAD,CACEkB,GACEV,IAAkBR,EACd,CACE,uBAAwB,CACtB2B,WAAY,UAEd,6CAA8C,CAC5CC,SAAU,CAAC,OAAQ,OAAQ,8BAE7B,uBAAwB,CAAEC,GAAI,SAEhC,IAGLtC","file":"component---content-en-learn-vaults-risk-mdx-6e036cd8e3b9ba6024ba.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/community-portal/community-portal/src/modules/layouts/mdx_layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`Vault Risk`}</h1>\n    <p>{`Owning a Vault is inherently risky.`}</p>\n    <p>{`This page describes the types of risk associated with owning a Vault and provides common practices for mitigating those risks.`}</p>\n    <h2>{`Types of Risk`}</h2>\n    <p>{`There are four major categories of risks to consider when creating a Vault: Market Risks, User Risks, Systemic Risks, and Parameter Variability Risk.`}</p>\n    <h3>{`Market Risks`}</h3>\n    <p>{`Using a Vault involves generating Dai and transferring ownership of your assets to a smart-contract that can sell your assets in the event of a market downturn.`}</p>\n    <p>{`Any Vault with Generated Dai has a Liquidation Price, the price of the underlying asset at which one's Vault would be liquidated. Using a Vault for leverage introduces additional risk.`}</p>\n    <p>{`The potential for reward is higher through leverage, but the potential for loss is magnified as well.`}</p>\n    <p>{`It is a common practice among users to maintain a high Collateralization Ratio to protect from Market Risks and thereby Liquidation.`}</p>\n    <h3>{`User Risks`}</h3>\n    <p>{`This type of risk is associated with user error. MakerDAO can NOT reverse transactions or recover funds sent to incorrect addresses or contracts.`}</p>\n    <h3>{`Systemic Risks`}</h3>\n    <p>{`Systemic risks associated with operation of the Maker Protocol include, but are not limited to:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Malicious hacks attack against the smart-contract infrastructure.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Black Swan events involving one or more collateral assets.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Failure of centralized infrastructure. For example, failed internet connections, MetaMask bugs, etc.`}</p>\n      </li>\n    </ul>\n    <h3>{`Parameter Variability Risk`}</h3>\n    <p>{`It's important to note that Vault owners are subject to changes in the Risk Parameters that govern the system. This equates to financial risk for the Vault owner. Below is a partial list of parameters that are subject to change:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Stability Fee`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Debt Ceiling`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Liquidation Penalty`}</p>\n      </li>\n    </ul>\n    <h2>{`Mitigating Risk`}</h2>\n    <p>{`Common practices for mitigating the risks associated with owning a Vault include:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Using price alerts and/or notifications to monitor Vaults`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Increasing the collateralization ratio of a Vault`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Maintaining enough liquidity outside of your Vault to pay back Dai generated by the Vault or add to its deposited collateral`}</p>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport {Children, Fragment} from 'react';\nimport { Box, Flex, jsx } from \"theme-ui\";\nimport Sticky from \"react-sticky-el\";\nimport { useLocation } from \"@reach/router\";\n\nimport { LanguageSelector } from \"@modules/localization\";\nimport { Sidenav, Breadcrumbs } from \"@modules/navigation\";\nimport { StatusBanner } from \"@modules/ui\";\nimport { SEO } from \"@modules/utility\";\n\n\nexport default (props) => {\n  const { children, pageContext, uri } = props;\n  const {\n    title,\n    description,\n    keywords,\n    featuredImage,\n    status,\n    hideLanguageSelector,\n    hideBreadcrumbs,\n  } = pageContext.frontmatter;\n\n  const statusProps =\n    typeof status === \"object\"\n      ? { children: status.text, ...status }\n      : { children: status };\n\n  const { pathname } = useLocation();\n  const path = pathname.split(\"/\");\n  const currentTopSection = path[2];\n\n  //For the sake of SEO we may want the page title to be based on the first h1 in our MDX file.\n  //if no title is specified in the metadata.\n  const getFirstHeading = () => {\n    //NOTE(Rejon): The children of layouts provided are MDX components!\n    //Find the first mdx child that's an H1\n    const firstHeading = Children.toArray(children).find(\n      (c) => c.props.mdxType === \"h1\"\n    );\n\n    //If we have an h1 in our file return it.\n    if (firstHeading !== undefined) {\n      return firstHeading.props.children;\n    }\n\n    return undefined;\n  };\n\n  //SEO page title priority is: frontmatter title -> First H1 in mdx -> Filename fallback from uri\n  //NOTE(Rejon): If the page is an index of a directory, the uri split will be the name of the directory. ie. /en/bounties -> bounties\n  const _pageTitle = title || getFirstHeading() || uri.split(\"/\").pop();\n\n  const hasTopSection =\n    currentTopSection !== undefined && currentTopSection !== \"\";\n\n  const seo = {\n    title: _pageTitle,\n    description,\n    keywords,\n    featuredImage,\n  };\n\n  return (\n    <Fragment>\n      <SEO {...seo} />\n      \n      {status && (\n        <Box sx={{ marginTop: hasTopSection ? 2 : 0 }}>\n          <StatusBanner sticky {...statusProps} sx={{ width: \"100%\" }} />\n        </Box>\n      )}\n          {(!hideBreadcrumbs || (hasTopSection && !hideLanguageSelector)) && (\n            <Flex\n              sx={{\n                justifyContent: \"space-between\",\n                position: \"relative\",\n                alignItems: \"flex-start\",\n                flexWrap: [\"wrap\", \"wrap\", \"unset\"],\n                px: !hasTopSection ? [3, 3, 0] : 0,\n              }}\n            >\n              {!hideBreadcrumbs && <Breadcrumbs />}\n              {hasTopSection && !hideLanguageSelector && <LanguageSelector />}\n            </Flex>\n          )}\n          <Box\n            sx={\n              hasTopSection && !hideLanguageSelector\n                ? {\n                    \"& > *:nth-of-type(1)\": {\n                      lineHeight: \"normal\",\n                    },\n                    \"& > *:nth-of-type(1), & > *:nth-of-type(2)\": {\n                      maxWidth: [\"100%\", \"100%\", \"calc(100% - 234px - 1rem)\"],\n                    },\n                    \"& > *:nth-of-type(2)\": { mb: \"32px\" },\n                  }\n                : {}\n            }\n          >\n            {children}\n          </Box>\n    </Fragment>\n  );\n};\n"],"sourceRoot":""}