{"version":3,"sources":["webpack:///./content/en/contribute/index.mdx","webpack:///./src/modules/layouts/mdx_layout.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","Box","Chocolate","Flex","Icon","Button","InfoBlock","Tout","Link","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","sx","textAlign","parentName","backgroundColor","borderRadius","padding","display","flexDirection","flexWrap","position","size","to","alignSelf","mt","isMDXComponent","useTranslation","locale","t","DEFAULT_LOCALE","allMdx","useStaticQuery","children","pageContext","uri","pagePath","frontmatter","title","description","keywords","featuredImage","status","hideLanguageSelector","hideBreadcrumbs","pathDirs","replace","split","slice","urlNoLocale","join","calculateTreeData","edges","sidenavData","breadcrumbData","languageSelectorData","filter","node","UrlConverter","getLocaleFromPath","fileAbsolutePath","map","value","label","statusProps","text","currentTopSection","useLocation","pathname","_pageTitle","firstHeading","Children","toArray","find","c","undefined","getFirstHeading","pop","hasTopSection","renderSidenav","hideSidenav","renderLanguageSelector","renderBreadcrumbs","seo","contentWidthSubtract","width","boundaryElement","dontUpdateHolderHeightWhenSticky","style","hideOnBoundaryHit","data","currentPath","as","pl","pr","pb","marginTop","sticky","justifyContent","alignItems","px"],"mappings":"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","file":"component---content-en-contribute-index-mdx-52b41728baa174f6ad3c.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/community-portal/community-portal/src/modules/layouts/mdx_layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Box = makeShortcode(\"Box\");\nconst Chocolate = makeShortcode(\"Chocolate\");\nconst Flex = makeShortcode(\"Flex\");\nconst Icon = makeShortcode(\"Icon\");\nconst Button = makeShortcode(\"Button\");\nconst InfoBlock = makeShortcode(\"InfoBlock\");\nconst Tout = makeShortcode(\"Tout\");\nconst Link = makeShortcode(\"Link\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Box sx={{\n      textAlign: \"center\"\n    }} mdxType=\"Box\">\n      <h1>{`Contribute`}</h1>\n      <p><img parentName=\"p\" {...{\n          \"src\": \"/images/illus_work.png\",\n          \"alt\": \"Work with us\"\n        }}></img></p>\n    </Box>\n    <h2>{`How you Play a Part is up to You!`}</h2>\n    <p>{`Want to work in crypto? This is your opportunity. There are lots of ways to contribute to MakerDAO community development. `}</p>\n    <p>{`Contribute to existing bounties, help us create and edit content, translate, host a meetup or hackathon, take notes on governance and risk meetings, and more.`}</p>\n    <Box sx={{\n      backgroundColor: 'primaryMuted',\n      borderRadius: '12px',\n      padding: '12px',\n      display: 'flex',\n      flexDirection: 'column',\n      flexWrap: 'wrap'\n    }} mdxType=\"Box\">\n      <Chocolate mdxType=\"Chocolate\">\n        <Flex sx={{\n          position: 'relative',\n          flexDirection: 'column'\n        }} mdxType=\"Flex\">\n          <Icon size={\"40px\"} name=\"liquidation\" mdxType=\"Icon\" />\n          <h4>{`Bounties`}</h4>\n          <p>{`See what tasks we need help with.`}</p>\n          <Button to=\"/contribute/bounties/\" sx={{\n            alignSelf: 'flex-start',\n            mt: 'auto'\n          }} mdxType=\"Button\">Bounties</Button>\n        </Flex>\n        <Flex sx={{\n          position: 'relative',\n          flexDirection: 'column'\n        }} mdxType=\"Flex\">\n          <Icon size={\"40px\"} name=\"clipboard\" mdxType=\"Icon\" />\n          <h4>{`Content`}</h4>\n          <p>{`Write, edit, design, and code educational documents and resources.`}</p>\n          <Button to=\"/contribute/content/\" sx={{\n            alignSelf: 'flex-start',\n            mt: 'auto'\n          }} mdxType=\"Button\">Content</Button>\n        </Flex>\n        <Flex sx={{\n          position: 'relative',\n          flexDirection: 'column'\n        }} mdxType=\"Flex\">\n          <Icon size={\"40px\"} name=\"globe\" mdxType=\"Icon\" />\n          <h4>{`Translations`}</h4>\n          <p>{`Translate our content into other languages.`}</p>\n          <Button to=\"/contribute/translations/\" sx={{\n            alignSelf: 'flex-start',\n            mt: 'auto'\n          }} mdxType=\"Button\">Translations</Button>\n        </Flex>\n        <Flex sx={{\n          position: 'relative',\n          flexDirection: 'column'\n        }} mdxType=\"Flex\">\n          <Icon size={\"40px\"} name=\"people\" mdxType=\"Icon\" />\n          <h4>{`Meetups`}</h4>\n          <p>{`Host a meetup to educate and promote Maker and Dai.`}</p>\n          <Button to=\"/contribute/meetups/\" sx={{\n            alignSelf: 'flex-start',\n            mt: 'auto'\n          }} mdxType=\"Button\">Meetups</Button>\n        </Flex>\n        <Flex sx={{\n          position: 'relative',\n          flexDirection: 'column'\n        }} mdxType=\"Flex\">\n <Icon size={\"40px\"} name=\"laptop\" mdxType=\"Icon\" />\n          <h4>{`Hackathons`}</h4>\n          <p>{`Make something awesome with Maker or Dai.`}</p>\n          <Button to=\"/contribute/hackathons/\" sx={{\n            alignSelf: 'flex-start',\n            mt: 'auto'\n          }} mdxType=\"Button\">Hackathons</Button>\n        </Flex>\n        <Flex sx={{\n          position: 'relative',\n          flexDirection: 'column'\n        }} mdxType=\"Flex\">\n          <Icon size={\"40px\"} name=\"forum\" mdxType=\"Icon\" />\n          <h4>{`Governance & Risk`}</h4>\n          <p>{`Take notes at our weekly governance and risk meetings.`}</p>\n          <Button to=\"/contribute/governance_and_risk_meetings/\" sx={{\n            alignSelf: 'flex-start',\n            mt: 'auto'\n          }} mdxType=\"Button\">G&R Meetings</Button>\n        </Flex>\n      </Chocolate>\n    </Box>\n    <InfoBlock mdxType=\"InfoBlock\">\n      <Box mdxType=\"Box\">\n        <h2>{`Hire Yourself`}</h2>\n        <p>{`If you want to help and have any of the skills listed above – you just passed the interview! `}</p>\n        <p>{`Let us know what you want to work on and start earning Dai!`}</p>\n      </Box>\n    </InfoBlock>\n    <Tout mdxType=\"Tout\">\n      <Box mdxType=\"Box\">\n        <h4>{`Say \"Hi!\"`}</h4>\n        <p>{`The best place to start is in our chat. Say hello and get to know us. `}<Link to=\"https://chat.makerdao.com/channel/community-development\" mdxType=\"Link\">{`Community Chat`}</Link></p>\n      </Box>\n      <Box mdxType=\"Box\">\n        <h4>{`Got an Idea?`}</h4>\n        <p>{`We welcome ideas for improving our community resources. Submit a `}<Link to=\"/funding/community-projects/\" mdxType=\"Link\">{`proposal`}</Link>{` and we’ll help you get started.`}</p>\n      </Box>\n    </Tout>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport {Children, Fragment} from 'react';\nimport { Box, Flex, jsx } from \"theme-ui\";\nimport Sticky from \"react-sticky-el\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\n\nimport {MobileNav} from '@modules/navigation';\nimport { useTranslation } from \"@modules/localization/\";\nimport { LanguageSelector } from \"@modules/localization\";\nimport { Sidenav, Breadcrumbs } from \"@modules/navigation\";\nimport { StatusBanner } from \"@modules/ui\";\nimport calculateTreeData from \"@modules/navigation/calculateTreeData\";\nimport { SEO } from \"@modules/utility\";\nimport { UrlConverter, getLocaleFromPath } from \"@utils\";\n\nexport default (props) => {\n  const { locale, t, DEFAULT_LOCALE } = useTranslation();\n\n  const { allMdx } = useStaticQuery(graphql`\n    query getMDXData {\n      # Regex for all files that are NOT config files\n      allMdx(\n        filter: {\n          fileAbsolutePath: {\n            regex: \"//([\\\\\\\\w]{2})/(?!header.mdx|index.mdx|sidenav.mdx|example.mdx|social.mdx|footer.mdx|404.mdx|.js|.json)/\"\n          }\n        }\n      ) {\n        edges {\n          node {\n            headings(depth: h1) {\n              value\n            }\n            fileAbsolutePath\n            frontmatter {\n              title\n              order\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const { children, pageContext, uri } = props;\n\n  const {pagePath} = pageContext; \n  const {\n    title,\n    description,\n    keywords,\n    featuredImage,\n    status,\n    hideLanguageSelector,\n    hideBreadcrumbs,\n  } = pageContext.frontmatter;\n\n  const pathDirs = pagePath.replace(/^\\/|\\/$/g, \"\").split(\"/\").slice(1);\n  const urlNoLocale = pathDirs.join(\"/\");\n  \n  const { sidenavData, breadcrumbData } = calculateTreeData(\n    allMdx.edges,\n    pathDirs[0],\n    DEFAULT_LOCALE,\n    locale,\n    pathDirs\n  );\n\n  //NOTE(Rejon): Must be in the shape that React Select expects for it's options.\n  //Something that can be queried? \n  const languageSelectorData = allMdx.edges\n    .filter(({ node }) => {\n      //Drop the end slash, remove the locale, compare the string\n      //TODO(Rejon): This works for now, but can probably be optimized with a Regex solution.\n      const nodeURL = UrlConverter(node)\n        .replace(/^\\/|\\/$/g, \"\")\n        .split(\"/\")\n        .slice(1)\n        .join(\"/\");\n\n      return (\n        nodeURL === urlNoLocale &&\n        getLocaleFromPath(node.fileAbsolutePath) !== locale\n      );\n    })\n    .map(({ node }) => ({\n      value: UrlConverter(node),\n      label: t(\n        \"Language\",\n        null,\n        null,\n        getLocaleFromPath(node.fileAbsolutePath)\n      ),\n    }));\n\n  const statusProps =\n    typeof status === \"object\"\n      ? { children: status.text, ...status }\n      : { children: status };\n\n  const { pathname } = useLocation();\n  const path = pathname.split(\"/\");\n  const currentTopSection = path[2];\n\n  //For the sake of SEO we may want the page title to be based on the first h1 in our MDX file.\n  //if no title is specified in the metadata.\n  const getFirstHeading = () => {\n    //NOTE(Rejon): The children of layouts provided are MDX components!\n    //Find the first mdx child that's an H1\n    const firstHeading = Children.toArray(children).find(\n      (c) => c.props.mdxType === \"h1\"\n    );\n\n    //If we have an h1 in our file return it.\n    if (firstHeading !== undefined) {\n      return firstHeading.props.children;\n    }\n\n    return undefined;\n  };\n\n  //SEO page title priority is: frontmatter title -> First H1 in mdx -> Filename fallback from uri\n  //NOTE(Rejon): If the page is an index of a directory, the uri split will be the name of the directory. ie. /en/bounties -> bounties\n  const _pageTitle = title || getFirstHeading() || uri.split(\"/\").pop();\n\n  const hasTopSection =\n    currentTopSection !== undefined && currentTopSection !== \"\";\n\n  const renderSidenav = pageContext.frontmatter && !pageContext.frontmatter.hideSidenav && hasTopSection;\n  const renderLanguageSelector = hasTopSection && !hideLanguageSelector;\n  const renderBreadcrumbs = (!hideBreadcrumbs || (hasTopSection && !hideLanguageSelector));\n\n  const seo = {\n    title: _pageTitle,\n    description,\n    keywords,\n    featuredImage,\n  };\n\n  let contentWidthSubtract = renderLanguageSelector ? 234 : 0; //NOTE(Rejon): Based on word from design, language selector being hidden doesn't change content width.\n\n  if (renderSidenav) {\n    contentWidthSubtract += 256;\n  }\n\n\n  return (\n    <Fragment>\n      {renderSidenav\n          &&\n          <Box\n            sx={{\n              width: \"256px\",\n              display: [\"none\", \"none\", \"initial\"],\n            }}\n          >\n          <Sticky\n            boundaryElement=\".content-boundary\"\n            dontUpdateHolderHeightWhenSticky={true}\n            style={{ position: \"relative\" }}\n            hideOnBoundaryHit={false}\n            sx={{display: [\"none\", \"none\", \"initial\"]}}\n          >\n            <Sidenav data={sidenavData} currentPath={pagePath}/>\n          </Sticky>\n        </Box>\n      }\n      <Box as=\"article\" sx={{\n        width: ['100%', '100%', `calc(100% - ${contentWidthSubtract}px)`],\n        mt: hasTopSection ? [4, 4, \"59px\"] : 0,\n        pl: hasTopSection ? [4, 4, \"64px\"] : 0,\n        pr: hasTopSection ? [4, 4, 0] : 0,\n        pb: 4,\n        \n      }}>\n      <SEO {...seo} />\n      \n      {status && (\n        <Box sx={{ marginTop: hasTopSection ? 2 : 0 }}>\n          <StatusBanner sticky {...statusProps} sx={{ width: \"100%\" }} />\n        </Box>\n      )}\n      {renderBreadcrumbs && \n        <Flex\n          sx={{\n            justifyContent: \"space-between\",\n            position: \"relative\",\n            alignItems: \"flex-start\",\n            flexWrap: [\"wrap\", \"wrap\", \"unset\"],\n            px: !hasTopSection ? [3, 3, 0] : 0,\n          }}\n        >\n          <Breadcrumbs data={breadcrumbData} pathDirs={pathDirs}/>\n        </Flex>\n      }\n      <Box sx={{display: ['block', 'block', 'none']}}>\n        {/* MOBILE LANGUAGE SELECTOR */}\n        {renderLanguageSelector && <LanguageSelector data={languageSelectorData} pagePath={pagePath}/>}\n      </Box>\n      <Box>\n        {children}\n      </Box>\n      </Box>\n      \n      <Box sx={{display: ['none', 'none', 'block']}}>\n        {/* DESKTOP LANGUAGE SELECTOR */}\n        {renderLanguageSelector && <LanguageSelector data={languageSelectorData} pagePath={pagePath}/>}\n      </Box>\n      <MobileNav sidenavData={sidenavData}/>\n    </Fragment>\n  );\n};\n"],"sourceRoot":""}