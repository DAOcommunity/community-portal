{"version":3,"sources":["webpack:///./content/en/work_with_us/bounties/working-on-a-bounty.mdx","webpack:///./src/modules/layouts/mdx_layout.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","CTA","Icon","Link","Process","Box","List","Tout","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","size","to","parentName","icon","image","alt","isMDXComponent","useTranslation","locale","t","DEFAULT_LOCALE","allMdx","useStaticQuery","children","pageContext","uri","pagePath","frontmatter","title","description","keywords","featuredImage","status","hideLanguageSelector","hideBreadcrumbs","pathDirs","replace","split","slice","urlNoLocale","join","log","calculateTreeData","edges","sidenavData","breadcrumbData","languageSelectorData","filter","node","UrlConverter","getLocaleFromPath","fileAbsolutePath","map","value","label","statusProps","text","currentTopSection","useLocation","pathname","_pageTitle","firstHeading","Children","toArray","find","c","undefined","getFirstHeading","pop","hasTopSection","renderSidenav","hideSidenav","renderLanguageSelector","renderBreadcrumbs","seo","contentWidthSubtract","sx","width","display","boundaryElement","dontUpdateHolderHeightWhenSticky","style","position","hideOnBoundaryHit","data","currentPath","as","mt","pl","pr","pb","marginTop","sticky","justifyContent","alignItems","flexWrap","px"],"mappings":"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","file":"component---content-en-work-with-us-bounties-working-on-a-bounty-mdx-efa37ebd92aa840df666.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/community-portal/community-portal/src/modules/layouts/mdx_layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst CTA = makeShortcode(\"CTA\");\nconst Icon = makeShortcode(\"Icon\");\nconst Link = makeShortcode(\"Link\");\nconst Process = makeShortcode(\"Process\");\nconst Box = makeShortcode(\"Box\");\nconst List = makeShortcode(\"List\");\nconst Tout = makeShortcode(\"Tout\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`Working on a Bounty`}</h1>\n    <p>{`Bounties come in many shapes and sizes but there are a few ways to make sure things run smoothly. Hereâ€™s the recommended workflow for new contributors.`}</p>\n    <CTA mdxType=\"CTA\">\n      <Icon size={\"40px\"} name=\"liquidation\" mdxType=\"Icon\" />  Make sure to express interest in the chat before working on a bounty.{\" \"} <Link to=\"https://chat.makerdao.com/channel/community-development\" mdxType=\"Link\"> Community Development </Link>\n    </CTA>\n    <h2>{`The Process`}</h2>\n    <Process mdxType=\"Process\">\n      <Box mdxType=\"Box\">\n        <h3>{`Work With the Community Team`}</h3>\n        <p>{`Most medium to large bounties require collaboration with the Contributing Team. Contributors working on bounties are assigned an Advisor, and in some cases, introduced to other contributors.`}</p>\n        <p>{`Work together to develop a plan that helps structure the approach:`}</p>\n        <ul>\n          <li parentName=\"ul\">{`Clear, attainable goals`}</li>\n          <li parentName=\"ul\">{`Realistic timelines and deadlines`}</li>\n          <li parentName=\"ul\">{`The best way to split up any work`}</li>\n          <li parentName=\"ul\">{`Roles and responsibilities`}</li>\n          <li parentName=\"ul\">{`Times to sync up`}</li>\n        </ul>\n        <p>{`Need help getting started? Utilize a project plan template.`}</p>\n        <p><a parentName=\"p\" {...{\n            \"href\": \"https://bit.ly/comm-dev-project-planning-template\"\n          }}>{`Project planning template`}</a></p>\n      </Box>\n      <Box mdxType=\"Box\">\n        <h3>{`Review the Resources`}</h3>\n        <h4>{`Content`}</h4>\n        <p>{`For writing or creating content, review the following resources to ensure the content meets standards.`}</p>\n        <List mdxType=\"List\">\n          <Link to=\"/work_with_us/content/writing-style-guide/\" mdxType=\"Link\">Writing style guide </Link>\n          <Link to=\"/work_with_us/content/reviewer-guide/\" mdxType=\"Link\">Reviewer guide </Link>\n          <Link to=\"/work_with_us/content/\" mdxType=\"Link\">Visual style guide </Link>\n        </List>\n        <h4>{`Technical Resources`}</h4>\n        <p>{`For developing with Maker, review this curated list of documentation, guides, tools, and APIs.`}</p>\n        <p><a parentName=\"p\" {...{\n            \"href\": \"https://awesome.makerdao.com/#developer-resources\"\n          }}>{`Maker Developer Resources`}</a></p>\n        <p>{`For developing on this Portal, review this documentation, guides.`}</p>\n        <p><a parentName=\"p\" {...{\n            \"href\": \"/work_with_us/content/\"\n          }}>{`Portal Resources`}</a></p>\n      </Box>\n      <Box mdxType=\"Box\">\n        <h3>{`Work Openly`}</h3>\n        <p>{`Start work in a Google Doc so the Contributing Team can collaboratively review and leave feedback. Be sure to communicate regularly with the team and the wider community. It's strongly encouraged to share work, ask for feedback and keep everyone updated in the `}<a parentName=\"p\" {...{\n            \"href\": \"https://chat.makerdao.com/channel/community-development\"\n          }}>{`community chat`}</a></p>\n        <p>{`Keep the GitHub issue attached to your bounty up to date with comments and feedback.`}</p>\n        <Box mdxType=\"Box\">\n        </Box>\n        <h3>{`Submit a Final Draft`}</h3>\n        <CTA icon=\"search\" mdxType=\"CTA\">\n  If the work is content-based, it will have to be copied from a Google Doc to markdown. All content on the site is in markdown. Use Hack.md to create markdown content.\n        </CTA>\n        <p>{`When your work is ready for final approval, submit a pull request in GitHub and update the GitHub issue.`}</p>\n        <p><a parentName=\"p\" {...{\n            \"href\": \"/work_with_us/content/using-github/\"\n          }}>{`How to use GitHub`}</a></p>\n        <p>{`Once a pull request has been approved, the Advisor will let give directions for requesting Dai.`}</p>\n      </Box>\n      <Box mdxType=\"Box\">\n        <h3>{`Help Improve the Process`}</h3>\n        <p>{`Once a bounty has been completed, let us know what went well and what didnâ€™t. Suggest any ideas for improvements. This can be done on a call or via `}<a parentName=\"p\" {...{\n            \"href\": \"https://chat.makerdao.com/channel/community-development\"\n          }}>{`community chat`}</a>{`.`}</p>\n      </Box>\n    </Process>\n  <Tout image alt mdxType=\"Tout\">\n  <Box mdxType=\"Box\">\n        <h2>{`See Open Bounties`}</h2>\n        <p>{`Ready to get to work? Check out which bounties currently need help.`}</p>\n        <p><a parentName=\"p\" {...{\n            \"href\": \"https://github.com/makerdao/community/projects/2?card_filter_query=label%3A%22help+wanted%22\"\n          }}>{`See open bounties`}</a></p>\n  </Box>\n  <Box mdxType=\"Box\">\n        <h2>{`Want To Improve this Page?`}</h2>\n        <p>{`Learn how to suggest content changes to this page.`}</p>\n        <p><a parentName=\"p\" {...{\n            \"href\": \"/work_with_us/content/\"\n          }}>{`Portal Resources`}</a></p>\n      </Box>\n    </Tout>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport {Children, Fragment} from 'react';\nimport { Box, Flex, jsx } from \"theme-ui\";\nimport Sticky from \"react-sticky-el\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\n\nimport {MobileNav} from '@modules/navigation';\nimport { useTranslation } from \"@modules/localization/\";\nimport { LanguageSelector } from \"@modules/localization\";\nimport { Sidenav, Breadcrumbs } from \"@modules/navigation\";\nimport { StatusBanner } from \"@modules/ui\";\nimport calculateTreeData from \"@modules/navigation/calculateTreeData\";\nimport { SEO } from \"@modules/utility\";\nimport { UrlConverter, getLocaleFromPath } from \"@utils\";\n\nexport default (props) => {\n  const { locale, t, DEFAULT_LOCALE } = useTranslation();\n\n  const { allMdx } = useStaticQuery(graphql`\n    query getMDXData {\n      # Regex for all files that are NOT config files\n      allMdx(\n        filter: {\n          fileAbsolutePath: {\n            regex: \"//([\\\\\\\\w]{2})/(?!header.mdx|index.mdx|sidenav.mdx|example.mdx|social.mdx|footer.mdx|404.mdx|.js|.json)/\"\n          }\n        }\n      ) {\n        edges {\n          node {\n            headings(depth: h1) {\n              value\n            }\n            fileAbsolutePath\n            frontmatter {\n              title\n              order\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const { children, pageContext, uri } = props;\n\n  const {pagePath} = pageContext; \n  const {\n    title,\n    description,\n    keywords,\n    featuredImage,\n    status,\n    hideLanguageSelector,\n    hideBreadcrumbs,\n  } = pageContext.frontmatter;\n\n  const pathDirs = pagePath.replace(/^\\/|\\/$/g, \"\").split(\"/\").slice(1);\n  const urlNoLocale = pathDirs.join(\"/\");\n  console.log(pathDirs[0]);\n  const { sidenavData, breadcrumbData } = calculateTreeData(\n    allMdx.edges,\n    pathDirs[0],\n    DEFAULT_LOCALE,\n    locale,\n    pathDirs\n  );\n\n  //NOTE(Rejon): Must be in the shape that React Select expects for it's options.\n  //Something that can be queried? \n  const languageSelectorData = allMdx.edges\n    .filter(({ node }) => {\n      //Drop the end slash, remove the locale, compare the string\n      //TODO(Rejon): This works for now, but can probably be optimized with a Regex solution.\n      const nodeURL = UrlConverter(node)\n        .replace(/^\\/|\\/$/g, \"\")\n        .split(\"/\")\n        .slice(1)\n        .join(\"/\");\n\n      return (\n        nodeURL === urlNoLocale &&\n        getLocaleFromPath(node.fileAbsolutePath) !== locale\n      );\n    })\n    .map(({ node }) => ({\n      value: UrlConverter(node),\n      label: t(\n        \"Language\",\n        null,\n        null,\n        getLocaleFromPath(node.fileAbsolutePath)\n      ),\n    }));\n\n  const statusProps =\n    typeof status === \"object\"\n      ? { children: status.text, ...status }\n      : { children: status };\n\n  const { pathname } = useLocation();\n  const path = pathname.split(\"/\");\n  const currentTopSection = path[2];\n\n  //For the sake of SEO we may want the page title to be based on the first h1 in our MDX file.\n  //if no title is specified in the metadata.\n  const getFirstHeading = () => {\n    //NOTE(Rejon): The children of layouts provided are MDX components!\n    //Find the first mdx child that's an H1\n    const firstHeading = Children.toArray(children).find(\n      (c) => c.props.mdxType === \"h1\"\n    );\n\n    //If we have an h1 in our file return it.\n    if (firstHeading !== undefined) {\n      return firstHeading.props.children;\n    }\n\n    return undefined;\n  };\n\n  //SEO page title priority is: frontmatter title -> First H1 in mdx -> Filename fallback from uri\n  //NOTE(Rejon): If the page is an index of a directory, the uri split will be the name of the directory. ie. /en/bounties -> bounties\n  const _pageTitle = title || getFirstHeading() || uri.split(\"/\").pop();\n\n  const hasTopSection =\n    currentTopSection !== undefined && currentTopSection !== \"\";\n\n  const renderSidenav = pageContext.frontmatter && !pageContext.frontmatter.hideSidenav && hasTopSection;\n  const renderLanguageSelector = hasTopSection && !hideLanguageSelector;\n  const renderBreadcrumbs = (!hideBreadcrumbs || (hasTopSection && !hideLanguageSelector));\n\n  const seo = {\n    title: _pageTitle,\n    description,\n    keywords,\n    featuredImage,\n  };\n\n  let contentWidthSubtract = renderLanguageSelector ? 234 : 0; //NOTE(Rejon): Based on word from design, language selector being hidden doesn't change content width.\n\n  if (renderSidenav) {\n    contentWidthSubtract += 256;\n  }\n\n\n  return (\n    <Fragment>\n      {renderSidenav\n          &&\n          <Box\n            sx={{\n              width: \"256px\",\n              display: [\"none\", \"none\", \"initial\"],\n            }}\n          >\n          <Sticky\n            boundaryElement=\".content-boundary\"\n            dontUpdateHolderHeightWhenSticky={true}\n            style={{ position: \"relative\" }}\n            hideOnBoundaryHit={false}\n            sx={{display: [\"none\", \"none\", \"initial\"]}}\n          >\n            <Sidenav data={sidenavData} currentPath={pagePath}/>\n          </Sticky>\n        </Box>\n      }\n      <Box as=\"article\" sx={{\n        width: ['100%', '100%', `calc(100% - ${contentWidthSubtract}px)`],\n        mt: hasTopSection ? [4, 4, \"59px\"] : 0,\n        pl: hasTopSection ? [4, 4, \"64px\"] : 0,\n        pr: hasTopSection ? [4, 4, 0] : 0,\n        pb: 4,\n        \n      }}>\n      <SEO {...seo} />\n      \n      {status && (\n        <Box sx={{ marginTop: hasTopSection ? 2 : 0 }}>\n          <StatusBanner sticky {...statusProps} sx={{ width: \"100%\" }} />\n        </Box>\n      )}\n      {renderBreadcrumbs && \n        <Flex\n          sx={{\n            justifyContent: \"space-between\",\n            position: \"relative\",\n            alignItems: \"flex-start\",\n            flexWrap: [\"wrap\", \"wrap\", \"unset\"],\n            px: !hasTopSection ? [3, 3, 0] : 0,\n          }}\n        >\n          <Breadcrumbs data={breadcrumbData} pathDirs={pathDirs}/>\n        </Flex>\n      }\n      <Box sx={{display: ['block', 'block', 'none']}}>\n        {/* MOBILE LANGUAGE SELECTOR */}\n        {renderLanguageSelector && <LanguageSelector data={languageSelectorData} pagePath={pagePath}/>}\n      </Box>\n      <Box>\n        {children}\n      </Box>\n      </Box>\n      \n      <Box sx={{display: ['none', 'none', 'block']}}>\n        {/* DESKTOP LANGUAGE SELECTOR */}\n        {renderLanguageSelector && <LanguageSelector data={languageSelectorData} pagePath={pagePath}/>}\n      </Box>\n      <MobileNav sidenavData={sidenavData}/>\n    </Fragment>\n  );\n};\n"],"sourceRoot":""}