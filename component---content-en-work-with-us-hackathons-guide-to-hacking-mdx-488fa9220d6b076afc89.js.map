{"version":3,"sources":["webpack:///./content/en/work_with_us/hackathons/guide-to-hacking.mdx","webpack:///./src/modules/layouts/mdx_layout.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","Checklist","Link","List","Tout","Box","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","to","icon","alt","image","sx","marginBottom","isMDXComponent","children","pageContext","uri","frontmatter","title","description","keywords","featuredImage","status","hideLanguageSelector","hideBreadcrumbs","statusProps","text","currentTopSection","useLocation","pathname","split","hasTopSection","undefined","seo","firstHeading","Children","toArray","find","c","getFirstHeading","pop","marginTop","sticky","width","justifyContent","position","alignItems","flexWrap","px","lineHeight","maxWidth","mb"],"mappings":"8OAMaA,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,oBAASC,KAGZG,EAAYL,EAAc,aAC1BM,EAAON,EAAc,QACrBO,EAAOP,EAAc,QACrBQ,EAAOR,EAAc,QACrBS,EAAMT,EAAc,OACpBU,EAAc,CAClBX,gBAEIY,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGZ,EACF,8BACD,OAAO,cAACS,EAAD,iBAAeD,EAAiBR,EAAhC,CAAuCY,WAAYA,EAAYC,QAAQ,cAG5E,8CACA,+CACA,0PACA,gDACA,gDACA,+MACA,oDAAiC,wBAAQC,WAAW,KAAnB,0BAAjC,2BACA,cAACX,EAAD,CAAWU,QAAQ,aACjB,oDACA,uCACA,sCACA,qCACA,oCACA,uCACA,kCACA,iCACA,2CACA,8CACA,4DACA,sCAEF,8CACA,gSACA,mDAAgC,cAACT,EAAD,CAAMW,GAAG,0DAA0DC,KAAK,aAAaH,QAAQ,QAA7F,kBAAhC,wCAAsM,cAACT,EAAD,CAAMW,GAAG,wCAAwCF,QAAQ,QAAzD,QAAtM,OAA6R,cAACT,EAAD,CAAMW,GAAG,0DAA0DF,QAAQ,QAA3E,0BAA7R,2BACA,yCACA,oCACA,cAACR,EAAD,CAAMQ,QAAQ,QACZ,cAACT,EAAD,CAAMW,GAAG,4BAA4BF,QAAQ,QAC3C,qCACA,yEAEF,cAACT,EAAD,CAAMW,GAAG,oDAAoDF,QAAQ,QACnE,iFACA,sDAGJ,oCACA,cAACR,EAAD,CAAMQ,QAAQ,QACZ,cAACT,EAAD,CAAMW,GAAG,qCAAqCF,QAAQ,QACpD,iCACA,gFAGJ,oCACA,cAACR,EAAD,CAAMQ,QAAQ,QACZ,cAACT,EAAD,CAAMW,GAAG,IAAIF,QAAQ,QACnB,yCACA,iFAGJ,0CACA,cAACV,EAAD,CAAWU,QAAQ,aACjB,sMACA,kIACA,8PACA,wGACA,kHACA,yJACA,gNACA,wPACA,+HAEF,yDACA,cAACV,EAAD,CAAWU,QAAQ,aACjB,gHACA,6IACA,8DAEF,cAACP,EAAD,CAAMW,KAAG,EAACC,OAAK,EAACL,QAAQ,QACtB,cAACN,EAAD,CAAKM,QAAQ,OACX,kCACA,gKACA,mNACA,cAACN,EAAD,CAAKY,GAAI,CACPC,aAAc,GACbP,QAAQ,OACT,cAACT,EAAD,CAAMW,GAAG,mBAAmBF,QAAQ,QAApC,cAQVF,EAAWU,gBAAiB,G,4XCrGb,aAACrB,GAAW,IACjBsB,EAA+BtB,EAA/BsB,SAAUC,EAAqBvB,EAArBuB,YAAaC,EAAQxB,EAARwB,IADP,EAUpBD,EAAYE,YAPdC,EAHsB,EAGtBA,MACAC,EAJsB,EAItBA,YACAC,EALsB,EAKtBA,SACAC,EANsB,EAMtBA,cACAC,EAPsB,EAOtBA,OACAC,EARsB,EAQtBA,qBACAC,EATsB,EAStBA,gBAGIC,EACc,iBAAXH,E,yWAAP,EACMR,SAAUQ,EAAOI,MAASJ,GAC5B,CAAER,SAAUQ,GAIZK,EAFeC,wBAAbC,SACcC,MAAM,KACG,GAuBzBC,OACkBC,IAAtBL,GAAyD,KAAtBA,EAE/BM,EAAM,CACVf,MANiBA,GAjBK,WAGtB,IAAMgB,EAAeC,WAASC,QAAQtB,GAAUuB,MAC9C,SAACC,GAAD,MAA2B,OAApBA,EAAE9C,MAAMa,WAIjB,QAAqB2B,IAAjBE,EACF,OAAOA,EAAa1C,MAAMsB,SAQFyB,IAAqBvB,EAAIc,MAAM,KAAKU,MAO9DrB,cACAC,WACAC,iBAGF,OACE,YAAC,WAAD,KACE,YAAC,IAAQY,GAERX,GACC,YAAC,IAAD,CAAKX,GAAI,CAAE8B,UAAWV,EAAgB,EAAI,IACxC,YAAC,IAAD,eAAcW,QAAM,GAAKjB,EAAzB,CAAsCd,GAAI,CAAEgC,MAAO,cAGhDnB,GAAoBO,IAAkBR,IACvC,YAAC,IAAD,CACEZ,GAAI,CACFiC,eAAgB,gBAChBC,SAAU,WACVC,WAAY,aACZC,SAAU,CAAC,OAAQ,OAAQ,SAC3BC,GAAKjB,EAA4B,EAAZ,CAAC,EAAG,EAAG,MAG5BP,GAAmB,YAAC,IAAD,MACpBO,IAAkBR,GAAwB,YAAC,IAAD,OAG/C,YAAC,IAAD,CACEZ,GACEoB,IAAkBR,EACd,CACE,uBAAwB,CACtB0B,WAAY,UAEd,6CAA8C,CAC5CC,SAAU,CAAC,OAAQ,OAAQ,8BAE7B,uBAAwB,CAAEC,GAAI,SAEhC,IAGLrC","file":"component---content-en-work-with-us-hackathons-guide-to-hacking-mdx-488fa9220d6b076afc89.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/community-portal/community-portal/src/modules/layouts/mdx_layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Checklist = makeShortcode(\"Checklist\");\nconst Link = makeShortcode(\"Link\");\nconst List = makeShortcode(\"List\");\nconst Tout = makeShortcode(\"Tout\");\nconst Box = makeShortcode(\"Box\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`Hacking with Maker`}</h1>\n    <h2>{`Developer Resources`}</h2>\n    <p>{`Any project may seem complicated at first. This guide will help you get started with MakerDAO. The most up-to-date documentation and all the open-source tools within will help you hack together something genuinely valuable.`}</p>\n    <h2>{`What Should I Bring?`}</h2>\n    <h3>{`In-Person Hackathons`}</h3>\n    <p>{`Hackathons can last several days, and there are loads of people working on projects around the clock. These events can be a lot to make sense of if you've never been to one before.`}</p>\n    <p>{`We put together a list of `}<strong parentName=\"p\">{`non-obvious essentials`}</strong>{` to help you get ready.`}</p>\n    <Checklist mdxType=\"Checklist\">\n      <p>{`Notebook | Scratch Paper `}</p>\n      <p>{`Pen | Pencil`}</p>\n      <p>{`Toothbrush `}</p>\n      <p>{`Toothpaste`}</p>\n      <p>{`Deodorant`}</p>\n      <p>{`Sleeping Bag`}</p>\n      <p>{`Blanket`}</p>\n      <p>{`Pillow`}</p>\n      <p>{`Sweater | Jacket`}</p>\n      <p>{`Umbrella | Raincoat`}</p>\n      <p>{`Extra Clothes (for longer events)`}</p>\n      <p>{`Good Vibes`}</p>\n    </Checklist>\n    <h3>{`Virtual Hackathons`}</h3>\n    <p>{`With the current global climate, virtual events have gained popularity. For a virtual hackathon, you don't need to bring anything, but familiarizing yourself with MakerDAO beforehand is a great way to get a headstart. That way, you can spend more time building!`}</p>\n    <p>{`We recommend joining our `}<Link to=\"https://chat.makerdao.com/channel/community-development\" icon=\"rocketchat\" mdxType=\"Link\">{`Community Chat`}</Link>{` and asking questions either in the  `}<Link to=\"https://chat.makerdao.com/channel/dev\" mdxType=\"Link\">{`#dev`}</Link>{` or `}<Link to=\"https://chat.makerdao.com/channel/community-development\" mdxType=\"Link\">{`#community-development`}</Link>{` channels to get ahead.`}</p>\n    <h2>{`Start Hacking`}</h2>\n    <h3>{`Protocol`}</h3>\n    <List mdxType=\"List\">\n      <Link to=\"https://docs.makerdao.com\" mdxType=\"Link\">\n        <p>{`Maker Docs`}</p>\n        <p>{`Smart Contract & Protocol Level Documentation`}</p>\n      </Link>\n      <Link to=\"https://awesome.makerdao.com/#developer-resources\" mdxType=\"Link\">\n        <p>{`Curated List of Documentation, Guides, Tools, and APIs`}</p>\n        <p>{`Maker Developer Resources`}</p>\n      </Link>\n    </List>\n    <h3>{`Frontend`}</h3>\n    <List mdxType=\"List\">\n      <Link to=\"https://github.com/makerdao/dai-ui\" mdxType=\"Link\">\n        <p>{`Dai UI`}</p>\n        <p>{`Components & React-Based Recipes for Various Themes`}</p>\n      </Link>\n    </List>\n    <h3>{`Examples`}</h3>\n    <List mdxType=\"List\">\n      <Link to=\"#\" mdxType=\"Link\">\n        <p>{`Previous Hacks`}</p>\n        <p>{`The best Maker & DAI Hacks from previous hackathons.`}</p>\n      </Link>\n    </List>\n    <h2>{`Best Practices`}</h2>\n    <Checklist mdxType=\"Checklist\">\n      <p>{`Take advantage of the opportunity to find mentors. A more experienced guide can help you find up-to-date resources and suggest the latest, most efficient ways of building.`}</p>\n      <p>{`Set up a team ahead of time. Find a diverse group of people with various skills to round out your idea.`}</p>\n      <p>{`Hackathons are a meeting place for many kinds of developers. Don't be afraid to take the opportunity to make new friends who may be able to teach you something new. Everyone is nervous, and most of us are introverts. It's okay!`}</p>\n      <p>{`Download the latest software you need ahead of time. Don't rely on the WiFi. `}</p>\n      <p>{`Self-care is important. Get proper rest, and make sure to take breaks when you need to.`}</p>\n      <p>{`Balance work and play. Meet exciting people to meet and work on attractive, winning ideas. Everyone comes to have a good time!`}</p>\n      <p>{`Think of your project as having both core-features and nice-to-have features. Define the core features up-front, and add the nice-to-haves only after building out the main features.`}</p>\n      <p>{`Check and submit your hackathon's submission system at least an hour before the deadline. Most hackathons use a system like DevPost to keep the submission process running smoothly, but uploading can crash the last minute.`}</p>\n      <p>{`Polish up for presentations. Use this hackathon and its platform to build a portfolio for yourself.`}</p>\n    </Checklist>\n    <h2>{`Post-Hackathon Best Practices`}</h2>\n    <Checklist mdxType=\"Checklist\">\n      <p>{`Update your repository or project page to reflect the current status of your project.`}</p>\n      <p>{`Tweet about your project. There may be other developers interested in helping you continue to build out your hack.`}</p>\n      <p>{`Stay in touch with your teammates.`}</p>\n    </Checklist>\n    <Tout alt image mdxType=\"Tout\">\n      <Box mdxType=\"Box\">\n        <h2>{`Grants`}</h2>\n        <p>{`The Maker Grants Program uses Hackathons as a way to find suitable candidates for development grants. Winners are often fast-tracked.`}</p>\n        <p>{`We review all submissions, so sometimes, we may follow up on a unique project that wasn't necessarily a winner. Make contacting you easier for us by following the best practices above.`}</p>\n        <Box sx={{\n          marginBottom: 3\n        }} mdxType=\"Box\">\n          <Link to=\"/funding/grants/\" mdxType=\"Link\">Grants</Link>\n        </Box>\n      </Box>\n    </Tout>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport {Children, Fragment} from 'react';\nimport { Box, Flex, jsx } from \"theme-ui\";\nimport Sticky from \"react-sticky-el\";\nimport { useLocation } from \"@reach/router\";\n\nimport { LanguageSelector } from \"@modules/localization\";\nimport { Sidenav, Breadcrumbs } from \"@modules/navigation\";\nimport { StatusBanner } from \"@modules/ui\";\nimport { SEO } from \"@modules/utility\";\n\n\nexport default (props) => {\n  const { children, pageContext, uri } = props;\n  const {\n    title,\n    description,\n    keywords,\n    featuredImage,\n    status,\n    hideLanguageSelector,\n    hideBreadcrumbs,\n  } = pageContext.frontmatter;\n\n  const statusProps =\n    typeof status === \"object\"\n      ? { children: status.text, ...status }\n      : { children: status };\n\n  const { pathname } = useLocation();\n  const path = pathname.split(\"/\");\n  const currentTopSection = path[2];\n\n  //For the sake of SEO we may want the page title to be based on the first h1 in our MDX file.\n  //if no title is specified in the metadata.\n  const getFirstHeading = () => {\n    //NOTE(Rejon): The children of layouts provided are MDX components!\n    //Find the first mdx child that's an H1\n    const firstHeading = Children.toArray(children).find(\n      (c) => c.props.mdxType === \"h1\"\n    );\n\n    //If we have an h1 in our file return it.\n    if (firstHeading !== undefined) {\n      return firstHeading.props.children;\n    }\n\n    return undefined;\n  };\n\n  //SEO page title priority is: frontmatter title -> First H1 in mdx -> Filename fallback from uri\n  //NOTE(Rejon): If the page is an index of a directory, the uri split will be the name of the directory. ie. /en/bounties -> bounties\n  const _pageTitle = title || getFirstHeading() || uri.split(\"/\").pop();\n\n  const hasTopSection =\n    currentTopSection !== undefined && currentTopSection !== \"\";\n\n  const seo = {\n    title: _pageTitle,\n    description,\n    keywords,\n    featuredImage,\n  };\n\n  return (\n    <Fragment>\n      <SEO {...seo} />\n      \n      {status && (\n        <Box sx={{ marginTop: hasTopSection ? 2 : 0 }}>\n          <StatusBanner sticky {...statusProps} sx={{ width: \"100%\" }} />\n        </Box>\n      )}\n          {(!hideBreadcrumbs || (hasTopSection && !hideLanguageSelector)) && (\n            <Flex\n              sx={{\n                justifyContent: \"space-between\",\n                position: \"relative\",\n                alignItems: \"flex-start\",\n                flexWrap: [\"wrap\", \"wrap\", \"unset\"],\n                px: !hasTopSection ? [3, 3, 0] : 0,\n              }}\n            >\n              {!hideBreadcrumbs && <Breadcrumbs />}\n              {hasTopSection && !hideLanguageSelector && <LanguageSelector />}\n            </Flex>\n          )}\n          <Box\n            sx={\n              hasTopSection && !hideLanguageSelector\n                ? {\n                    \"& > *:nth-of-type(1)\": {\n                      lineHeight: \"normal\",\n                    },\n                    \"& > *:nth-of-type(1), & > *:nth-of-type(2)\": {\n                      maxWidth: [\"100%\", \"100%\", \"calc(100% - 234px - 1rem)\"],\n                    },\n                    \"& > *:nth-of-type(2)\": { mb: \"32px\" },\n                  }\n                : {}\n            }\n          >\n            {children}\n          </Box>\n    </Fragment>\n  );\n};\n"],"sourceRoot":""}