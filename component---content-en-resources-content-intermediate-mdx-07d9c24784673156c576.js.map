{"version":3,"sources":["webpack:///./content/en/resources/content/intermediate.mdx","webpack:///./src/modules/layouts/site_layout.js","webpack:///./src/modules/layouts/mdx_layout.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","Aligner","Image","List","Box","Link","CTA","Accordion","Checklist","StatusBanner","Process","Column","Chocolate","Icon","Categories","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","xCenter","sx","marginBottom","src","to","openIcon","closeIcon","defaultOpen","notice","warning","isMDXComponent","Layout","children","seo","flexDirection","minHeight","height","as","maxWidth","flex","width","m","pr","pt","position","className","pageContext","uri","frontmatter","title","description","keywords","featuredImage","status","hideLanguageSelector","hideSidenav","hideBreadcrumbs","statusProps","text","currentTopSection","useLocation","pathname","split","hasTopSection","undefined","renderSidenav","firstHeading","React","Children","toArray","find","c","getFirstHeading","pop","boundaryElement","minWidth","display","dontUpdateHolderHeightWhenSticky","style","hideOnBoundaryHit","flexGrow","pl","mt","pb","marginTop","sticky","justifyContent","alignItems","flexWrap","px","lineHeight","mb"],"mappings":"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","file":"component---content-en-resources-content-intermediate-mdx-07d9c24784673156c576.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/community-portal/community-portal/src/modules/layouts/mdx_layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Aligner = makeShortcode(\"Aligner\");\nconst Image = makeShortcode(\"Image\");\nconst List = makeShortcode(\"List\");\nconst Box = makeShortcode(\"Box\");\nconst Link = makeShortcode(\"Link\");\nconst CTA = makeShortcode(\"CTA\");\nconst Accordion = makeShortcode(\"Accordion\");\nconst Checklist = makeShortcode(\"Checklist\");\nconst StatusBanner = makeShortcode(\"StatusBanner\");\nconst Process = makeShortcode(\"Process\");\nconst Column = makeShortcode(\"Column\");\nconst Chocolate = makeShortcode(\"Chocolate\");\nconst Icon = makeShortcode(\"Icon\");\nconst Categories = makeShortcode(\"Categories\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`Intermediate`}</h1>\n    <p>{`Our Basic guide showed how Callouts and CTAs require each piece of content to start on a new line.\nThis is because each new mdx line is interpreted as a new `}<strong parentName=\"p\">{`child`}</strong>{` when it is passed to the magic box which\nturns it into a React component. This means, when using more advanced components, you'll need to be aware not\njust of the props you're specifying in the actual tag, like `}<inlineCode parentName=\"p\">{`primaryOutline`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`icon`}</inlineCode>{`, but also the order\nin which you write the content in each component and `}<strong parentName=\"p\">{`leaving new lines between each separate piece`}</strong>{`.`}</p>\n    <Aligner xCenter sx={{\n      marginBottom: 3\n    }} mdxType=\"Aligner\">\n      <Image src=\"../../../images/children.jpg\" mdxType=\"Image\" />\n    </Aligner>\n    <h2>{`Lists`}</h2>\n    <p>{`The list component is an example of why mdx having an opinion in how it renders components works\nin our favor. With mdx, we can order our children consistently.\nThis allows us to create smart hooks for rendering each element, which is a fancy way of saying that\nwe can create really beautiful lists with more functionality and visual pizzaz than you could ever\ndream of having in normal md files. Let's dive right in.`}</p>\n    <p>{`The rule is `}<strong parentName=\"p\">{`scripting and composition come FIRST`}</strong>{`, which just means that you can use the list component\nin the same way you'd write lists normally. Generally we write lists beginning with a hyphen in md. You can use the hyphen,\nor not, when writing content in our `}<inlineCode parentName=\"p\">{`List`}</inlineCode>{` component - either way it will render the same thing:`}</p>\n    <div {...{\n      \"className\": \"gatsby-code-title prism-code-title\"\n    }}>{`basic-list.mdx`}</div>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-md\"\n      }}>{`<List>\n\nHello World\n\n</List>\n\n<List>\n\nHeader\n\nSub Content\n\n</List>\n\n<List>\n\n<Link to=\"/\">\n\nHello World\n\n</Link>\n\n</List>\n`}</code></pre>\n    <p>{`All end up looking like this:`}</p>\n    <List mdxType=\"List\">\n      <p>{`Hello World`}</p>\n    </List>\n    <List mdxType=\"List\">\n      <Box mdxType=\"Box\">\n        <p>{`Header`}</p>\n        <p>{`Sub Content`}</p>\n      </Box>\n    </List>\n    <List mdxType=\"List\">\n      <Link to=\"/\" mdxType=\"Link\">\n        <p>{`Hello World`}</p>\n      </Link>\n    </List>\n    <p>{`If you want a list element with sub content, that's easy enough to organise:`}</p>\n    <div {...{\n      \"className\": \"gatsby-code-title prism-code-title\"\n    }}>{`subcontent-list.mdx`}</div>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-md\"\n      }}>{`<List>\n\n<Box>\n\nHeader\n\nSub content\n\n</Box>\n\n</List>\n`}</code></pre>\n    <p>{`Which renders like this:`}</p>\n    <List mdxType=\"List\">\n      <Box mdxType=\"Box\">\n        <p>{`Header`}</p>\n        <p>{`Sub content`}</p>\n      </Box>\n    </List>\n    <p>{`For more complex sub content, we recommend using a Box:`}</p>\n    <List mdxType=\"List\">\n      <p>{`Element Header`}</p>\n      <Box mdxType=\"Box\">\n      \n        <CTA mdxType=\"CTA\"> How About This? </CTA>\n        <List mdxType=\"List\">A list in a list?!</List>\n      </Box>\n    </List>\n    <hr></hr>\n    <List mdxType=\"List\">\n      <Box mdxType=\"Box\">\n        <p>{`Element Header`}</p>\n        <Box mdxType=\"Box\">\n          <CTA mdxType=\"CTA\"> How About? </CTA>\n          <List mdxType=\"List\">\n            <p>{`A list in a list?!`}</p>\n          </List>\n        </Box>\n      </Box>\n    </List>\n    <p>{`Want to render a few links? Easy! It's important to see, however, that\nthese are links that are only in content, and not a Link Element (see more on this below).`}</p>\n    <div {...{\n      \"className\": \"gatsby-code-title prism-code-title\"\n    }}>{`list-of-links.mdx`}</div>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-md\"\n      }}>{`<List>\n \n<Box>\n\n<Link to=\"/\">Writing style guide →</Link>\n\n</Box>\n\n<Box>\n\n<Link to=\"/\">Writing style guide →</Link>\n\n</Box>\n\n<Box>\n\n<Link to=\"/\">Writing style guide →</Link>\n\n</Box>\n\n</List>\n`}</code></pre>\n    <p>{`Which ends up looking like this:`}</p>\n    <List mdxType=\"List\">\n \n      <Box mdxType=\"Box\">\n        <Link to=\"/\" mdxType=\"Link\">Writing style guide →</Link>\n      </Box>\n      <Box mdxType=\"Box\">\n        <Link to=\"/\" mdxType=\"Link\">Writing style guide →</Link>\n      </Box>\n      <Box mdxType=\"Box\">\n        <Link to=\"/\" mdxType=\"Link\">Writing style guide →</Link>\n      </Box>\n    </List>\n    <CTA mdxType=\"CTA\">\n      <p>{`NOTE: Mind the gap! There should be a gap between list elements that will be on the same level\nor mdx will not recognize them as seperate elements.`}</p>\n    </CTA>\n    <p>{`It's possible to have an entire list element be a link by providing the Link component like so:`}</p>\n    <div {...{\n      \"className\": \"gatsby-code-title prism-code-title\"\n    }}>{`list-as-link.mdx`}</div>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-md\"\n      }}>{`<List>\n\n<Link to=\"https://makerdao.com\">\n\nMakerDao\n\n</Link>\n\n<Link to=\"/learn\">\n\nLearn\n\n</Link>\n\n</List>\n`}</code></pre>\n    <CTA mdxType=\"CTA\">\n      <p>{`NOTE: Mind the even bigger gap! There should be 2 new lines between each link as a list item\notherwise mdx will only render the first item in your list and nothing else!`}</p>\n    </CTA>\n    <p>{`Which both end up looking like this:`}</p>\n    <List mdxType=\"List\">\n      <Link to=\"https://makerdao.com\" mdxType=\"Link\">\n        <p>{`MakerDao`}</p>\n      </Link>\n      <Link to=\"/learn\" mdxType=\"Link\">\n        <p>{`Learn`}</p>\n      </Link>\n    </List>\n    <p>{`These links are also capable of having subcontent as well:`}</p>\n    <List mdxType=\"List\">\n      <Link to=\"https://makerdao.com\" mdxType=\"Link\">\n        <p>{`MakerDao`}</p>\n        <p>{`Sub content`}</p>\n      </Link>\n      <Link to=\"/learn\" mdxType=\"Link\">\n        <p>{`Learn`}</p>\n        <p>{`subcontent`}</p>\n      </Link>\n    </List>\n    <p>{`If all this isn't enough to blow your hair back, there's some extra flair:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`If the link is external, the arrow icon will point up-right to mimic the design language of other external links on the website.`}</li>\n      <li parentName=\"ol\">{`If you hover over the elements I added some minor juice to make the arrows move.`}</li>\n    </ol>\n    <h3>{`Differences between Ordered Lists and Unordered Lists`}</h3>\n    <p>{`There are none at the moment. The List component recognizes each type and renders\nthem the same. Check out `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/makerdao/community-portal/pull/45\"\n      }}>{`this PR`}</a>{` for further\nexamples of all the crazy things you can put in our list component and to deepend your understanding\nand appreciation of children.`}</p>\n    <p>{`We also DO NOT want to replace the expected behavior of how unordered lists and ordered lists\nwritten outside of the context of the list component or its sub-content.`}</p>\n    <h2>{`Accordion`}</h2>\n    <p>{`So you want to make a list, but with a lot of content, and you don't want to take up a lot of space\non the page? Sounds like you need a collapsable accordion menu... The Accordion component is ultra simple and\nscripting works with the same child rule. Except this time:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`The first child that appears is the header of the accordion.`}</li>\n      <li parentName=\"ol\">{`Everything AFTER the first child will be included in the collapsable content.`}</li>\n    </ol>\n    <div {...{\n      \"className\": \"gatsby-code-title prism-code-title\"\n    }}>{`accordion.mdx`}</div>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-md\"\n      }}>{`<Accordion>\n\n## Hello World\n\nSome other content\n\n</Accordion>\n\n<Accordion>\n\n## Am I eligible to receive a micro-grant if Maker and Dai are only one part of my agenda?\n\nSome other content inside of an accordion!\n\n> CTA content inside of Accordion\n\n![Starfox](../images/starfox.png)\n\n### Let's see how this works?\n\n</Accordion>\n\n<Accordion>\n\n## Some other content inside of an accordion!\n\n### Let's see how this works?\n\n</Accordion>\n\n<Accordion openIcon=\"chevron_down\" closeIcon=\"chevron_up\">\n\nOf course, it's also possible to have your own icons for opening and closing\n\n</Accordion>\n\n<Accordion defaultOpen>\n\nAnd you can control whether the menu defaults to being open or closed...\n\nThis content will show by default now.\n\n</Accordion>\n`}</code></pre>\n    <Accordion mdxType=\"Accordion\">\n      <h2>{`Hello World`}</h2>\n      <p>{`Some other content`}</p>\n    </Accordion>\n    <Accordion mdxType=\"Accordion\">\n      <h2>{`Am I eligible to receive a micro-grant if Maker and Dai are only one part of my agenda?`}</h2>\n      <p>{`Some other content inside of an accordion!`}</p>\n      <blockquote>\n        <p parentName=\"blockquote\">{`CTA content inside of Accordion`}</p>\n      </blockquote>\n      <p><img parentName=\"p\" {...{\n          \"src\": \"../images/starfox.png\",\n          \"alt\": \"Starfox\"\n        }}></img></p>\n      <h3>{`Let's see how this works?`}</h3>\n    </Accordion>\n    <Accordion mdxType=\"Accordion\">\n      <h2>{`Some other content inside of an accordion!`}</h2>\n      <h3>{`Let's see how this works?`}</h3>\n    </Accordion>\n    <Accordion openIcon=\"chevron_down\" closeIcon=\"chevron_up\" mdxType=\"Accordion\">\n      <p>{`Of course, it's also possible to have your own icons for opening and closing`}</p>\n    </Accordion>\n    <Accordion defaultOpen mdxType=\"Accordion\">\n      <p>{`And you can control whether the menu defaults to being open or closed...`}</p>\n      <p>{`This content will show by default now.`}</p>\n    </Accordion>\n    <h2>{`Checklist`}</h2>\n    <p>{`This is another simple component meant to be more visually engaging. It is `}<strong parentName=\"p\">{`not`}</strong>{` interactive - it's\njust meant to organise content in a specific way, mostly for guide pages like preparing for hackathons etc.\nLike all the above, it too follows the Child Rule.`}</p>\n    <div {...{\n      \"className\": \"gatsby-code-title prism-code-title\"\n    }}>{`checkbox.mdx`}</div>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-md\"\n      }}>{`<Checklist>\n\nWe can put **anything** inside this component\n\n> How about a CTA?\n\n<StatusBanner notice>\n\nOr a Status Banner...\n\n</StatusBanner>\n\n<Image src=\"../images/starfox.png\" />\n\n#### Now we're talking!\n\n</Checklist>\n`}</code></pre>\n    <p>{`Which ends up looking like this:`}</p>\n    <Checklist mdxType=\"Checklist\">\n      <p>{`We can put `}<strong parentName=\"p\">{`anything`}</strong>{` inside this component`}</p>\n      <blockquote>\n        <p parentName=\"blockquote\">{`How about a CTA?`}</p>\n      </blockquote>\n      <StatusBanner notice mdxType=\"StatusBanner\">\n        <p>{`Or a Status Banner...`}</p>\n      </StatusBanner>\n      <Image src=\"./images/starfox.png\" mdxType=\"Image\" />\n      <div {...{\n        \"className\": \"gatsby-code-title prism-code-title\"\n      }}>{`checkbox-code.js`}</div>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-js\"\n        }}>{`const variable =\n  \"Can't be shown in the code-block above because that's too meta...\";\n`}</code></pre>\n      <h4>{`Now we're talking!`}</h4>\n    </Checklist>\n    <h2>{`Process Stepper`}</h2>\n    <p>{`The process stepper is a carbon copy of the list component, except shaved down to ignore the Link requirements.\nThis means the same mindset of scripting a process element is in place. The children dictate the content,\nand how the children are seperated determine each step in the process.`}</p>\n    <div {...{\n      \"className\": \"gatsby-code-title prism-code-title\"\n    }}>{`process-stepper.mdx`}</div>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-md\"\n      }}>{`<Process>\n\n### Child 1\n\nChild 2\n\n<Box>\n\n### Child 3\n\nBunches and bunches of content can go in here. Anything you like, tbh.\n\n</Box>\n\n<Box>\n\n### Child 4\n\n> Even CTAs\n\n</Box>\n\n</Process>\n`}</code></pre>\n    <Process mdxType=\"Process\">\n      <h3>{`Child 1`}</h3>\n      <p>{`Child 2`}</p>\n      <Box mdxType=\"Box\">\n        <h3>{`Child 3`}</h3>\n        <p>{`Bunches and bunches of content can go in here. Anything you like, tbh.`}</p>\n      </Box>\n      <Box mdxType=\"Box\">\n        <h3>{`Child 4`}</h3>\n        <blockquote>\n          <p parentName=\"blockquote\">{`Even CTAs`}</p>\n        </blockquote>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-js\"\n          }}>{`or inline code\n`}</code></pre>\n      </Box>\n    </Process>\n    <h2>{`Box`}</h2>\n    <p>{`You'll notice that we've begun wrapping our children in boxes. This is the way to overcome the child rule\nand sneak in more content to one specific child should the need arise. If you wrap your multi-line content\ninto a `}<inlineCode parentName=\"p\">{`<Box>`}</inlineCode>{`, then this will be read and rendered as a single child. You can already see how useful this\nis in the context of complex lists or process steppers, and it will become more apparent with other, more visual\ncomponents like Touts.`}</p>\n    <p>{`Basically, a `}<inlineCode parentName=\"p\">{`<Box>`}</inlineCode>{` is just the old html `}<inlineCode parentName=\"p\">{`<div>`}</inlineCode>{` element updated for this brave new world we'll be building together.\nNow it's time to head over to the Advanced tutorial and begin understanding our visual components and how to style everything.`}</p>\n    <h2>{`Column`}</h2>\n    <p>{`The column is a great example of where it is almost always necessary to wrap your children in boxes. Our specs\ncalled for a \"2 Column Comparison component\" but we developers must implement every edge case including when there's only 1 element.`}</p>\n    <p>{`This component follows the same principle as other advanced components in that each child is it's own column element.`}</p>\n    <div {...{\n      \"className\": \"gatsby-code-title prism-code-title\"\n    }}>{`columns.mdx`}</div>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-md\"\n      }}>{`<Column>\n\nHello World\n\n</Column>\n\n<Column>\n\n<Box>\n\n- Tools that directly benefit Dai users\n- Tools that increase Dai adoption\n- Tools that increase access to personal liquidity.\n\n</Box>\n\n- A Heading\n  - Tools that directly benefit Dai users\n  - Tools that increase Dai adoption\n  - Tools that increase access to personal liquidity.\n\n</Column>\n`}</code></pre>\n    <Column mdxType=\"Column\">\n      <p>{`Hello World`}</p>\n    </Column>\n    <Column mdxType=\"Column\">\n      <Box mdxType=\"Box\">\n        <ul>\n          <li parentName=\"ul\">{`Tools that directly benefit Dai users`}</li>\n          <li parentName=\"ul\">{`Tools that increase Dai adoption`}</li>\n          <li parentName=\"ul\">{`Tools that increase access to personal liquidity.`}</li>\n        </ul>\n      </Box>\n      <ul>\n        <li parentName=\"ul\">{`A Heading`}<ul parentName=\"li\">\n            <li parentName=\"ul\">{`Tools that directly benefit Dai users`}</li>\n            <li parentName=\"ul\">{`Tools that increase Dai adoption`}</li>\n            <li parentName=\"ul\">{`Tools that increase access to personal liquidity.`}</li>\n          </ul></li>\n      </ul>\n    </Column>\n    <blockquote>\n      <p parentName=\"blockquote\">{`MIND THE GAPS: If there's only 1 new line between \"-\" element it will count them\nas part of the same UL instead of as seperate children.`}</p>\n    </blockquote>\n    <p>{`There is a unique case: if you want a column with a header, follow this pattern:`}</p>\n    <div {...{\n      \"className\": \"gatsby-code-title prism-code-title\"\n    }}>{`columns-headers.mdx`}</div>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-md\"\n      }}>{`<Column>\n\n- ## What we fund\n\n        - <Box>\n\n            - Tools that directly benefit Dai users\n            - Tools that increase Dai adoption\n            - Tools that increase access to personal liquidity.\n\n          </Box>\n\n* ## What we don't fund\n\n        - <Box>\n\n            - Pure R&D\n            - Information gathering\n            - Additional runway\n            - Ethereum ecosystem improvements\n            <br/>\n            <br/>\n\n            We also do not allocate grants that contain large marketing budgets and/or Dai giveaways and airdrops.\n\n          </Box>\n\n</Column>\n`}</code></pre>\n    <Column mdxType=\"Column\">\n      <ul>\n        <li parentName=\"ul\">\n          <h2 parentName=\"li\">{`What we fund`}</h2>\n          <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`    - <Box>\n\n        - Tools that directly benefit Dai users\n        - Tools that increase Dai adoption\n        - Tools that increase access to personal liquidity.\n\n      </Box>\n`}</code></pre>\n        </li>\n      </ul>\n      <ul>\n        <li parentName=\"ul\">\n          <h2 parentName=\"li\">{`What we don't fund`}</h2>\n          <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`    - <Box>\n\n        - Pure R&D\n        - Information gathering\n        - Additional runway\n        - Ethereum ecosystem improvements\n        <br/>\n        <br/>\n\n        We also do not allocate grants that contain large marketing budgets and/or Dai giveaways and airdrops.\n\n      </Box>\n`}</code></pre>\n        </li>\n      </ul>\n    </Column>\n    <h2>{`Chocolate Box`}</h2>\n    <p>{`The Chocolate component is a 3 column component. It's the equivalent of using a Grid,\nexcept that it's opinionated on its sizing and gaps. The \"Box\" part of chocolate boxes comes from the combined use of the Box component\nto render content in each grid cell.`}</p>\n    <div {...{\n      \"className\": \"gatsby-code-title prism-code-title\"\n    }}>{`chocolate-box.mdx`}</div>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-md\"\n      }}>{`<Chocolate>\n\n<Box>\n\ncontent\n\n</Box>\n\n</Chocolate>\n`}</code></pre>\n    <Chocolate mdxType=\"Chocolate\">\n      <Box mdxType=\"Box\">\n        <p>{`content`}</p>\n      </Box>\n    </Chocolate>\n    <p>{`The child rule here works the same. Each child is 1 grid cell (Box) in the Chocolate component.\nWe recommend that you use the Box component for more detailed content.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`NOTE`}</strong>{`: if the first child is an icon, we will set its size to 52px (default), otherwise it will be smaller.`}</p>\n    </blockquote>\n    <div {...{\n      \"className\": \"gatsby-code-title prism-code-title\"\n    }}>{`chocolate-icons.mdx`}</div>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-md\"\n      }}>{`<Chocolate>\n\n<Box>\n   \n<Icon name=\"eye\"/>\n\nMeasure community sentiment about issues affecting the MakerDAO ecosystem.\n\n[See example](https://example.com)\n\n</Box>\n\n<Box>\n   \n<Icon name=\"search\"/>\n\nDetermine the consensus that something needs to be done in response to a perceived issue.\n\n[See example](https://example.com)\n\n</Box>\n\n<Box>\n   \n<Icon name=\"search\"/>\n\nDetermine the consensus that something needs to be done in response to a perceived issue.\n\n[See example](https://example.com)\n\n</Box>\n\n<Box>\n   \nDetermine the consensus that something needs to be done in response to a perceived issue.\n\n[See example](https://example.com)\n\n// This will appear smaller as it is not given the default iconSize\n<Icon name=\"search\"/>\n\n</Box>\n\n<Box>\n\n// This will be given the default iconSize of 52px\n<Icon name=\"search\"/>\n\nDetermine the consensus that something needs to be done in response to a perceived issue.\n\n[See example](https://example.com)\n\n</Box>\n\n</Chocolate>\n`}</code></pre>\n    <Chocolate mdxType=\"Chocolate\">\n      <Box mdxType=\"Box\">\n   \n        <Icon name=\"eye\" mdxType=\"Icon\" />\n        <p>{`Measure community sentiment about issues affecting the MakerDAO ecosystem.`}</p>\n        <p><a parentName=\"p\" {...{\n            \"href\": \"https://example.com\"\n          }}>{`See example`}</a></p>\n      </Box>\n      <Box mdxType=\"Box\">\n   \n        <Icon name=\"search\" mdxType=\"Icon\" />\n        <p>{`Determine the consensus that something needs to be done in response to a perceived issue.`}</p>\n        <p><a parentName=\"p\" {...{\n            \"href\": \"https://example.com\"\n          }}>{`See example`}</a></p>\n      </Box>\n      <Box mdxType=\"Box\">\n   \n        <Icon name=\"search\" mdxType=\"Icon\" />\n        <p>{`Determine the consensus that something needs to be done in response to a perceived issue.`}</p>\n        <p><a parentName=\"p\" {...{\n            \"href\": \"https://example.com\"\n          }}>{`See example`}</a></p>\n      </Box>\n      <Box mdxType=\"Box\">\n   \nDetermine the consensus that something needs to be done in response to a perceived issue.\n        <p><a parentName=\"p\" {...{\n            \"href\": \"https://example.com\"\n          }}>{`See example`}</a></p>\n        <Icon name=\"search\" mdxType=\"Icon\" />\n      </Box>\n      <Box mdxType=\"Box\">\n   \n        <Icon name=\"search\" mdxType=\"Icon\" />\n        <p>{`Determine the consensus that something needs to be done in response to a perceived issue.`}</p>\n        <p><a parentName=\"p\" {...{\n            \"href\": \"https://example.com\"\n          }}>{`See example`}</a></p>\n      </Box>\n    </Chocolate>\n    <h2>{`Categories`}</h2>\n    <p>{`The Categories component is nearly the same as the Chocolate component, except that it\nhas a different visual design (it's width is 107.58% and not 100% of the content's parent container).\nIt also has a different rendering style depending on whether there are 2 or 4 elements.\nThe stark difference for you is that you only control the content of the Category container,\nnot the entire box itself (i.e. you can't change the background of a category box, only it's contents).`}</p>\n    <p>{`The component is also capable of having a unique status bar placement. All that's needed is that\nyour categories child has the status banner first:`}</p>\n    <div {...{\n      \"className\": \"gatsby-code-title prism-code-title\"\n    }}>{`categories.mdx`}</div>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-md\"\n      }}>{`<Categories>\n\n<Box>\n\n<StatusBanner warning> Funding is currently closed </StatusBanner>\n\n// This will have a size of 64px  \n<Icon name=\"metamask\"/>\n\n[Hackathons](/funding/hackathons)\n\nOrganising a hackathon? Apply for a hackathon micro grant.\n\n</Box>\n\n<Box>\n\n// This will have a size of 64px\n<Icon name=\"metamask\"/>\n\n[Hackathons](/funding/hackathons)\n\nOrganising a hackathon? Apply for a hackathon micro grant.\n\n</Box>\n\n<Box>\n\n<StatusBanner warning> Funding is currently closed </StatusBanner>\n\n[Hackathons](/funding/hackathons)\n\n// This will NOT have the default 64px size applied\n<Icon name=\"metamask\"/>\n\nOrganising a hackathon? Apply for a hackathon micro grant.\n\n</Box>\n\n</Categories>\n`}</code></pre>\n    <Categories mdxType=\"Categories\">\n      <Box mdxType=\"Box\">\n        <StatusBanner warning mdxType=\"StatusBanner\"> Funding is currently closed </StatusBanner>\n        <Icon name=\"metamask\" mdxType=\"Icon\" />\n        <p><a parentName=\"p\" {...{\n            \"href\": \"/funding/hackathons\"\n          }}>{`Hackathons`}</a></p>\n        <p>{`Organising a hackathon? Apply for a hackathon micro grant.`}</p>\n      </Box>\n      <Box mdxType=\"Box\">\n        <Icon name=\"metamask\" mdxType=\"Icon\" />\n        <p><a parentName=\"p\" {...{\n            \"href\": \"/funding/hackathons\"\n          }}>{`Hackathons`}</a></p>\n        <p>{`Organising a hackathon? Apply for a hackathon micro grant.`}</p>\n      </Box>\n      <Box mdxType=\"Box\">\n        <StatusBanner warning mdxType=\"StatusBanner\"> Funding is currently closed </StatusBanner>\n[Hackathons](/funding/hackathons)\n        <Icon name=\"metamask\" mdxType=\"Icon\" />\n        <p>{`Organising a hackathon? Apply for a hackathon micro grant.`}</p>\n      </Box>\n    </Categories>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","//** @jsx jsx */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Flex, jsx } from \"theme-ui\";\nimport { SEO } from \"@modules/utility\";\n\nimport { Header, Footer, NavigationProvider } from \"@modules/navigation\";\n\nconst Layout = ({ children, seo }) => (\n  <NavigationProvider>\n    <Flex\n      sx={{\n        flexDirection: \"column\",\n        minHeight: \"100vh\",\n        height: \"100%\",\n      }}\n    >\n      <SEO {...seo} />\n      <Header />\n      <Flex\n        as=\"main\"\n        sx={{\n          maxWidth: \"1364px\",\n          flex: \"1 0 auto\",\n          width: \"100%\",\n          m: \"0 auto\",\n          pr: 0,\n          pt: [\"90px\", \"90px\", \"unset\"],\n          position: \"relative\",\n        }}\n        className=\"content-boundary\"\n      >\n        {children}\n      </Flex>\n      <Footer />\n    </Flex>\n  </NavigationProvider>\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","/** @jsx jsx */\nimport React from \"react\";\nimport { Box, Flex, jsx } from \"theme-ui\";\nimport Sticky from \"react-sticky-el\";\nimport { useLocation } from \"@reach/router\";\n\nimport Layout from \"@modules/layouts/site_layout\";\nimport { LanguageSelector } from \"@modules/localization\";\nimport { Sidenav, Breadcrumbs } from \"@modules/navigation\";\nimport { StatusBanner } from \"@modules/ui\";\n\nexport default (props) => {\n  const { children, pageContext, uri } = props;\n  const {\n    title,\n    description,\n    keywords,\n    featuredImage,\n    status,\n    hideLanguageSelector,\n    hideSidenav,\n    hideBreadcrumbs,\n  } = pageContext.frontmatter;\n\n  const statusProps =\n    typeof status === \"object\"\n      ? { children: status.text, ...status }\n      : { children: status };\n\n  const { pathname } = useLocation();\n  const path = pathname.split(\"/\");\n  const currentTopSection = path[2];\n\n  //For the sake of SEO we may want the page title to be based on the first h1 in our MDX file.\n  //if no title is specified in the metadata.\n  const getFirstHeading = () => {\n    //NOTE(Rejon): The children of layouts provided are MDX components!\n    //Find the first mdx child that's an H1\n    const firstHeading = React.Children.toArray(children).find(\n      (c) => c.props.mdxType === \"h1\"\n    );\n\n    //If we have an h1 in our file return it.\n    if (firstHeading !== undefined) {\n      return firstHeading.props.children;\n    }\n\n    return undefined;\n  };\n\n  //SEO page title priority is: frontmatter title -> First H1 in mdx -> Filename fallback from uri\n  //NOTE(Rejon): If the page is an index of a directory, the uri split will be the name of the directory. ie. /en/bounties -> bounties\n  const _pageTitle = title || getFirstHeading() || uri.split(\"/\").pop();\n\n  const hasTopSection =\n    currentTopSection !== undefined && currentTopSection !== \"\";\n  const renderSidenav = hasTopSection && !hideSidenav;\n\n  const seo = {\n    title: _pageTitle,\n    description,\n    keywords,\n    featuredImage,\n  };\n\n  return (\n    <Layout seo={seo}>\n      {renderSidenav && (\n        <Sticky\n          boundaryElement=\".content-boundary\"\n          sx={{\n            width: \"20%\",\n            minWidth: \"260px\",\n            display: [\"none\", \"none\", \"initial\"],\n          }}\n          dontUpdateHolderHeightWhenSticky={true}\n          style={{ position: \"relative\" }}\n          hideOnBoundaryHit={false}\n        >\n          <Sidenav />\n        </Sticky>\n      )}\n\n      <Flex sx={{ flexGrow: 1, flexDirection: \"column\" }}>\n        <article\n          sx={{\n            pl: hasTopSection ? [4, 4, \"64px\"] : 0,\n            mt: hasTopSection ? [4, 4, \"59px\"] : 0,\n            pb: 4,\n            pr: hasTopSection ? 4 : 0,\n          }}\n        >\n          {status && (\n            <Box sx={{ marginTop: hasTopSection ? 2 : 0 }}>\n              <StatusBanner sticky {...statusProps} sx={{ width: \"100%\" }} />\n            </Box>\n          )}\n          {(!hideBreadcrumbs || (hasTopSection && !hideLanguageSelector)) && (\n            <Flex\n              sx={{\n                justifyContent: \"space-between\",\n                position: \"relative\",\n                alignItems: \"flex-start\",\n                flexWrap: [\"wrap\", \"wrap\", \"unset\"],\n                mt: !renderSidenav ? \"2rem\" : \"\",\n                px: !hasTopSection ? [3, 3, 0] : 0,\n              }}\n            >\n              {!hideBreadcrumbs && <Breadcrumbs />}\n              {hasTopSection && !hideLanguageSelector && <LanguageSelector />}\n            </Flex>\n          )}\n          <Box\n            sx={\n              hasTopSection && !hideLanguageSelector\n                ? {\n                    \"& > *:nth-child(1)\": {\n                      lineHeight: \"normal\",\n                    },\n                    \"& > *:nth-child(1), & > *:nth-child(2)\": {\n                      maxWidth: [\"100%\", \"100%\", \"calc(100% - 234px - 1rem)\"],\n                    },\n                    \"& > *:nth-child(2)\": { mb: \"32px\" },\n                  }\n                : {}\n            }\n          >\n            {children}\n          </Box>\n        </article>\n      </Flex>\n    </Layout>\n  );\n};\n"],"sourceRoot":""}