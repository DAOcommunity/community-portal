{"version":3,"sources":["webpack:///./content/en/work_with_us/meetups/getting-started-guide.mdx","webpack:///./src/modules/layouts/mdx_layout.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","Checklist","CTA","List","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent","useTranslation","locale","t","DEFAULT_LOCALE","allMdx","useStaticQuery","children","pageContext","uri","pagePath","frontmatter","title","description","keywords","featuredImage","status","hideLanguageSelector","hideBreadcrumbs","pathDirs","replace","split","slice","urlNoLocale","join","log","calculateTreeData","edges","sidenavData","breadcrumbData","languageSelectorData","filter","node","UrlConverter","getLocaleFromPath","fileAbsolutePath","map","value","label","statusProps","text","currentTopSection","useLocation","pathname","_pageTitle","firstHeading","Children","toArray","find","c","undefined","getFirstHeading","pop","hasTopSection","renderSidenav","hideSidenav","renderLanguageSelector","renderBreadcrumbs","seo","contentWidthSubtract","sx","width","display","boundaryElement","dontUpdateHolderHeightWhenSticky","style","position","hideOnBoundaryHit","data","currentPath","as","mt","pl","pr","pb","marginTop","sticky","justifyContent","alignItems","flexWrap","px"],"mappings":"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","file":"component---content-en-work-with-us-meetups-getting-started-guide-mdx-2370ee4bfecb6c1ddfbb.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/community-portal/community-portal/src/modules/layouts/mdx_layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Checklist = makeShortcode(\"Checklist\");\nconst CTA = makeShortcode(\"CTA\");\nconst List = makeShortcode(\"List\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`Getting Started`}</h1>\n    <p>{`Organizing a successful event takes a lot of coordination.`}</p>\n    <p>{`This guide will walk you through the process of planning a meetup and link to resources developed by the community to help plan your event.`}</p>\n    <h2>{`Planning`}</h2>\n    <p>{`Here's a list of steps to take when planning an event:`}</p>\n    <Checklist mdxType=\"Checklist\">\n      <p>{`Decide whether the event will be physical or virtual.`}</p>\n      <p>{`Create an `}<a parentName=\"p\" {...{\n          \"href\": \"/meetups/event-formats-guide/\"\n        }}>{`agenda.`}</a></p>\n      <p>{`Figure out the `}<a parentName=\"p\" {...{\n          \"href\": \"/meetups/budget-guide/\"\n        }}>{`budget.`}</a></p>\n      <p>{`Determine the time and location of the event`}</p>\n      <p>{`If the event will be virtual, be sure to find a suitable platform for hosting.`}</p>\n      <p>{`Coordinate resources to record the event`}</p>\n      <p>{`Create a plan for `}<a parentName=\"p\" {...{\n          \"href\": \"/work_with_us/meetups/promotion-guide/\"\n        }}>{`promoting`}</a>{` the event.`}</p>\n      <p>{`Read through the `}<a parentName=\"p\" {...{\n          \"href\": \"https://airtable.com/shr6Icuj6tOy0k55l\"\n        }}>{`Feedback Form`}</a>{` before the event to prepare to answer the questions.`}</p>\n    </Checklist>\n    <p>{`Once you have your meetup plan ready, speakers confirmed, the venue set, and the event promoted, it's time to make it happen!`}</p>\n    <CTA mdxType=\"CTA\">\n      <p>{`Apply for a Dai grant to help fund your meetup using the `}<a parentName=\"p\" {...{\n          \"href\": \"https://airtable.com/shr4HOtcZ8o3VZmek\"\n        }}>{`Community Meetup Form`}</a></p>\n    </CTA>\n    <p>{`To qualify for funding, we require hosts to provide feedback following their event using our `}<a parentName=\"p\" {...{\n        \"href\": \"https://airtable.com/shr6Icuj6tOy0k55l\"\n      }}>{`Feedback Form`}</a>{`.`}</p>\n    <p>{`This helps us to better understand the impact of these events and what we can do to help make them better.`}</p>\n    <h2>{`Pre-Meetup`}</h2>\n    <p>{`To get your audience excited for the meetup, consider:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Providing light snacks and beverages`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Hosting a contest to provide the best explanation of Dai in under a minute.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Providing art supplies and encouraging attendees to create graphics describing Dai, Maker Governance, MIPs, Vaults, or any other aspect of the Maker Protocol.`}</p>\n      </li>\n    </ul>\n    <h2>{`Event Day`}</h2>\n    <p>{`On the day of the event, here's what needs to get accomplished:`}</p>\n    <Checklist mdxType=\"Checklist\">\n      <p>{`Send communications to all the essential parties early in the day.`}</p>\n      <p>{`Repeat promotional messaging across all relevant channels on the day of the event.`}</p>\n      <p>{`Read through the `}<a parentName=\"p\" {...{\n          \"href\": \"https://airtable.com/shr6Icuj6tOy0k55l\"\n        }}>{`Feedback Form`}</a>{` to get familiar with the various details to keep track of.`}</p>\n      <p>{`Arrive at the venue early to prepare and test the equipment.`}</p>\n      <p>{`During the introduction, describe the agenda, introduce the speakers, and talk about the key takeaways participants can expect from the event.`}</p>\n      <p>{`Be welcoming and informative`}</p>\n    </Checklist>\n    <h2>{`Resources`}</h2>\n    <p>{`Additional guides and resources for hosting events include:`}</p>\n    <List mdxType=\"List\">\n      <ul>\n        <li parentName=\"ul\">\n          <p parentName=\"li\"><a parentName=\"p\" {...{\n              \"href\": \"/work_with_us/meetups/budget-guide/\"\n            }}>{`Budget Guide`}</a></p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\"><a parentName=\"p\" {...{\n              \"href\": \"/work_with_us/meetups/promotion-guide/\"\n            }}>{`Promotion Guide`}</a></p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\"><a parentName=\"p\" {...{\n              \"href\": \"/work_with_us/meetups/event-formats-guide/\"\n            }}>{`Event Formats Guide`}</a></p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\"><a parentName=\"p\" {...{\n              \"href\": \"https://brand.makerdao.com\"\n            }}>{`Design files`}</a></p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\"><a parentName=\"p\" {...{\n              \"href\": \"https://github.com/makerdao/awesome-makerdao#videos\"\n            }}>{`Example Presentations`}</a></p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\"><a parentName=\"p\" {...{\n              \"href\": \"https://github.com/ryancreatescopy/community/tree/203253ec20549aa3667729d5b12a0ee7c5834bde/meetups/assets/slides/README.md\"\n            }}>{`Slide Templates and Presentation Decks`}</a></p>\n        </li>\n      </ul>\n    </List>\n    <h2>{`Virtual Event Platforms`}</h2>\n    <p>{`Here are some video streaming platforms capable of hosting virtual events:`}</p>\n    <List mdxType=\"List\">\n      <ul>\n        <li parentName=\"ul\">\n          <p parentName=\"li\"><a parentName=\"p\" {...{\n              \"href\": \"https://www.airmeet.com/\"\n            }}>{`Airmeet`}</a></p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\"><a parentName=\"p\" {...{\n              \"href\": \"https://www.crowdcast.io/\"\n            }}>{`Crowdcast`}</a></p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\"><a parentName=\"p\" {...{\n              \"href\": \"https://zoom.us/\"\n            }}>{`Zoom`}</a></p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\"><a parentName=\"p\" {...{\n              \"href\": \"https://meet.google.com/\"\n            }}>{`Google Meets`}</a></p>\n        </li>\n      </ul>\n    </List>\n    <h2>{`Helpful Tips`}</h2>\n    <p>{`Organizers have found these to be helpful tips when planning their events.`}</p>\n    <List mdxType=\"List\">\n      <ul>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Plan on paper before doing anything else`}</p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Find people willing to help with the event`}</p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Write a budget and update it as things get locked things in`}</p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`When scouting a location, ask for a breakdown of available equipment.`}</p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Consider the audience and plan the meetup in a way that suits their needs.`}</p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Be the catalyst and facilitator, not the featured speaker at every meeting `}{`(`}{`people will get bored.`}{`)`}</p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`When hosting a regular event, set a consistent date, time, and location.`}</p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Include information about the speakers, on promotional materials.`}</p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Shake up the format! Have presentations, panel discussions, roundtables, workshops, etc...`}</p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Avoid canceling meetups`}</p>\n        </li>\n      </ul>\n    </List>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport {Children, Fragment} from 'react';\nimport { Box, Flex, jsx } from \"theme-ui\";\nimport Sticky from \"react-sticky-el\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\n\nimport {MobileNav} from '@modules/navigation';\nimport { useTranslation } from \"@modules/localization/\";\nimport { LanguageSelector } from \"@modules/localization\";\nimport { Sidenav, Breadcrumbs } from \"@modules/navigation\";\nimport { StatusBanner } from \"@modules/ui\";\nimport calculateTreeData from \"@modules/navigation/calculateTreeData\";\nimport { SEO } from \"@modules/utility\";\nimport { UrlConverter, getLocaleFromPath } from \"@utils\";\n\nexport default (props) => {\n  const { locale, t, DEFAULT_LOCALE } = useTranslation();\n\n  const { allMdx } = useStaticQuery(graphql`\n    query getMDXData {\n      # Regex for all files that are NOT config files\n      allMdx(\n        filter: {\n          fileAbsolutePath: {\n            regex: \"//([\\\\\\\\w]{2})/(?!header.mdx|index.mdx|sidenav.mdx|example.mdx|social.mdx|footer.mdx|404.mdx|.js|.json)/\"\n          }\n        }\n      ) {\n        edges {\n          node {\n            headings(depth: h1) {\n              value\n            }\n            fileAbsolutePath\n            frontmatter {\n              title\n              order\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const { children, pageContext, uri } = props;\n\n  const {pagePath} = pageContext; \n  const {\n    title,\n    description,\n    keywords,\n    featuredImage,\n    status,\n    hideLanguageSelector,\n    hideBreadcrumbs,\n  } = pageContext.frontmatter;\n\n  const pathDirs = pagePath.replace(/^\\/|\\/$/g, \"\").split(\"/\").slice(1);\n  const urlNoLocale = pathDirs.join(\"/\");\n  console.log(pathDirs[0]);\n  const { sidenavData, breadcrumbData } = calculateTreeData(\n    allMdx.edges,\n    pathDirs[0],\n    DEFAULT_LOCALE,\n    locale,\n    pathDirs\n  );\n\n  //NOTE(Rejon): Must be in the shape that React Select expects for it's options.\n  //Something that can be queried? \n  const languageSelectorData = allMdx.edges\n    .filter(({ node }) => {\n      //Drop the end slash, remove the locale, compare the string\n      //TODO(Rejon): This works for now, but can probably be optimized with a Regex solution.\n      const nodeURL = UrlConverter(node)\n        .replace(/^\\/|\\/$/g, \"\")\n        .split(\"/\")\n        .slice(1)\n        .join(\"/\");\n\n      return (\n        nodeURL === urlNoLocale &&\n        getLocaleFromPath(node.fileAbsolutePath) !== locale\n      );\n    })\n    .map(({ node }) => ({\n      value: UrlConverter(node),\n      label: t(\n        \"Language\",\n        null,\n        null,\n        getLocaleFromPath(node.fileAbsolutePath)\n      ),\n    }));\n\n  const statusProps =\n    typeof status === \"object\"\n      ? { children: status.text, ...status }\n      : { children: status };\n\n  const { pathname } = useLocation();\n  const path = pathname.split(\"/\");\n  const currentTopSection = path[2];\n\n  //For the sake of SEO we may want the page title to be based on the first h1 in our MDX file.\n  //if no title is specified in the metadata.\n  const getFirstHeading = () => {\n    //NOTE(Rejon): The children of layouts provided are MDX components!\n    //Find the first mdx child that's an H1\n    const firstHeading = Children.toArray(children).find(\n      (c) => c.props.mdxType === \"h1\"\n    );\n\n    //If we have an h1 in our file return it.\n    if (firstHeading !== undefined) {\n      return firstHeading.props.children;\n    }\n\n    return undefined;\n  };\n\n  //SEO page title priority is: frontmatter title -> First H1 in mdx -> Filename fallback from uri\n  //NOTE(Rejon): If the page is an index of a directory, the uri split will be the name of the directory. ie. /en/bounties -> bounties\n  const _pageTitle = title || getFirstHeading() || uri.split(\"/\").pop();\n\n  const hasTopSection =\n    currentTopSection !== undefined && currentTopSection !== \"\";\n\n  const renderSidenav = pageContext.frontmatter && !pageContext.frontmatter.hideSidenav && hasTopSection;\n  const renderLanguageSelector = hasTopSection && !hideLanguageSelector;\n  const renderBreadcrumbs = (!hideBreadcrumbs || (hasTopSection && !hideLanguageSelector));\n\n  const seo = {\n    title: _pageTitle,\n    description,\n    keywords,\n    featuredImage,\n  };\n\n  let contentWidthSubtract = renderLanguageSelector ? 234 : 0; //NOTE(Rejon): Based on word from design, language selector being hidden doesn't change content width.\n\n  if (renderSidenav) {\n    contentWidthSubtract += 256;\n  }\n\n\n  return (\n    <Fragment>\n      {renderSidenav\n          &&\n          <Box\n            sx={{\n              width: \"256px\",\n              display: [\"none\", \"none\", \"initial\"],\n            }}\n          >\n          <Sticky\n            boundaryElement=\".content-boundary\"\n            dontUpdateHolderHeightWhenSticky={true}\n            style={{ position: \"relative\" }}\n            hideOnBoundaryHit={false}\n            sx={{display: [\"none\", \"none\", \"initial\"]}}\n          >\n            <Sidenav data={sidenavData} currentPath={pagePath}/>\n          </Sticky>\n        </Box>\n      }\n      <Box as=\"article\" sx={{\n        width: ['100%', '100%', `calc(100% - ${contentWidthSubtract}px)`],\n        mt: hasTopSection ? [4, 4, \"59px\"] : 0,\n        pl: hasTopSection ? [4, 4, \"64px\"] : 0,\n        pr: hasTopSection ? [4, 4, 0] : 0,\n        pb: 4,\n        \n      }}>\n      <SEO {...seo} />\n      \n      {status && (\n        <Box sx={{ marginTop: hasTopSection ? 2 : 0 }}>\n          <StatusBanner sticky {...statusProps} sx={{ width: \"100%\" }} />\n        </Box>\n      )}\n      {renderBreadcrumbs && \n        <Flex\n          sx={{\n            justifyContent: \"space-between\",\n            position: \"relative\",\n            alignItems: \"flex-start\",\n            flexWrap: [\"wrap\", \"wrap\", \"unset\"],\n            px: !hasTopSection ? [3, 3, 0] : 0,\n          }}\n        >\n          <Breadcrumbs data={breadcrumbData} pathDirs={pathDirs}/>\n        </Flex>\n      }\n      <Box sx={{display: ['block', 'block', 'none']}}>\n        {/* MOBILE LANGUAGE SELECTOR */}\n        {renderLanguageSelector && <LanguageSelector data={languageSelectorData} pagePath={pagePath}/>}\n      </Box>\n      <Box>\n        {children}\n      </Box>\n      </Box>\n      \n      <Box sx={{display: ['none', 'none', 'block']}}>\n        {/* DESKTOP LANGUAGE SELECTOR */}\n        {renderLanguageSelector && <LanguageSelector data={languageSelectorData} pagePath={pagePath}/>}\n      </Box>\n      <MobileNav sidenavData={sidenavData}/>\n    </Fragment>\n  );\n};\n"],"sourceRoot":""}