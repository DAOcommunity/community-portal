{"version":3,"sources":["webpack:///./content/en/funding/index.mdx","webpack:///./src/modules/layouts/mdx_layout.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","Box","Chocolate","Flex","Icon","Button","InfoBlock","List","Link","Aligner","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","sx","textAlign","parentName","backgroundColor","borderRadius","padding","display","flexDirection","flexWrap","position","size","to","alignSelf","mt","paddingRight","paddingLeft","center","isMDXComponent","useTranslation","locale","t","DEFAULT_LOCALE","allMdx","useStaticQuery","children","pageContext","uri","pagePath","frontmatter","title","description","keywords","featuredImage","status","hideLanguageSelector","hideBreadcrumbs","pathDirs","replace","split","slice","urlNoLocale","join","calculateTreeData","edges","sidenavData","breadcrumbData","languageSelectorData","filter","node","UrlConverter","getLocaleFromPath","fileAbsolutePath","map","value","label","statusProps","text","currentTopSection","useLocation","pathname","_pageTitle","firstHeading","Children","toArray","find","c","undefined","getFirstHeading","pop","hasTopSection","renderSidenav","hideSidenav","renderLanguageSelector","renderBreadcrumbs","seo","contentWidthSubtract","width","boundaryElement","dontUpdateHolderHeightWhenSticky","style","hideOnBoundaryHit","data","currentPath","as","pl","pr","pb","marginTop","sticky","justifyContent","alignItems","px"],"mappings":"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","file":"component---content-en-funding-index-mdx-b5786d46fd624d3c81ac.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/community-portal/community-portal/src/modules/layouts/mdx_layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Box = makeShortcode(\"Box\");\nconst Chocolate = makeShortcode(\"Chocolate\");\nconst Flex = makeShortcode(\"Flex\");\nconst Icon = makeShortcode(\"Icon\");\nconst Button = makeShortcode(\"Button\");\nconst InfoBlock = makeShortcode(\"InfoBlock\");\nconst List = makeShortcode(\"List\");\nconst Link = makeShortcode(\"Link\");\nconst Aligner = makeShortcode(\"Aligner\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Box sx={{\n      textAlign: \"center\"\n    }} mdxType=\"Box\">\n      <h1>{`Funding Ideas or Events`}</h1>\n      {\n        /* <StatusBanner warning> Development Grants funding is currently closed </StatusBanner> */\n      }\n      <p><img parentName=\"p\" {...{\n          \"src\": \"/images/illus_funding.png\",\n          \"alt\": \"Funding\"\n        }}></img></p>\n    </Box>\n    <h2>{`Apply for Funding - Help Grow MakerDAO`}</h2>\n    <p>{`We provide grants for projects and events that help strengthen Maker, the community, and Dai's adoption. We offer grants ranging from 5K - 50K Dai and distribute blocks of funds as teams reach predetermined milestones.`}</p>\n    <Box sx={{\n      backgroundColor: 'primaryMuted',\n      borderRadius: '12px',\n      padding: '12px',\n      display: 'flex',\n      flexDirection: 'column',\n      flexWrap: 'wrap'\n    }} mdxType=\"Box\">\n      <Chocolate mdxType=\"Chocolate\">\n        <Flex sx={{\n          position: 'relative',\n          flexDirection: 'column'\n        }} mdxType=\"Flex\">\n          <Icon size={\"40px\"} name=\"globe\" mdxType=\"Icon\" />\n          <p>{`Apply to help build MakerDAO.`}</p>\n          <Button to=\"/funding/development-grants/\" sx={{\n            alignSelf: 'flex-start',\n            mt: 'auto'\n          }} mdxType=\"Button\">Development Grants</Button>\n        </Flex>\n        <Flex sx={{\n          position: 'relative',\n          flexDirection: 'column'\n        }} mdxType=\"Flex\">\n          <Icon size={\"40px\"} name=\"laptop\" mdxType=\"Icon\" />\n          <p>{`Develop infrastructure and applications for the Maker ecosystem.`}</p>\n          <Button to=\"/funding/hackathon-funding/\" sx={{\n            alignSelf: 'flex-start',\n            mt: 'auto'\n          }} mdxType=\"Button\">Hackathon Funding</Button>\n        </Flex>\n        <Flex sx={{\n          position: 'relative',\n          flexDirection: 'column'\n        }} mdxType=\"Flex\">\n          <Icon size={\"40px\"} name=\"people\" mdxType=\"Icon\" />\n          <p>{`Passionate about MakerDAO and DeFi? Planning a physical or virtual meetup? The microgrant program is for you!`}</p>\n          <Button to=\"/funding/meetup-funding/\" sx={{\n            alignSelf: 'flex-start',\n            mt: 'auto'\n          }} mdxType=\"Button\">Meetup Funding</Button>\n        </Flex>\n        <Flex sx={{\n          position: 'relative',\n          flexDirection: 'column'\n        }} mdxType=\"Flex\">\n          <Icon size={\"40px\"} name=\"lightbulb\" mdxType=\"Icon\" />\n          <p>{`Apply for funding from the community to help build MakerDAO.`}</p>\n          <Button to=\"/funding/community-projects/\" sx={{\n            alignSelf: 'flex-start',\n            mt: 'auto'\n          }} mdxType=\"Button\">CDIPs</Button>\n        </Flex>\n      </Chocolate>\n    </Box>\n    <InfoBlock mdxType=\"InfoBlock\">\n      <Box sx={{\n        paddingRight: '35px'\n      }} mdxType=\"Box\">\n        <h2>{`Weâ€™ve Awarded Over 683,887 Dai to More Than 30 Projects`}</h2>\n        <p>{`Started in February 2018, the MakerDAO Community Development Initiative funds teams creating infrastructure and applications within the Maker ecosystem.`}</p>\n      </Box>\n      <Box sx={{\n        paddingLeft: '25px'\n      }} mdxType=\"Box\">\n        <List mdxType=\"List\">\n          <Link to=\"https://dafnir.com/\" mdxType=\"Link\">Dafinir</Link>\n          <Link to=\"https://sablier.finance/\" mdxType=\"Link\">Sablier</Link>\n          <Link to=\"https://mkr.tools/\" mdxType=\"Link\">MKR.tools</Link>\n          <Link to=\"https://www.pooltogether.us/\" mdxType=\"Link\">PoolTogether</Link>\n        </List>\n      </Box>\n    </InfoBlock>\n    <Aligner center mdxType=\"Aligner\">\n      <Button to=\"/funding/development-grants/\" mdxType=\"Button\">Apply for a Development Grant</Button>\n    </Aligner>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport {Children, Fragment} from 'react';\nimport { Box, Flex, jsx } from \"theme-ui\";\nimport Sticky from \"react-sticky-el\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\n\nimport {MobileNav} from '@modules/navigation';\nimport { useTranslation } from \"@modules/localization/\";\nimport { LanguageSelector } from \"@modules/localization\";\nimport { Sidenav, Breadcrumbs } from \"@modules/navigation\";\nimport { StatusBanner } from \"@modules/ui\";\nimport calculateTreeData from \"@modules/navigation/calculateTreeData\";\nimport { SEO } from \"@modules/utility\";\nimport { UrlConverter, getLocaleFromPath } from \"@utils\";\n\nexport default (props) => {\n  const { locale, t, DEFAULT_LOCALE } = useTranslation();\n\n  const { allMdx } = useStaticQuery(graphql`\n    query getMDXData {\n      # Regex for all files that are NOT config files\n      allMdx(\n        filter: {\n          fileAbsolutePath: {\n            regex: \"//([\\\\\\\\w]{2})/(?!header.mdx|index.mdx|sidenav.mdx|example.mdx|social.mdx|footer.mdx|404.mdx|.js|.json)/\"\n          }\n        }\n      ) {\n        edges {\n          node {\n            headings(depth: h1) {\n              value\n            }\n            fileAbsolutePath\n            frontmatter {\n              title\n              order\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const { children, pageContext, uri } = props;\n\n  const {pagePath} = pageContext; \n  const {\n    title,\n    description,\n    keywords,\n    featuredImage,\n    status,\n    hideLanguageSelector,\n    hideBreadcrumbs,\n  } = pageContext.frontmatter;\n\n  const pathDirs = pagePath.replace(/^\\/|\\/$/g, \"\").split(\"/\").slice(1);\n  const urlNoLocale = pathDirs.join(\"/\");\n  \n  const { sidenavData, breadcrumbData } = calculateTreeData(\n    allMdx.edges,\n    pathDirs[0],\n    DEFAULT_LOCALE,\n    locale,\n    pathDirs\n  );\n\n  //NOTE(Rejon): Must be in the shape that React Select expects for it's options.\n  //Something that can be queried? \n  const languageSelectorData = allMdx.edges\n    .filter(({ node }) => {\n      //Drop the end slash, remove the locale, compare the string\n      //TODO(Rejon): This works for now, but can probably be optimized with a Regex solution.\n      const nodeURL = UrlConverter(node)\n        .replace(/^\\/|\\/$/g, \"\")\n        .split(\"/\")\n        .slice(1)\n        .join(\"/\");\n\n      return (\n        nodeURL === urlNoLocale &&\n        getLocaleFromPath(node.fileAbsolutePath) !== locale\n      );\n    })\n    .map(({ node }) => ({\n      value: UrlConverter(node),\n      label: t(\n        \"Language\",\n        null,\n        null,\n        getLocaleFromPath(node.fileAbsolutePath)\n      ),\n    }));\n\n  const statusProps =\n    typeof status === \"object\"\n      ? { children: status.text, ...status }\n      : { children: status };\n\n  const { pathname } = useLocation();\n  const path = pathname.split(\"/\");\n  const currentTopSection = path[2];\n\n  //For the sake of SEO we may want the page title to be based on the first h1 in our MDX file.\n  //if no title is specified in the metadata.\n  const getFirstHeading = () => {\n    //NOTE(Rejon): The children of layouts provided are MDX components!\n    //Find the first mdx child that's an H1\n    const firstHeading = Children.toArray(children).find(\n      (c) => c.props.mdxType === \"h1\"\n    );\n\n    //If we have an h1 in our file return it.\n    if (firstHeading !== undefined) {\n      return firstHeading.props.children;\n    }\n\n    return undefined;\n  };\n\n  //SEO page title priority is: frontmatter title -> First H1 in mdx -> Filename fallback from uri\n  //NOTE(Rejon): If the page is an index of a directory, the uri split will be the name of the directory. ie. /en/bounties -> bounties\n  const _pageTitle = title || getFirstHeading() || uri.split(\"/\").pop();\n\n  const hasTopSection =\n    currentTopSection !== undefined && currentTopSection !== \"\";\n\n  const renderSidenav = pageContext.frontmatter && !pageContext.frontmatter.hideSidenav && hasTopSection;\n  const renderLanguageSelector = hasTopSection && !hideLanguageSelector;\n  const renderBreadcrumbs = (!hideBreadcrumbs || (hasTopSection && !hideLanguageSelector));\n\n  const seo = {\n    title: _pageTitle,\n    description,\n    keywords,\n    featuredImage,\n  };\n\n  let contentWidthSubtract = renderLanguageSelector ? 234 : 0; //NOTE(Rejon): Based on word from design, language selector being hidden doesn't change content width.\n\n  if (renderSidenav) {\n    contentWidthSubtract += 256;\n  }\n\n\n  return (\n    <Fragment>\n      {renderSidenav\n          &&\n          <Box\n            sx={{\n              width: \"256px\",\n              display: [\"none\", \"none\", \"initial\"],\n            }}\n          >\n          <Sticky\n            boundaryElement=\".content-boundary\"\n            dontUpdateHolderHeightWhenSticky={true}\n            style={{ position: \"relative\" }}\n            hideOnBoundaryHit={false}\n            sx={{display: [\"none\", \"none\", \"initial\"]}}\n          >\n            <Sidenav data={sidenavData} currentPath={pagePath}/>\n          </Sticky>\n        </Box>\n      }\n      <Box as=\"article\" sx={{\n        width: ['100%', '100%', `calc(100% - ${contentWidthSubtract}px)`],\n        mt: hasTopSection ? [4, 4, \"59px\"] : 0,\n        pl: hasTopSection ? [4, 4, \"64px\"] : 0,\n        pr: hasTopSection ? [4, 4, 0] : 0,\n        pb: 4,\n        \n      }}>\n      <SEO {...seo} />\n      \n      {status && (\n        <Box sx={{ marginTop: hasTopSection ? 2 : 0 }}>\n          <StatusBanner sticky {...statusProps} sx={{ width: \"100%\" }} />\n        </Box>\n      )}\n      {renderBreadcrumbs && \n        <Flex\n          sx={{\n            justifyContent: \"space-between\",\n            position: \"relative\",\n            alignItems: \"flex-start\",\n            flexWrap: [\"wrap\", \"wrap\", \"unset\"],\n            px: !hasTopSection ? [3, 3, 0] : 0,\n          }}\n        >\n          <Breadcrumbs data={breadcrumbData} pathDirs={pathDirs}/>\n        </Flex>\n      }\n      <Box sx={{display: ['block', 'block', 'none']}}>\n        {/* MOBILE LANGUAGE SELECTOR */}\n        {renderLanguageSelector && <LanguageSelector data={languageSelectorData} pagePath={pagePath}/>}\n      </Box>\n      <Box>\n        {children}\n      </Box>\n      </Box>\n      \n      <Box sx={{display: ['none', 'none', 'block']}}>\n        {/* DESKTOP LANGUAGE SELECTOR */}\n        {renderLanguageSelector && <LanguageSelector data={languageSelectorData} pagePath={pagePath}/>}\n      </Box>\n      <MobileNav sidenavData={sidenavData}/>\n    </Fragment>\n  );\n};\n"],"sourceRoot":""}