{"version":3,"sources":["webpack:///./content/en/work_with_us/governance_and_risk_meetings/take-notes/formatting-guide.mdx","webpack:///./src/modules/layouts/site_layout.js","webpack:///./src/modules/layouts/mdx_layout.js"],"names":["name","_frontmatter","List","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent","Layout","children","seo","sx","flexDirection","minHeight","height","as","maxWidth","flex","width","m","pr","pt","position","className","pageContext","uri","frontmatter","title","description","keywords","featuredImage","status","hideLanguageSelector","hideSidenav","hideBreadcrumbs","statusProps","text","currentTopSection","useLocation","pathname","split","hasTopSection","undefined","renderSidenav","firstHeading","React","Children","toArray","find","c","getFirstHeading","pop","boundaryElement","minWidth","display","dontUpdateHolderHeightWhenSticky","style","hideOnBoundaryHit","flexGrow","pl","mt","pb","marginTop","sticky","justifyContent","alignItems","flexWrap","px","lineHeight","mb"],"mappings":"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","file":"component---content-en-work-with-us-governance-and-risk-meetings-take-notes-formatting-guide-mdx-18e6f5cb041967bc8547.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/community-portal/community-portal/src/modules/layouts/mdx_layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst List = makeShortcode(\"List\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`Formatting guide`}</h1>\n    <h2>{`The Structure`}</h2>\n    <p>{`This is the general structure of the document. `}{`#`}{`h refers to the heading type. Headings are very useful for consistent structuring of the summary.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`#h1 Title: Ep00: Month 00, 0000\n  ├ ##h2 Agenda\n  ├ ##h2 Video\n  ├ ##h2 Main Theme (Risk, Oracles, Governance, etc.)\n  | └ ###h3 Name of person presenting\n  |     ├ #####h4 Specific Subject\n  |     └ #####h4 Discussion & Questions 1\n  ├ ##h2 Main Theme (Risk, Oracles, Governance, etc.)\n  | └ ###h3 Name of person presenting\n  |     ├ #####h4 Specific subject\n  |     └ #####h4 Discussion & Questions 2\n  ├ ##h2 General Questions and Discussions\n  ├ ##h2 Relevant Resources and Links mentioned in the call\n  ├ ##h2 Terms\n  ├ ##h2 Credits\n`}</code></pre>\n    <h3>{`General Rules`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`These summaries are created in `}<a parentName=\"li\" {...{\n          \"href\": \"https://hackmd.io/\"\n        }}>{`HackMD`}</a>{` and are saved as markdown files`}{`(`}<inlineCode parentName=\"li\">{`.md`}</inlineCode>{`)`}{`. This is because the final version is published to GitHub and the Forums, which are both markdown friendly.`}</li>\n      <li parentName=\"ul\">{`Filename format: `}<inlineCode parentName=\"li\">{`episode-00.md`}</inlineCode></li>\n      <li parentName=\"ul\">{`Notes are taken in chronological order.`}</li>\n    </ul>\n    <h3>{`Header and Spacing Rules`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Headers follow the rules in the structure displayed above and occur chronologically.`}</li>\n      <li parentName=\"ul\">{`The same \"Main Theme\" can occur more than once.`}</li>\n      <li parentName=\"ul\">{`Include line breaks above and below headings.`}</li>\n      <li parentName=\"ul\">{`Include time-anchored-links in the Agenda, under the \"Specific Subject\" section, and for individual questions and comments during the discussion portions.`}</li>\n      <li parentName=\"ul\">{`Include line breaks above and below time-anchored-links.`}</li>\n      <li parentName=\"ul\">{`Do not include a line break between a screenshot and its relevant notes`}{`(`}<a parentName=\"li\" {...{\n          \"href\": \"https://i.imgur.com/kzV3jcY.png\"\n        }}>{`see example.`}</a>{`)`}</li>\n      <li parentName=\"ul\">{`Do not leave trailing spaces.`}</li>\n      <li parentName=\"ul\">{`Ensure there is a single empty line, called a hard-return, at the end of the file.`}</li>\n    </ul>\n    <h3>{`Speakers and Discussions`}</h3>\n    <List mdxType=\"List\">\n      <ul>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`The goal of the summary is accuracy and readability of the content on the call.`}</p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`There is no need to transcribe every word.`}</p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Capture presentations and conversations as concise points. Do not include \"umm\", \"so\", \"like\", irrelevant tangents, and any obfuscating language. The aim of the summary is to capture the main points in a concise and readable fashion.`}</p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Always add a Discussion segment at the end of each section to capture questions and comments made during that part of the call.`}</p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Delete the Discussion section if there is nothing to put there.`}</p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Use backticks to add a `}<inlineCode parentName=\"p\">{`Chat`}</inlineCode>{` marker to the beginning of questions or comments coming from the chat.`}</p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Only include insightful comments or important questions. Especially include content that is responded to on the call.`}</p>\n        </li>\n      </ul>\n    </List>\n    <h2>{`Special Language Rules`}</h2>\n    <p>{`In standardizing the rules around contributing, the community maintains a `}<a parentName=\"p\" {...{\n        \"href\": \"https://community-development.makerdao.com/contributing/style-guide\"\n      }}>{`writing-style-guide`}</a>{` that contains all the rules for consistent language, grammar, and formatting. Below are the rules most relevant to these summaries:`}</p>\n    <List mdxType=\"List\">\n      <ul>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Please follow the `}<a parentName=\"p\" {...{\n              \"href\": \"https://github.com/ryancreatescopy/community/tree/203253ec20549aa3667729d5b12a0ee7c5834bde/contributing/contributing/style-guide/README.md#naming-conventions\"\n            }}>{`Naming Convention guidelines`}</a>{` found in the writing style guide.`}</p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Use short, concise sentences. The balance is to use the least words for the most comprehensive coverage of what the speakers are saying.`}</p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Use `}<a parentName=\"p\" {...{\n              \"href\": \"https://en.wikipedia.org/wiki/Serial_comma\"\n            }}>{`oxford commas`}</a>{`.`}</p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Capitalize names of people and online handles.`}</p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Capitalize and use backticks for any `}<a parentName=\"p\" {...{\n              \"href\": \"https://docs.makerdao.com/other-documentation/system-glossary\"\n            }}>{`specific system parameters:`}</a></p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`For example,`}<inlineCode parentName=\"p\">{`flop`}</inlineCode>{` , `}<inlineCode parentName=\"p\">{`bite`}</inlineCode>{` , `}<inlineCode parentName=\"p\">{`vow`}</inlineCode>{` , `}<inlineCode parentName=\"p\">{`kick`}</inlineCode>{` , etc.`}</p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Do not use backticks when referring to `}<a parentName=\"p\" {...{\n              \"href\": \"https://community-development.makerdao.com/makerdao-mcd-faqs/faqs/glossary\"\n            }}>{`generalized system language.`}</a></p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`For example, Stability Fee, Debt Ceiling, Debt Auction, Vault ETH-A, etc.`}</p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`When referencing material inside the summary itself, please use \"below\" and \"above\" language.`}</p>\n        </li>\n      </ul>\n    </List>\n    <h2>{`Screenshot Best Practices`}</h2>\n    <p>{`The Governance Calls often have visual presentations. The most efficient way to capture these is through screenshots, and add elaborating notes below the image if necessary.`}</p>\n    <p>{`The recommended software below should keep the last screenshot in your clipboard as a copied image. In HackMD, pasting copied images will automatically upload them to Imgur and provide an embedded link for you`}{`(`}{`[`}{`see example.`}{`]`}{`(`}<img parentName=\"p\" {...{\n        \"src\": \"https://i.imgur.com/nNBR9UT.png\",\n        \"alt\": null\n      }}></img>{`)`}{`)`}</p>\n    <List mdxType=\"List\">\n      <ul>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`For PCs: Download `}<a parentName=\"p\" {...{\n              \"href\": \"https://puush.me/\"\n            }}>{`Puush`}</a>{` or `}<a parentName=\"p\" {...{\n              \"href\": \"https://getsharex.com/\"\n            }}>{`ShareX`}</a>{` and create a hotkey for \"Region Screenshot.\"`}</p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`For Mac: `}<a parentName=\"p\" {...{\n              \"href\": \"https://github.com/bluegill/katana\"\n            }}>{`Katana`}</a>{` is a simple, open-source screenshot utility for macOS that lives in your menu-bar. It does 90% of ShareX, but it's Imgur link needs formatting in HackMD after pasting.`}</p>\n        </li>\n      </ul>\n    </List>\n    <List mdxType=\"List\">\n  \n## Tips\n      <ul>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Consult the `}<a parentName=\"p\" {...{\n              \"href\": \"https://github.com/ryancreatescopy/community/tree/203253ec20549aa3667729d5b12a0ee7c5834bde/contributing/contributing/style-guide.md\"\n            }}>{`Writer Style Guide`}</a>{` and `}<a parentName=\"p\" {...{\n              \"href\": \"https://github.com/ryancreatescopy/community/tree/203253ec20549aa3667729d5b12a0ee7c5834bde/contributing/contributing/reviewer-guide.md\"\n            }}>{`Reviewer Guides`}</a>{` for additional helpful information.`}</p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Read for clarity before rewatching. While doing so, edit for low hanging fruit: readability, spelling or grammar mistakes, and formatting errors.`}</p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Rewatch at a comfortable playback speed; speeds up to 2x are available on YouTube.`}</p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Use `}<a parentName=\"p\" {...{\n              \"href\": \"https://app.grammarly.com/\"\n            }}>{`Grammarly`}</a>{` to help you find missed mistakes once you are done with your section.`}</p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Use a Linter in VSCode to find formatting errors. For more information on linters, consult the `}<a parentName=\"p\" {...{\n              \"href\": \"https://github.com/ryancreatescopy/community/tree/203253ec20549aa3667729d5b12a0ee7c5834bde/contributing/contributing/contributor-tools/README.md#VSCode\"\n            }}>{`Contributor Tools Guide`}</a></p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Take screenshots that are readable.`}</p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Don't duplicate information already presented on slides. Focus on the additional points being made during presentations that include slides.`}</p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Conversations may be hard to transcribe in the moment so do your best.`}</p>\n          <ul parentName=\"li\">\n            <li parentName=\"ul\">\n              <p parentName=\"li\">{`Use initials when conversations get fast back-and-forth. Also helps readability.`}</p>\n            </li>\n            <li parentName=\"ul\">\n              <p parentName=\"li\">{`Try to use bullets to highlight the main conversation question. Add a video link to the initial question or main point for easier reference.`}</p>\n            </li>\n          </ul>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Aim to keep the notes readable. Always ask \"does this make sense?\" Even if the conversation tangents away from it's inspiration, you can always find the thread. Keeping it readable is key.`}</p>\n        </li>\n      </ul>\n    </List>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","//** @jsx jsx */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Flex, jsx } from \"theme-ui\";\nimport { SEO } from \"@modules/utility\";\n\nimport { Header, Footer, NavigationProvider } from \"@modules/navigation\";\n\nconst Layout = ({ children, seo }) => (\n  <NavigationProvider>\n    <Flex\n      sx={{\n        flexDirection: \"column\",\n        minHeight: \"100vh\",\n        height: \"100%\",\n      }}\n    >\n      <SEO {...seo} />\n      <Header />\n      <Flex\n        as=\"main\"\n        sx={{\n          maxWidth: \"1364px\",\n          flex: \"1 0 auto\",\n          width: \"100%\",\n          m: \"0 auto\",\n          pr: 0,\n          pt: [\"90px\", \"90px\", \"unset\"],\n          position: \"relative\",\n        }}\n        className=\"content-boundary\"\n      >\n        {children}\n      </Flex>\n      <Footer />\n    </Flex>\n  </NavigationProvider>\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","/** @jsx jsx */\nimport React from \"react\";\nimport { Box, Flex, jsx } from \"theme-ui\";\nimport Sticky from \"react-sticky-el\";\nimport { useLocation } from \"@reach/router\";\n\nimport Layout from \"@modules/layouts/site_layout\";\nimport { LanguageSelector } from \"@modules/localization\";\nimport { Sidenav, Breadcrumbs } from \"@modules/navigation\";\nimport { StatusBanner } from \"@modules/ui\";\n\nexport default (props) => {\n  const { children, pageContext, uri } = props;\n  const {\n    title,\n    description,\n    keywords,\n    featuredImage,\n    status,\n    hideLanguageSelector,\n    hideSidenav,\n    hideBreadcrumbs,\n  } = pageContext.frontmatter;\n\n  const statusProps =\n    typeof status === \"object\"\n      ? { children: status.text, ...status }\n      : { children: status };\n\n  const { pathname } = useLocation();\n  const path = pathname.split(\"/\");\n  const currentTopSection = path[2];\n\n  //For the sake of SEO we may want the page title to be based on the first h1 in our MDX file.\n  //if no title is specified in the metadata.\n  const getFirstHeading = () => {\n    //NOTE(Rejon): The children of layouts provided are MDX components!\n    //Find the first mdx child that's an H1\n    const firstHeading = React.Children.toArray(children).find(\n      (c) => c.props.mdxType === \"h1\"\n    );\n\n    //If we have an h1 in our file return it.\n    if (firstHeading !== undefined) {\n      return firstHeading.props.children;\n    }\n\n    return undefined;\n  };\n\n  //SEO page title priority is: frontmatter title -> First H1 in mdx -> Filename fallback from uri\n  //NOTE(Rejon): If the page is an index of a directory, the uri split will be the name of the directory. ie. /en/bounties -> bounties\n  const _pageTitle = title || getFirstHeading() || uri.split(\"/\").pop();\n\n  const hasTopSection =\n    currentTopSection !== undefined && currentTopSection !== \"\";\n  const renderSidenav = hasTopSection && !hideSidenav;\n\n  const seo = {\n    title: _pageTitle,\n    description,\n    keywords,\n    featuredImage,\n  };\n\n  return (\n    <Layout seo={seo}>\n      {renderSidenav && (\n        <Sticky\n          boundaryElement=\".content-boundary\"\n          sx={{\n            width: \"20%\",\n            minWidth: \"260px\",\n            display: [\"none\", \"none\", \"initial\"],\n          }}\n          dontUpdateHolderHeightWhenSticky={true}\n          style={{ position: \"relative\" }}\n          hideOnBoundaryHit={false}\n        >\n          <Sidenav />\n        </Sticky>\n      )}\n\n      <Flex sx={{ flexGrow: 1, flexDirection: \"column\" }}>\n        <article\n          sx={{\n            pl: hasTopSection ? [4, 4, \"64px\"] : 0,\n            mt: hasTopSection ? [4, 4, \"59px\"] : 0,\n            pb: 4,\n            pr: hasTopSection ? 4 : 0,\n          }}\n        >\n          {status && (\n            <Box sx={{ marginTop: hasTopSection ? 2 : 0 }}>\n              <StatusBanner sticky {...statusProps} sx={{ width: \"100%\" }} />\n            </Box>\n          )}\n          {(!hideBreadcrumbs || (hasTopSection && !hideLanguageSelector)) && (\n            <Flex\n              sx={{\n                justifyContent: \"space-between\",\n                position: \"relative\",\n                alignItems: \"flex-start\",\n                flexWrap: [\"wrap\", \"wrap\", \"unset\"],\n                mt: !renderSidenav ? \"2rem\" : \"\",\n                px: !hasTopSection ? [3, 3, 0] : 0,\n              }}\n            >\n              {!hideBreadcrumbs && <Breadcrumbs />}\n              {hasTopSection && !hideLanguageSelector && <LanguageSelector />}\n            </Flex>\n          )}\n          <Box\n            sx={\n              hasTopSection && !hideLanguageSelector\n                ? {\n                    \"& > *:nth-child(1)\": {\n                      lineHeight: \"normal\",\n                    },\n                    \"& > *:nth-child(1), & > *:nth-child(2)\": {\n                      maxWidth: [\"100%\", \"100%\", \"calc(100% - 234px - 1rem)\"],\n                    },\n                    \"& > *:nth-child(2)\": { mb: \"32px\" },\n                  }\n                : {}\n            }\n          >\n            {children}\n          </Box>\n        </article>\n      </Flex>\n    </Layout>\n  );\n};\n"],"sourceRoot":""}