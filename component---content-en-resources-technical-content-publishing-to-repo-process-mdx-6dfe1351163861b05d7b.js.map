{"version":3,"sources":["webpack:///./content/en/resources/technical-content/publishing-to-repo-process.mdx","webpack:///./src/modules/layouts/mdx_layout.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","Process","Box","Link","Callout","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","to","icon","secondary","isMDXComponent","children","pageContext","uri","frontmatter","title","description","keywords","featuredImage","status","hideLanguageSelector","hideBreadcrumbs","statusProps","text","currentTopSection","useLocation","pathname","split","hasTopSection","undefined","seo","firstHeading","Children","toArray","find","c","getFirstHeading","pop","sx","marginTop","sticky","width","justifyContent","position","alignItems","flexWrap","px","lineHeight","maxWidth","mb"],"mappings":"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","file":"component---content-en-resources-technical-content-publishing-to-repo-process-mdx-6dfe1351163861b05d7b.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/community-portal/community-portal/src/modules/layouts/mdx_layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Process = makeShortcode(\"Process\");\nconst Box = makeShortcode(\"Box\");\nconst Link = makeShortcode(\"Link\");\nconst Callout = makeShortcode(\"Callout\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`Publishing Process`}</h1>\n    <p>{`Publishing new content follows this process. Please make sure you’ve already proposed your idea in our community development chat before following these steps. This is important so we can arrange a reviewer and organise payment for content.`}</p>\n    <Process mdxType=\"Process\">\n      <Box mdxType=\"Box\">\n        <h2>{`Write First Draft in Google Docs`}</h2>\n        <p>{`Make sure to name versions, for example Dai_v0.1.\nChange to Dai_v1 after one round of feedback. Dai_v2 after a second round and so on.`}</p>\n      </Box>\n      <Box mdxType=\"Box\">\n        <h2>{`Get it Reviewed`}</h2>\n        <p>{`Ping the reviewer as they’ll need to double check work and bring fresh eyes. In some rare cases work will also need to be reviewed by the legal team and/or technical stakeholders.`}</p>\n      </Box>\n      <Box mdxType=\"Box\">\n        <h2>{`Convert to Markdown`}</h2>\n        <p>{`Once approved, convert the document into markdown using `}<a parentName=\"p\" {...{\n            \"href\": \"http://hackmd.io/\"\n          }}>{`HackMD`}</a>{` or `}<a parentName=\"p\" {...{\n            \"href\": \"https://code.visualstudio.com/download\"\n          }}>{`VScode`}</a>{`; alternatively google docs has a quite useful add-on named `}<a parentName=\"p\" {...{\n            \"href\": \"https://gsuite.google.com/marketplace/app/docs_to_markdown/700168918607\"\n          }}>{`Docs to Markdown`}</a>{`.\nIf the document needs fancier components it's likely that .mdx will serve the need. Follow guides to using .mdx in this here repo: `}<Link to=\"/resources/content/cheatsheet/\" mdxType=\"Link\">{`mdx cheat sheet`}</Link></p>\n        <Callout icon=\"plus\" secondary mdxType=\"Callout\">\n          <p>{`Want to add fancier pieces to a page? Building something elaborate? Please feel free to dive down the rabbit hole of `}<a parentName=\"p\" {...{\n              \"href\": \"/resources/technical-content/installation-guide/\"\n            }}>{`comm-dev's mdx implementation`}</a>{`.`}</p>\n        </Callout>\n      </Box>\n      <Box mdxType=\"Box\">\n        <h2>{`Submit a Pull Request`}</h2>\n        <p>{`If uncomfortable with GitHub there's a GitHub guide where we’ll talk through the process. `}<a parentName=\"p\" {...{\n            \"href\": \"/work_with_us/content/using-github/\"\n          }}>{`Community development GitHub guide`}</a></p>\n        <p>{`Make sure to reach out in the `}<a parentName=\"p\" {...{\n            \"href\": \"https://chat.makerdao.com/channel/community-development\"\n          }}>{`Community Development Chat`}</a>{` if you need help using GitHub or submitting a Pull Request.`}</p>\n      </Box>\n    </Process>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport {Children, Fragment} from 'react';\nimport { Box, Flex, jsx } from \"theme-ui\";\nimport Sticky from \"react-sticky-el\";\nimport { useLocation } from \"@reach/router\";\n\nimport { LanguageSelector } from \"@modules/localization\";\nimport { Sidenav, Breadcrumbs } from \"@modules/navigation\";\nimport { StatusBanner } from \"@modules/ui\";\nimport { SEO } from \"@modules/utility\";\n\n\nexport default (props) => {\n  const { children, pageContext, uri } = props;\n  const {\n    title,\n    description,\n    keywords,\n    featuredImage,\n    status,\n    hideLanguageSelector,\n    hideBreadcrumbs,\n  } = pageContext.frontmatter;\n\n  const statusProps =\n    typeof status === \"object\"\n      ? { children: status.text, ...status }\n      : { children: status };\n\n  const { pathname } = useLocation();\n  const path = pathname.split(\"/\");\n  const currentTopSection = path[2];\n\n  //For the sake of SEO we may want the page title to be based on the first h1 in our MDX file.\n  //if no title is specified in the metadata.\n  const getFirstHeading = () => {\n    //NOTE(Rejon): The children of layouts provided are MDX components!\n    //Find the first mdx child that's an H1\n    const firstHeading = Children.toArray(children).find(\n      (c) => c.props.mdxType === \"h1\"\n    );\n\n    //If we have an h1 in our file return it.\n    if (firstHeading !== undefined) {\n      return firstHeading.props.children;\n    }\n\n    return undefined;\n  };\n\n  //SEO page title priority is: frontmatter title -> First H1 in mdx -> Filename fallback from uri\n  //NOTE(Rejon): If the page is an index of a directory, the uri split will be the name of the directory. ie. /en/bounties -> bounties\n  const _pageTitle = title || getFirstHeading() || uri.split(\"/\").pop();\n\n  const hasTopSection =\n    currentTopSection !== undefined && currentTopSection !== \"\";\n\n  const seo = {\n    title: _pageTitle,\n    description,\n    keywords,\n    featuredImage,\n  };\n\n  return (\n    <Fragment>\n      <SEO {...seo} />\n      \n      {status && (\n        <Box sx={{ marginTop: hasTopSection ? 2 : 0 }}>\n          <StatusBanner sticky {...statusProps} sx={{ width: \"100%\" }} />\n        </Box>\n      )}\n          {(!hideBreadcrumbs || (hasTopSection && !hideLanguageSelector)) && (\n            <Flex\n              sx={{\n                justifyContent: \"space-between\",\n                position: \"relative\",\n                alignItems: \"flex-start\",\n                flexWrap: [\"wrap\", \"wrap\", \"unset\"],\n                px: !hasTopSection ? [3, 3, 0] : 0,\n              }}\n            >\n              {!hideBreadcrumbs && <Breadcrumbs />}\n              {hasTopSection && !hideLanguageSelector && <LanguageSelector />}\n            </Flex>\n          )}\n          <Box\n            sx={\n              hasTopSection && !hideLanguageSelector\n                ? {\n                    \"& > *:nth-of-type(1)\": {\n                      lineHeight: \"normal\",\n                    },\n                    \"& > *:nth-of-type(1), & > *:nth-of-type(2)\": {\n                      maxWidth: [\"100%\", \"100%\", \"calc(100% - 234px - 1rem)\"],\n                    },\n                    \"& > *:nth-of-type(2)\": { mb: \"32px\" },\n                  }\n                : {}\n            }\n          >\n            {children}\n          </Box>\n    </Fragment>\n  );\n};\n"],"sourceRoot":""}