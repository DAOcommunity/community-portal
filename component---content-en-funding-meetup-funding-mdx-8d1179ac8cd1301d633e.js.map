{"version":3,"sources":["webpack:///./content/en/funding/meetup-funding.mdx","webpack:///./src/modules/layouts/mdx_layout.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","StatusBanner","Flex","TDStat","Aligner","Button","Tout","Box","List","Process","Callout","Link","Checklist","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","sx","alignItems","justifyContent","data","grants","totalMoneyAwarded","totalMoneyDispersed","acceptedProjects","length","alt","applicationsSubmitted","center","to","isMDXComponent","useTranslation","locale","t","DEFAULT_LOCALE","allMdx","useStaticQuery","children","pageContext","uri","pagePath","frontmatter","title","description","keywords","featuredImage","status","hideLanguageSelector","hideBreadcrumbs","pathDirs","replace","split","slice","urlNoLocale","join","log","calculateTreeData","edges","sidenavData","breadcrumbData","languageSelectorData","filter","node","UrlConverter","getLocaleFromPath","fileAbsolutePath","map","value","label","statusProps","text","currentTopSection","useLocation","pathname","_pageTitle","firstHeading","Children","toArray","find","c","undefined","getFirstHeading","pop","hasTopSection","renderSidenav","hideSidenav","renderLanguageSelector","renderBreadcrumbs","seo","contentWidthSubtract","width","display","boundaryElement","dontUpdateHolderHeightWhenSticky","style","position","hideOnBoundaryHit","currentPath","as","mt","pl","pr","pb","marginTop","sticky","flexWrap","px"],"mappings":"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","file":"component---content-en-funding-meetup-funding-mdx-8d1179ac8cd1301d633e.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/community-portal/community-portal/src/modules/layouts/mdx_layout.js\";\nimport data from '@modules/transparency_dash/data/publicData.json';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst StatusBanner = makeShortcode(\"StatusBanner\");\nconst Flex = makeShortcode(\"Flex\");\nconst TDStat = makeShortcode(\"TDStat\");\nconst Aligner = makeShortcode(\"Aligner\");\nconst Button = makeShortcode(\"Button\");\nconst Tout = makeShortcode(\"Tout\");\nconst Box = makeShortcode(\"Box\");\nconst List = makeShortcode(\"List\");\nconst Process = makeShortcode(\"Process\");\nconst Callout = makeShortcode(\"Callout\");\nconst Link = makeShortcode(\"Link\");\nconst Checklist = makeShortcode(\"Checklist\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <StatusBanner mdxType=\"StatusBanner\">\n      <p>{`We are currently funding `}<strong parentName=\"p\">{`virtual meetups only`}</strong>{`.`}</p>\n    </StatusBanner>\n    <h1>{`Meetup Funding`}</h1>\n    <p>{`The MakerDAO Core Community Development Initiative supports both virtual and physical meetups.      `}</p>\n    <Flex sx={{\n      alignItems: 'center',\n      justifyContent: 'space-evenly'\n    }} mdxType=\"Flex\">\n      <TDStat data={data.grants.totalMoneyAwarded} mdxType=\"TDStat\">\nDai\n        <p>{`Awarded`}</p>\n      </TDStat>\n      <TDStat data={data.grants.totalMoneyDispersed} mdxType=\"TDStat\">\nDai\n        <p>{`Dispersed`}</p>\n      </TDStat>\n      <TDStat data={data.grants.totalMoneyAwarded / data.acceptedProjects.length} mdxType=\"TDStat\">\nAverage\n        <p>{`Dai Award`}</p>\n      </TDStat>\n      <TDStat alt data={data.grants.applicationsSubmitted} mdxType=\"TDStat\">\nGrant Applications\n        <p>{`Submitted`}</p>\n      </TDStat>\n    </Flex>\n    <Aligner center mdxType=\"Aligner\">\n      <Button to=\"https://airtable.com/shr4HOtcZ8o3VZmek\" mdxType=\"Button\">Apply for Meetup Funding</Button>\n    </Aligner>\n    <p>{`We fund meetups worldwide that support introducing newcomers to the blockchain, Ethereum, DeFi, and MakerDAO.`}</p>\n    <p>{`Since February 2018, Maker's Grant Program has distributed over 40,000 Dai to 100+ meetups in 33 countries supporting more than 5,600 attendees.`}</p>\n    <Tout mdxType=\"Tout\">\n      <Box mdxType=\"Box\">\n        <h3>{`What We Do Fund`}</h3>\n        <List mdxType=\"List\">\n          <p>{`Honorarium for Organizers and Speakers`}</p>\n          <p>{`Space Rentals`}</p>\n          <p>{`Equipment Rentals`}</p>\n          <p>{`Food | Drinks`}</p>\n        </List>\n      </Box>\n      <Box mdxType=\"Box\">\n        <h3>{`What We Don't Fund`}</h3>\n        <List mdxType=\"List\">\n          <p>{`Alcoholic Beverages | Bar Tabs`}</p>\n          <p>{`Burner Wallet Speakeasy Events`}</p>\n          <p>{`Dai | xDai Airdrops`}</p>\n          <p>{`Banners | T-shirts | Paid Marketing`}</p>\n        </List>\n      </Box>\n    </Tout>\n    <h2>{`Get Funded`}</h2>\n    <blockquote>\n      <h4 parentName=\"blockquote\"><strong parentName=\"h4\">{`Looking to fund a larger event?`}</strong></h4>\n      <p parentName=\"blockquote\">{`Reach out to us at: `}<a parentName=\"p\" {...{\n          \"href\": \"mailto:events@makerdao.com\"\n        }}>{`events@makerdao.com`}</a></p>\n    </blockquote>\n    <p>{`Whether this is your first meetup or if you're an experienced organizer, please follow the steps below to apply for funding.`}</p>\n    <p>{`After submitting your application, please allow three to five business days for a response.`}</p>\n    <Process mdxType=\"Process\">\n      <Box mdxType=\"Box\">\n        <h2>{`Create an Invoice`}</h2>\n        <p>{`You’ll need an invoice link to include in the application form.`}</p>\n        <p>{`You’ll need the payer address: `}<inlineCode parentName=\"p\">{`0xF563f100df419CCDe59BFBE0692fc4c5bFe01706`}</inlineCode></p>\n        <p><a parentName=\"p\" {...{\n            \"href\": \"https://app.request.network/#/\"\n          }}>{`Create a Request Network Invoice`}</a></p>\n      </Box>\n      <Box mdxType=\"Box\">\n        <h2>{`Submit an Application`}</h2>\n        <p>{`This form gives us the information we'll need to decide on your funding request.`}</p>\n        <p>{`Please note, whether you're collecting additional sponsorship money from another organization, or if you plan to charge an entry fee.`}</p>\n        <Aligner center mdxType=\"Aligner\">\n          <Button to=\"https://airtable.com/shr4HOtcZ8o3VZmek\" mdxType=\"Button\">Application Form</Button>\n        </Aligner>\n        <p><strong parentName=\"p\">{`Email responses will inform applicants of their applications' status, regardless of whether it is accepted or rejected.`}</strong></p>\n        <Callout mdxType=\"Callout\">\n          <p>{`For help preparing your meetup and answering the questions in the form, please check out our hosting guides:`}</p>\n          <List mdxType=\"List\">\n            <Link to=\"/work_with_us/meetups/getting-started-guide\" mdxType=\"Link\">\n              <p><strong parentName=\"p\">{`Getting Started`}</strong></p>\n              <p>{`The basics for hosting a meetup. Start here if it’s your first time hosting.`}</p>\n            </Link>\n            <Link to=\"/work_with_us/meetups/event-formats-guide\" mdxType=\"Link\">\n              <p><strong parentName=\"p\">{`Event Format`}</strong></p>\n              <p>{`How to choose the best format for your meetup based on your audience.`}</p>\n            </Link>\n            <Link to=\"/work_with_us/meetups/budget-guide\" mdxType=\"Link\">\n              <p><strong parentName=\"p\">{`Budget`}</strong></p>\n              <p>{`How to budget effectively to make the most of the meetup costs.`}</p>\n            </Link>\n            <Link to=\"/work_with_us/meetups/promotion-guide\" mdxType=\"Link\">\n              <p><strong parentName=\"p\">{`Promotion`}</strong></p>\n              <p>{`How and where to promote your meetup.`}</p>\n            </Link>\n          </List>\n        </Callout>\n      </Box>\n      <Box mdxType=\"Box\">\n        <h3>{`During the Event`}</h3>\n        <p>{`If we fund your meetup, we’ll ask you to speak briefly about Community Development at MakerDAO.`}</p>\n        <Checklist mdxType=\"Checklist\">\n          <p>{`Direct new users to the `}<a parentName=\"p\" {...{\n              \"href\": \"/content/en/index/\"\n            }}>{`Community Portal.`}</a></p>\n          <p>{`Outline the different ways to contribute to MakerDAO.`}</p>\n          <p>{`Mention that Dai bounty awards vary by type of contribution.`}</p>\n          <p>{`Record and upload presentations to provide a helpful resource for others.`}</p>\n        </Checklist>\n      </Box>\n      <Box mdxType=\"Box\">\n        <h3>{`After the Event`}</h3>\n        <p>{`Please fill out our Feedback Form. It helps us track metrics and document the media and resources produced for these events.`}</p>\n        <Aligner center mdxType=\"Aligner\">\n          <Button to=\"https://airtable.com/shr6Icuj6tOy0k55l\" mdxType=\"Button\">Feedback Form</Button>\n        </Aligner>\n        <p><strong parentName=\"p\">{`Grantees who do not fill out this form will not be eligible for future funding.`}</strong></p>\n      </Box>\n    </Process>\n    <h3>{`Support`}</h3>\n    <List mdxType=\"List\">\n      <p>{`Check out our `}<a parentName=\"p\" {...{\n          \"href\": \"/work-with-us/meetups/\"\n        }}>{`Community Guides`}</a>{` for help planning a successful meetup.`}</p>\n      <p>{`Reach out to `}<a parentName=\"p\" {...{\n          \"href\": \"mailto:meetups@makerdao.com\"\n        }}>{`meetups@makerdao.com`}</a>{` for more information.`}</p>\n      <p>{`Ask us questions in our `}<a parentName=\"p\" {...{\n          \"href\": \"https://chat.makerdao.com/channel/community-development\"\n        }}>{`Community Chat.`}</a></p>\n    </List>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport {Children, Fragment} from 'react';\nimport { Box, Flex, jsx } from \"theme-ui\";\nimport Sticky from \"react-sticky-el\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\n\nimport {MobileNav} from '@modules/navigation';\nimport { useTranslation } from \"@modules/localization/\";\nimport { LanguageSelector } from \"@modules/localization\";\nimport { Sidenav, Breadcrumbs } from \"@modules/navigation\";\nimport { StatusBanner } from \"@modules/ui\";\nimport calculateTreeData from \"@modules/navigation/calculateTreeData\";\nimport { SEO } from \"@modules/utility\";\nimport { UrlConverter, getLocaleFromPath } from \"@utils\";\n\nexport default (props) => {\n  const { locale, t, DEFAULT_LOCALE } = useTranslation();\n\n  const { allMdx } = useStaticQuery(graphql`\n    query getMDXData {\n      # Regex for all files that are NOT config files\n      allMdx(\n        filter: {\n          fileAbsolutePath: {\n            regex: \"//([\\\\\\\\w]{2})/(?!header.mdx|index.mdx|sidenav.mdx|example.mdx|social.mdx|footer.mdx|404.mdx|.js|.json)/\"\n          }\n        }\n      ) {\n        edges {\n          node {\n            headings(depth: h1) {\n              value\n            }\n            fileAbsolutePath\n            frontmatter {\n              title\n              order\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const { children, pageContext, uri } = props;\n\n  const {pagePath} = pageContext; \n  const {\n    title,\n    description,\n    keywords,\n    featuredImage,\n    status,\n    hideLanguageSelector,\n    hideBreadcrumbs,\n  } = pageContext.frontmatter;\n\n  const pathDirs = pagePath.replace(/^\\/|\\/$/g, \"\").split(\"/\").slice(1);\n  const urlNoLocale = pathDirs.join(\"/\");\n  console.log(pathDirs[0]);\n  const { sidenavData, breadcrumbData } = calculateTreeData(\n    allMdx.edges,\n    pathDirs[0],\n    DEFAULT_LOCALE,\n    locale,\n    pathDirs\n  );\n\n  //NOTE(Rejon): Must be in the shape that React Select expects for it's options.\n  //Something that can be queried? \n  const languageSelectorData = allMdx.edges\n    .filter(({ node }) => {\n      //Drop the end slash, remove the locale, compare the string\n      //TODO(Rejon): This works for now, but can probably be optimized with a Regex solution.\n      const nodeURL = UrlConverter(node)\n        .replace(/^\\/|\\/$/g, \"\")\n        .split(\"/\")\n        .slice(1)\n        .join(\"/\");\n\n      return (\n        nodeURL === urlNoLocale &&\n        getLocaleFromPath(node.fileAbsolutePath) !== locale\n      );\n    })\n    .map(({ node }) => ({\n      value: UrlConverter(node),\n      label: t(\n        \"Language\",\n        null,\n        null,\n        getLocaleFromPath(node.fileAbsolutePath)\n      ),\n    }));\n\n  const statusProps =\n    typeof status === \"object\"\n      ? { children: status.text, ...status }\n      : { children: status };\n\n  const { pathname } = useLocation();\n  const path = pathname.split(\"/\");\n  const currentTopSection = path[2];\n\n  //For the sake of SEO we may want the page title to be based on the first h1 in our MDX file.\n  //if no title is specified in the metadata.\n  const getFirstHeading = () => {\n    //NOTE(Rejon): The children of layouts provided are MDX components!\n    //Find the first mdx child that's an H1\n    const firstHeading = Children.toArray(children).find(\n      (c) => c.props.mdxType === \"h1\"\n    );\n\n    //If we have an h1 in our file return it.\n    if (firstHeading !== undefined) {\n      return firstHeading.props.children;\n    }\n\n    return undefined;\n  };\n\n  //SEO page title priority is: frontmatter title -> First H1 in mdx -> Filename fallback from uri\n  //NOTE(Rejon): If the page is an index of a directory, the uri split will be the name of the directory. ie. /en/bounties -> bounties\n  const _pageTitle = title || getFirstHeading() || uri.split(\"/\").pop();\n\n  const hasTopSection =\n    currentTopSection !== undefined && currentTopSection !== \"\";\n\n  const renderSidenav = pageContext.frontmatter && !pageContext.frontmatter.hideSidenav && hasTopSection;\n  const renderLanguageSelector = hasTopSection && !hideLanguageSelector;\n  const renderBreadcrumbs = (!hideBreadcrumbs || (hasTopSection && !hideLanguageSelector));\n\n  const seo = {\n    title: _pageTitle,\n    description,\n    keywords,\n    featuredImage,\n  };\n\n  let contentWidthSubtract = renderLanguageSelector ? 234 : 0; //NOTE(Rejon): Based on word from design, language selector being hidden doesn't change content width.\n\n  if (renderSidenav) {\n    contentWidthSubtract += 256;\n  }\n\n\n  return (\n    <Fragment>\n      {renderSidenav\n          &&\n          <Box\n            sx={{\n              width: \"256px\",\n              display: [\"none\", \"none\", \"initial\"],\n            }}\n          >\n          <Sticky\n            boundaryElement=\".content-boundary\"\n            dontUpdateHolderHeightWhenSticky={true}\n            style={{ position: \"relative\" }}\n            hideOnBoundaryHit={false}\n            sx={{display: [\"none\", \"none\", \"initial\"]}}\n          >\n            <Sidenav data={sidenavData} currentPath={pagePath}/>\n          </Sticky>\n        </Box>\n      }\n      <Box as=\"article\" sx={{\n        width: ['100%', '100%', `calc(100% - ${contentWidthSubtract}px)`],\n        mt: hasTopSection ? [4, 4, \"59px\"] : 0,\n        pl: hasTopSection ? [4, 4, \"64px\"] : 0,\n        pr: hasTopSection ? [4, 4, 0] : 0,\n        pb: 4,\n        \n      }}>\n      <SEO {...seo} />\n      \n      {status && (\n        <Box sx={{ marginTop: hasTopSection ? 2 : 0 }}>\n          <StatusBanner sticky {...statusProps} sx={{ width: \"100%\" }} />\n        </Box>\n      )}\n      {renderBreadcrumbs && \n        <Flex\n          sx={{\n            justifyContent: \"space-between\",\n            position: \"relative\",\n            alignItems: \"flex-start\",\n            flexWrap: [\"wrap\", \"wrap\", \"unset\"],\n            px: !hasTopSection ? [3, 3, 0] : 0,\n          }}\n        >\n          <Breadcrumbs data={breadcrumbData} pathDirs={pathDirs}/>\n        </Flex>\n      }\n      <Box sx={{display: ['block', 'block', 'none']}}>\n        {/* MOBILE LANGUAGE SELECTOR */}\n        {renderLanguageSelector && <LanguageSelector data={languageSelectorData} pagePath={pagePath}/>}\n      </Box>\n      <Box>\n        {children}\n      </Box>\n      </Box>\n      \n      <Box sx={{display: ['none', 'none', 'block']}}>\n        {/* DESKTOP LANGUAGE SELECTOR */}\n        {renderLanguageSelector && <LanguageSelector data={languageSelectorData} pagePath={pagePath}/>}\n      </Box>\n      <MobileNav sidenavData={sidenavData}/>\n    </Fragment>\n  );\n};\n"],"sourceRoot":""}