{"version":3,"sources":["webpack:///./content/en/work_with_us/content/reviewer-guide.mdx","webpack:///./src/modules/layouts/mdx_layout.js"],"names":["name","_frontmatter","Callout","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","icon","secondary","isMDXComponent","children","pageContext","uri","frontmatter","title","description","keywords","featuredImage","status","hideLanguageSelector","hideBreadcrumbs","statusProps","text","currentTopSection","useLocation","pathname","split","hasTopSection","undefined","seo","firstHeading","Children","toArray","find","c","getFirstHeading","pop","sx","marginTop","sticky","width","justifyContent","position","alignItems","flexWrap","px","lineHeight","maxWidth","mb"],"mappings":"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","file":"component---content-en-work-with-us-content-reviewer-guide-mdx-0f108aac7dbcea8a4319.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/community-portal/community-portal/src/modules/layouts/mdx_layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Callout = makeShortcode(\"Callout\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`Reviewer Guide`}</h1>\n    <p>{`Reviewers are responsible for editing and maintaining MakerDAO’s Community Development resources. All writers and contributors are welcome to assume the Reviewer role.`}</p>\n    <p>{`This guide introduces the review process and outlines editing standards. MakerDAO expects its Writers and Reviewers to adhere to the principles described within this guide and all other Comm-Dev `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/ryancreatescopy/community/tree/203253ec20549aa3667729d5b12a0ee7c5834bde/contributing/readme.md\"\n      }}>{`contributor guides.`}</a></p>\n    <Callout icon=\"warning\" secondary mdxType=\"Callout\">\n      <p><strong parentName=\"p\">{`Please Note:`}</strong>{` `}<em parentName=\"p\">{`Reviewers should be comfortable working with Google Docs and HackMD. They should be open to learning the basics of Markdown, GitHub, and VSCode.`}</em></p>\n    </Callout>\n    <h2>{`Reviewer Roles`}</h2>\n    <p>{`Reviewer roles for Community Development projects are divided into three categories.`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Tone | Grammar:`}</strong>{` Reviewers assess content and resources for tone and consistency. They ensure that all documents adhere to the `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/ryancreatescopy/community/tree/203253ec20549aa3667729d5b12a0ee7c5834bde/contributing/style-guide.md\"\n        }}>{`Writing Style Guide.`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><em parentName=\"li\">{`This role does not require in-depth knowledge about MakerDAO.`}</em></li>\n        </ul></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Content | Concepts:`}</strong>{` Reviewers edit content and make sure that all ideas presented are factual and easy to comprehend.`}<ul parentName=\"li\">\n          <li parentName=\"ul\"><em parentName=\"li\">{`Content Reviewers should have a deeper understanding of MakerDAO and its functions.`}</em></li>\n        </ul></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Maintenance:`}</strong>{` Reviewers refer to document-specific maintenance guides to make sure that existing documents are standardized and up to date.`}<ul parentName=\"li\">\n          <li parentName=\"ul\"><em parentName=\"li\">{`Check GitHub for a document-specific maintenance guide before working on an existing resource.`}</em></li>\n        </ul></li>\n    </ul>\n    <h2>{`General Expectations`}</h2>\n    <Callout icon=\"warning\" secondary mdxType=\"Callout\">\n      <p><strong parentName=\"p\">{`Please Note:`}</strong>{` `}<em parentName=\"p\">{`The Reviewer’s top priority is to make sure that concepts are clearly expressed, and that the writing and tone adhere to the`}</em>{` `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/ryancreatescopy/community/tree/203253ec20549aa3667729d5b12a0ee7c5834bde/contributing/style-guide.md\"\n        }}><em parentName=\"a\">{`Writing Style Guide.`}</em></a></p>\n    </Callout>\n    <ul>\n      <li parentName=\"ul\">{`Reviewers should be proficient writers with some background knowledge of cryptocurrencies and MakerDAO.`}</li>\n      <li parentName=\"ul\">{`They should be familiar with the Comm-Dev `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/ryancreatescopy/community/tree/203253ec20549aa3667729d5b12a0ee7c5834bde/contributing/readme.md\"\n        }}>{`contributor guides.`}</a></li>\n      <li parentName=\"ul\">{`By and large, all contributors should focus on effective collaboration.`}</li>\n    </ul>\n    <p>{`The guideline below offers general advice to ease the Reviewer's work process.`}</p>\n    <h3>{`Reviewing an Existing Project`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Existing documents may be at any stage:`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Google Doc`}</li>\n          <li parentName=\"ul\">{`HackMD`}</li>\n          <li parentName=\"ul\">{`VSCode`}</li>\n          <li parentName=\"ul\">{`Live on GitHub`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`Give existing documents a full read-through before starting work.`}</li>\n      <li parentName=\"ul\">{`When possible, improve the clarity and presentation of the material.`}</li>\n      <li parentName=\"ul\">{`Check for and correct any typos, grammatical errors, and deviations from the `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/ryancreatescopy/community/tree/203253ec20549aa3667729d5b12a0ee7c5834bde/contributing/style-guide.md\"\n        }}>{`Writing Style Guide.`}</a></li>\n      <li parentName=\"ul\">{`Expand on and update concepts as MakerDAO grows.`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Incorporate new developments within MakerDAO.`}</li>\n          <li parentName=\"ul\">{`Update documents to reflect the latest terminology and language as Maker grows and standards change.`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`Add cross-linking to relevant resources.`}</li>\n      <li parentName=\"ul\">{`Take into account that final iterations are converted to Markdown and published on GitHub.`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Avoid including direct links in a Google Doc.`}<ul parentName=\"li\">\n              <li parentName=\"ul\">{`Use the Markdown format to simplify conversion later on.`}</li>\n              <li parentName=\"ul\"><strong parentName=\"li\">{`Example:`}</strong>{` `}{`[`}{`link](https://link`}{`.`}{`com)`}</li>\n            </ul></li>\n        </ul></li>\n      <li parentName=\"ul\">{`Use the Google Docs heading presets.`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`These work well with tools that convert documents into Markdown.`}</li>\n          <li parentName=\"ul\">{`Headings can also help structure a document.`}<ul parentName=\"li\">\n              <li parentName=\"ul\">{`Google's outline tool follows the preset header formats.`}</li>\n            </ul></li>\n        </ul></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport {Children, Fragment} from 'react';\nimport { Box, Flex, jsx } from \"theme-ui\";\nimport Sticky from \"react-sticky-el\";\nimport { useLocation } from \"@reach/router\";\n\nimport { LanguageSelector } from \"@modules/localization\";\nimport { Sidenav, Breadcrumbs } from \"@modules/navigation\";\nimport { StatusBanner } from \"@modules/ui\";\nimport { SEO } from \"@modules/utility\";\n\n\nexport default (props) => {\n  const { children, pageContext, uri } = props;\n  const {\n    title,\n    description,\n    keywords,\n    featuredImage,\n    status,\n    hideLanguageSelector,\n    hideBreadcrumbs,\n  } = pageContext.frontmatter;\n\n  const statusProps =\n    typeof status === \"object\"\n      ? { children: status.text, ...status }\n      : { children: status };\n\n  const { pathname } = useLocation();\n  const path = pathname.split(\"/\");\n  const currentTopSection = path[2];\n\n  //For the sake of SEO we may want the page title to be based on the first h1 in our MDX file.\n  //if no title is specified in the metadata.\n  const getFirstHeading = () => {\n    //NOTE(Rejon): The children of layouts provided are MDX components!\n    //Find the first mdx child that's an H1\n    const firstHeading = Children.toArray(children).find(\n      (c) => c.props.mdxType === \"h1\"\n    );\n\n    //If we have an h1 in our file return it.\n    if (firstHeading !== undefined) {\n      return firstHeading.props.children;\n    }\n\n    return undefined;\n  };\n\n  //SEO page title priority is: frontmatter title -> First H1 in mdx -> Filename fallback from uri\n  //NOTE(Rejon): If the page is an index of a directory, the uri split will be the name of the directory. ie. /en/bounties -> bounties\n  const _pageTitle = title || getFirstHeading() || uri.split(\"/\").pop();\n\n  const hasTopSection =\n    currentTopSection !== undefined && currentTopSection !== \"\";\n\n  const seo = {\n    title: _pageTitle,\n    description,\n    keywords,\n    featuredImage,\n  };\n\n  return (\n    <Fragment>\n      <SEO {...seo} />\n      \n      {status && (\n        <Box sx={{ marginTop: hasTopSection ? 2 : 0 }}>\n          <StatusBanner sticky {...statusProps} sx={{ width: \"100%\" }} />\n        </Box>\n      )}\n          {(!hideBreadcrumbs || (hasTopSection && !hideLanguageSelector)) && (\n            <Flex\n              sx={{\n                justifyContent: \"space-between\",\n                position: \"relative\",\n                alignItems: \"flex-start\",\n                flexWrap: [\"wrap\", \"wrap\", \"unset\"],\n                px: !hasTopSection ? [3, 3, 0] : 0,\n              }}\n            >\n              {!hideBreadcrumbs && <Breadcrumbs />}\n              {hasTopSection && !hideLanguageSelector && <LanguageSelector />}\n            </Flex>\n          )}\n          <Box\n            sx={\n              hasTopSection && !hideLanguageSelector\n                ? {\n                    \"& > *:nth-of-type(1)\": {\n                      lineHeight: \"normal\",\n                    },\n                    \"& > *:nth-of-type(1), & > *:nth-of-type(2)\": {\n                      maxWidth: [\"100%\", \"100%\", \"calc(100% - 234px - 1rem)\"],\n                    },\n                    \"& > *:nth-of-type(2)\": { mb: \"32px\" },\n                  }\n                : {}\n            }\n          >\n            {children}\n          </Box>\n    </Fragment>\n  );\n};\n"],"sourceRoot":""}