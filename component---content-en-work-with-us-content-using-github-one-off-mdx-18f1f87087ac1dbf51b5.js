(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{lnrh:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return c})),n.d(t,"default",(function(){return m}));var i=n("zLVn"),o=(n("q1tI"),n("7ljp")),a=n("z1h2"),c={},r=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(o.mdx)("div",t)}},l=r("Process"),s=r("Box"),p=r("Button"),d={_frontmatter:c},u=a.a;function m(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(o.mdx)(u,Object.assign({},d,n,{components:t,mdxType:"MDXLayout"}),Object(o.mdx)("h1",null,"How to Use GitHub For One-off Changes"),Object(o.mdx)(l,{mdxType:"Process"},Object(o.mdx)(s,{mdxType:"Box"},Object(o.mdx)("h2",null,"Log into Github"),Object(o.mdx)("p",null,"Make sure you have a GitHub account and you’re logged in."),Object(o.mdx)(p,{to:"https://github.com/login",mdxType:"Button"},"Go to Github")),Object(o.mdx)(s,{mdxType:"Box"},Object(o.mdx)("h2",null,"Fork the Repo"),Object(o.mdx)("p",null,"For simple one off tasks, go to the Github website, and ",Object(o.mdx)("a",Object.assign({parentName:"p"},{href:"https://docs.github.com/en/github/getting-started-with-github/fork-a-repo"}),"fork")," the repository (AKA repo) you are making a change to."),Object(o.mdx)("p",null,"Forking the repo creates your a version of the site on your GitHub so you can make changes without impacting the original project."),Object(o.mdx)("h3",null,"Fork"),Object(o.mdx)("p",null,"On the GitHub Website, navigate to the repository you want to change. For example, ",Object(o.mdx)("a",Object.assign({parentName:"p"},{href:"https://github.com/makerdao/community"}),"Community Development's GitHub"),"."),Object(o.mdx)("p",null,"In the top-right corner of the page, click fork\n",Object(o.mdx)("img",Object.assign({parentName:"p"},{src:"/images/github-fork-community.png",alt:"click Fork"})),"."),Object(o.mdx)("p",null,"That is it. You are now ready to add a file or make changes to any existing file.")),Object(o.mdx)(s,{mdxType:"Box"},Object(o.mdx)("h2",null,"Navigate to File/Folder"),Object(o.mdx)("p",null,"Go to your forked version of the repo and then the file you want to edit. For example, the ",Object(o.mdx)("a",Object.assign({parentName:"p"},{href:"https://github.com/makerdao/community/blob/master/README.md"}),"main README file"),".")),Object(o.mdx)(s,{mdxType:"Box"},Object(o.mdx)("h2",null,"Edit/Add File"),Object(o.mdx)("h3",null,"Edit File"),Object(o.mdx)("p",null,"Once in the file, press the pen icon to edit content. This will enter edit mode within Github. Edit mode allows making and proposing new changes without overwriting existing content."),Object(o.mdx)("p",null,Object(o.mdx)("img",Object.assign({parentName:"p"},{src:"/images/edit-github-file.png",alt:"Welcome to Comm-dev"}))),Object(o.mdx)("h3",null,"Add File"),Object(o.mdx)("p",null,"Once in the folder that represents proper page placement, press “Create new file”. This will add a new .md file in your own GitHub account. This allows you to propose the addition of your content without publishing it right away.")),Object(o.mdx)(s,{mdxType:"Box"},Object(o.mdx)("h2",null,"Propose File Change/New File"),Object(o.mdx)("p",null,"Once file changes are complete, you'll need to commit your changes. To do this scroll to the bottom of the page to where it says \"Commit changes,\" write a short description of your changes, and then click the 'commit changes' button."),Object(o.mdx)("p",null,"You will then be prompted to submit a Pull Request (PR). During that process you will be asked for an explanation of changes. This will help any reviewer understand what changes were made, so they can make a decision whether to publish it to the main branch/site. The github GUI makes this easy, but most contributors have a setup that leverages VScode, Atom, or another IDE."),Object(o.mdx)("p",null,Object(o.mdx)("img",Object.assign({parentName:"p"},{src:"/images/github-commit-changes.png",alt:"Commit and PR"})))),Object(o.mdx)(s,{mdxType:"Box"},Object(o.mdx)("h2",null,"Stage Changes"),Object(o.mdx)("p",null,"Whether uploading a file or making changes to existing work, git will catch all changes made. Depending on the environment (code editor, github's website etc.) initiating a live change is as simple as staging fresh update(s) as commits. This image is in VScode:"),Object(o.mdx)("p",null,Object(o.mdx)("img",Object.assign({parentName:"p"},{src:"/images/github-simple-commit-vscode.png",alt:"Commit your changes"})))),Object(o.mdx)(s,{mdxType:"Box"},Object(o.mdx)("h2",null,"Create Pull Request"),Object(o.mdx)("p",null,"Whether in an IDE, or on Githubs interface, the next step is a pull request (PR). Pull Requests merge any changes (commits) tracked in Git, lumps them together, and suggests a path to merging."),Object(o.mdx)("p",null,Object(o.mdx)("img",Object.assign({parentName:"p"},{src:"/images/pull-request-CTA.png",alt:"Open a pull request CTA"}))),Object(o.mdx)("p",null,"Clicking compare and pull request opens the full pull request page, including checks for merging and fields to exaplin the changes."),Object(o.mdx)("p",null,Object(o.mdx)("img",Object.assign({parentName:"p"},{src:"/images/github-create-pull-request.png",alt:"Create Pull request"})))),Object(o.mdx)(s,{mdxType:"Box"},Object(o.mdx)("h2",null,"Review/Merge"),Object(o.mdx)("p",null,"There might be feedback/changes on a PR. A reviewer can approve, request changes, or merge the edited file into the repo. Edits can be made with an open PR (often without leaving Github's website) and the PR will update automatically. Once happy, a reviewer will merge your work and it will be live on the site."))))}m.isMDXComponent=!0},z1h2:function(e,t,n){"use strict";var i=n("rePB"),o=n("q1tI"),a=n("2A+t"),c=n("izhR"),r=n("xEQ+"),l=n.n(r),s=n("Wbzz"),p=n("YwZP"),d=n("4XhP"),u=n("tW5L"),m=n("/xXG"),h=n("C9jn"),b=n("d+M2"),g=n("Al62");function O(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}t.a=function(e){var t=Object(u.d)(),n=t.locale,r=t.t,j=t.DEFAULT_LOCALE,x=Object(s.useStaticQuery)("955314892").allMdx,f=e.children,y=e.pageContext,w=e.uri,v=y.pagePath,k=y.frontmatter,P=k.title,T=k.description,C=k.keywords,D=k.featuredImage,A=k.status,F=k.hideLanguageSelector,G=k.hideBreadcrumbs,E=v.replace(/^\/|\/$/g,"").split("/").slice(1),B=E.join("/");console.log(E[0]);var R=Object(h.a)(x.edges,E[0],j,n,E),q=R.sidenavData,N=R.breadcrumbData,H=x.edges.filter((function(e){var t=e.node;return Object(g.c)(t).replace(/^\/|\/$/g,"").split("/").slice(1).join("/")===B&&Object(g.g)(t.fileAbsolutePath)!==n})).map((function(e){var t=e.node;return{value:Object(g.c)(t),label:r("Language",null,null,Object(g.g)(t.fileAbsolutePath))}})),L="object"==typeof A?function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?O(Object(n),!0).forEach((function(t){Object(i.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):O(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({children:A.text},A):{children:A},I=Object(p.useLocation)().pathname.split("/")[2],M=P||function(){var e=o.Children.toArray(f).find((function(e){return"h1"===e.props.mdxType}));if(void 0!==e)return e.props.children}()||w.split("/").pop(),S=void 0!==I&&""!==I,W=y.frontmatter&&!y.frontmatter.hideSidenav&&S,z=S&&!F,X=!G||S&&!F,U={title:M,description:T,keywords:C,featuredImage:D},V=z?234:0;return W&&(V+=256),Object(a.c)(o.Fragment,null,W&&Object(a.c)(c.f,{sx:{width:"256px",display:["none","none","initial"]}},Object(a.c)(l.a,{boundaryElement:".content-boundary",dontUpdateHolderHeightWhenSticky:!0,style:{position:"relative"},hideOnBoundaryHit:!1,sx:{display:["none","none","initial"]}},Object(a.c)(d.g,{data:q,currentPath:v}))),Object(a.c)(c.f,{as:"article",sx:{width:["100%","100%","calc(100% - "+V+"px)"],mt:S?[4,4,"59px"]:0,pl:S?[4,4,"64px"]:0,pr:S?[4,4,0]:0,pb:4}},Object(a.c)(b.c,U),A&&Object(a.c)(c.f,{sx:{marginTop:S?2:0}},Object(a.c)(m.l,Object.assign({sticky:!0},L,{sx:{width:"100%"}}))),X&&Object(a.c)(c.p,{sx:{justifyContent:"space-between",position:"relative",alignItems:"flex-start",flexWrap:["wrap","wrap","unset"],px:S?0:[3,3,0]}},Object(a.c)(d.a,{data:N,pathDirs:E})),Object(a.c)(c.f,{sx:{display:["block","block","none"]}},z&&Object(a.c)(u.b,{data:H,pagePath:v})),Object(a.c)(c.f,null,f)),Object(a.c)(c.f,{sx:{display:["none","none","block"]}},z&&Object(a.c)(u.b,{data:H,pagePath:v})),Object(a.c)(d.e,{sidenavData:q}))}}}]);
//# sourceMappingURL=component---content-en-work-with-us-content-using-github-one-off-mdx-18f1f87087ac1dbf51b5.js.map