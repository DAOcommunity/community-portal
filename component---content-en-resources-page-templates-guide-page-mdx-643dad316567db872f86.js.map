{"version":3,"sources":["webpack:///./content/en/resources/page-templates/guide-page.mdx","webpack:///./src/modules/layouts/mdx_layout.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","children","pageContext","uri","frontmatter","title","description","keywords","featuredImage","status","hideLanguageSelector","hideBreadcrumbs","statusProps","text","currentTopSection","useLocation","pathname","split","hasTopSection","undefined","seo","firstHeading","Children","toArray","find","c","getFirstHeading","pop","sx","marginTop","sticky","width","justifyContent","position","alignItems","flexWrap","px","lineHeight","maxWidth","mb"],"mappings":"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","file":"component---content-en-resources-page-templates-guide-page-mdx-643dad316567db872f86.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/community-portal/community-portal/src/modules/layouts/mdx_layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`Guide Page`}</h1>\n    <h2>{`Example: Work With Us/Meetups`}</h2>\n    <h2>{`Page purpose`}</h2>\n    <p>{`Provide information and resources related to something a user is interested in pursuing. Note: that these pages aren't designed to facilitate the user achieving a goal like hosting a hackathon – it's more a reference.`}</p>\n    <h2>{`Page structure`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Intro the guide`}</li>\n      <li parentName=\"ol\">{`Provide the resources and advice in a clear, scannable way`}</li>\n      <li parentName=\"ol\">{`Link out to more participatory content`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`example: in the writing style guide, you'd link to Content so that users could get involved editing/writing content.`}</li>\n          <li parentName=\"ul\">{`example: in the meetups guide, you'd link to Meetup funding so that users could find out about the meetup funding program`}</li>\n        </ul></li>\n    </ol>\n    <h2><strong parentName=\"h2\">{`Page title`}</strong></h2>\n    <p>{`Describe the topic of the guide. Example: Meetups`}</p>\n    <h2><strong parentName=\"h2\">{`Intro`}</strong></h2>\n    <p>{`This intro should situate the user and explain what information they'll get on the page. Be sure to address the user and explain what they'll find here rather than talking from Maker's perspective. Remember you're talking directly to our users.`}</p>\n    <p>{`Example:`}</p>\n    <p><em parentName=\"p\">{`Bringing together folks to talk Maker, Dai or Defi at a meetup is a fantastic way for you to help the community. Here’s our guide to hosting one.`}</em></p>\n    <p>{`If there is a related section of the site, like Meetup funding, that you anticipate some users may want rather than a guide to hosting a meetup, intercept them early in the page.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"content/images/meetups-guide.png\",\n        \"alt\": \"Meetups title guide\"\n      }}></img></p>\n    <h2>{`Multi-page guide?`}</h2>\n    <p>{`If there are multi parts to the guide that aren't necessarily chronological? You may want to offer a user a quick way to jump to the guide most relevant to them.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"\",\n        \"alt\": \"List from Meetups Guide - resource links\"\n      }}></img></p>\n    <p>{`These individual pages like \"Budget\" and \"promotion\" should adopt the same advice for the title and intro.`}</p>\n    <p>{`For the page content be sure to:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Write short, succinct sections with clear headings`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Users are likely to scan pages for keyword relevant to their particular interests. Clear headers makes this easier`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`Provide links to other parts of the guide`}</li>\n      <li parentName=\"ul\">{`Provide links to resources where contextually relevant`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`For example if you're talking about preparing a presentation for your meetup, link to the example presentations (even if you've already linked to them from the main page).`}</li>\n        </ul></li>\n    </ul>\n    <h2>{`Edit content`}</h2>\n    <p>{`These pages are a perfect candidate for contributions as more community members add their experiences to improve the guide. Encourage the addition of contributions!`}</p>\n    <p>{`![Participate by editing guides]`}{`(content/images/edit guides.png)`}</p>\n    <h2>{`Resources`}</h2>\n    <p>{`Whether your end goal is getting information on:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`organising a meetup`}</li>\n      <li parentName=\"ul\">{`participating in a hackathon`}</li>\n      <li parentName=\"ul\">{`writing in the Maker style`}</li>\n    </ul>\n    <p>{`There are probably going to be resources that will help you. Think about what these might be and include them. This might be links to brand assets, tools for writing good content or developer docs for Maker.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"\",\n        \"alt\": \"Resources image\"\n      }}></img></p>\n    <p>{`Remember to explain the relevance of the resource as well as provide the link so a user knows what it's for.`}</p>\n    <h2>{`Related content`}</h2>\n    <p>{`As already mentioned in this template, there's a chance a user has navigated here looking for the more actionable content like:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Hackathon funding`}</li>\n      <li parentName=\"ul\">{`Meetup funding`}</li>\n      <li parentName=\"ul\">{`Content`}</li>\n    </ul>\n    <p>{`At the bottom of the page try and direct the users to these sections. Or to other related sections that the community wants to highlight.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`example: encourage hackathon participants to get on the radar of development grants`}</li>\n    </ul>\n    <p>{`![Encourage development grants through hackathons]`}{`(content/images/end of page tout.png)`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport {Children, Fragment} from 'react';\nimport { Box, Flex, jsx } from \"theme-ui\";\nimport Sticky from \"react-sticky-el\";\nimport { useLocation } from \"@reach/router\";\n\nimport { LanguageSelector } from \"@modules/localization\";\nimport { Sidenav, Breadcrumbs } from \"@modules/navigation\";\nimport { StatusBanner } from \"@modules/ui\";\nimport { SEO } from \"@modules/utility\";\n\n\nexport default (props) => {\n  const { children, pageContext, uri } = props;\n  const {\n    title,\n    description,\n    keywords,\n    featuredImage,\n    status,\n    hideLanguageSelector,\n    hideBreadcrumbs,\n  } = pageContext.frontmatter;\n\n  const statusProps =\n    typeof status === \"object\"\n      ? { children: status.text, ...status }\n      : { children: status };\n\n  const { pathname } = useLocation();\n  const path = pathname.split(\"/\");\n  const currentTopSection = path[2];\n\n  //For the sake of SEO we may want the page title to be based on the first h1 in our MDX file.\n  //if no title is specified in the metadata.\n  const getFirstHeading = () => {\n    //NOTE(Rejon): The children of layouts provided are MDX components!\n    //Find the first mdx child that's an H1\n    const firstHeading = Children.toArray(children).find(\n      (c) => c.props.mdxType === \"h1\"\n    );\n\n    //If we have an h1 in our file return it.\n    if (firstHeading !== undefined) {\n      return firstHeading.props.children;\n    }\n\n    return undefined;\n  };\n\n  //SEO page title priority is: frontmatter title -> First H1 in mdx -> Filename fallback from uri\n  //NOTE(Rejon): If the page is an index of a directory, the uri split will be the name of the directory. ie. /en/bounties -> bounties\n  const _pageTitle = title || getFirstHeading() || uri.split(\"/\").pop();\n\n  const hasTopSection =\n    currentTopSection !== undefined && currentTopSection !== \"\";\n\n  const seo = {\n    title: _pageTitle,\n    description,\n    keywords,\n    featuredImage,\n  };\n\n  return (\n    <Fragment>\n      <SEO {...seo} />\n      \n      {status && (\n        <Box sx={{ marginTop: hasTopSection ? 2 : 0 }}>\n          <StatusBanner sticky {...statusProps} sx={{ width: \"100%\" }} />\n        </Box>\n      )}\n          {(!hideBreadcrumbs || (hasTopSection && !hideLanguageSelector)) && (\n            <Flex\n              sx={{\n                justifyContent: \"space-between\",\n                position: \"relative\",\n                alignItems: \"flex-start\",\n                flexWrap: [\"wrap\", \"wrap\", \"unset\"],\n                px: !hasTopSection ? [3, 3, 0] : 0,\n              }}\n            >\n              {!hideBreadcrumbs && <Breadcrumbs />}\n              {hasTopSection && !hideLanguageSelector && <LanguageSelector />}\n            </Flex>\n          )}\n          <Box\n            sx={\n              hasTopSection && !hideLanguageSelector\n                ? {\n                    \"& > *:nth-of-type(1)\": {\n                      lineHeight: \"normal\",\n                    },\n                    \"& > *:nth-of-type(1), & > *:nth-of-type(2)\": {\n                      maxWidth: [\"100%\", \"100%\", \"calc(100% - 234px - 1rem)\"],\n                    },\n                    \"& > *:nth-of-type(2)\": { mb: \"32px\" },\n                  }\n                : {}\n            }\n          >\n            {children}\n          </Box>\n    </Fragment>\n  );\n};\n"],"sourceRoot":""}