{"version":3,"sources":["webpack:///./content/en/resources/page-templates/learn-intro.mdx","webpack:///./src/modules/layouts/mdx_layout.js"],"names":["name","_frontmatter","CTA","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","secondary","isMDXComponent","children","pageContext","uri","frontmatter","title","description","keywords","featuredImage","status","hideLanguageSelector","hideBreadcrumbs","statusProps","text","currentTopSection","useLocation","pathname","split","hasTopSection","undefined","seo","firstHeading","Children","toArray","find","c","getFirstHeading","pop","sx","marginTop","sticky","width","justifyContent","position","alignItems","flexWrap","px","lineHeight","maxWidth","mb"],"mappings":"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","file":"component---content-en-resources-page-templates-learn-intro-mdx-293f051efbb9c5c4341e.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/community-portal/community-portal/src/modules/layouts/mdx_layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst CTA = makeShortcode(\"CTA\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`Learn Intro Page`}</h1>\n    <h2>{`Example: Dai Page`}</h2>\n    <h2>{`Page purpose`}</h2>\n    <p>{`Provide a 101 explanation of a foundational topic and suggest further reading for the more curious readers.`}</p>\n    <h2>{`Page structure`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`TL;DR summary of topic`}</li>\n      <li parentName=\"ol\">{`Link to tutorial if applicable`}</li>\n      <li parentName=\"ol\">{`Topic content sections and resources`}</li>\n      <li parentName=\"ol\">{`Links to related pages/tools or suggested next reads`}</li>\n    </ol>\n    <h2><strong parentName=\"h2\">{`Page title`}</strong></h2>\n    <p>{`Call it what it is. Example: Dai – think of these pages as a wikipedia page on that topic`}</p>\n    <h2>{`Intro/summary`}</h2>\n    <p>{`Think how journalists structure newspaper stories – they design it so that the reader gets the gist of the story even by reading the first few paragraphs. The rest of the story delves into more detail if the reader so desires it.`}</p>\n    <p>{`Your intro should aim to give a concise summary of the topic.`}</p>\n    <h4>{`✅ DO`}</h4>\n    <p><em parentName=\"p\">{`Dai is a stable cryptocurrency worth roughly the same as the US Dollar. It's a token on the Ethereum blockchain and it's not controlled by any central institution or government. You can send and receive it freely, use it as payment or use it in a growing number of decentralized finance products.`}</em></p>\n    <h4>{`❌ DON'T`}</h4>\n    <p><em parentName=\"p\">{`On this page you'll learn everything you need to know about Dai.`}</em></p>\n    <p>{`Note: you don't have to go into a lot of detail here.`}</p>\n    <p>{`Copy on the MCD FAQs reads \"Dai is collateral-backed money whose value is pegged to the US Dollar and kept stable through a framework of aligned financial incentives.\"`}</p>\n    <p>{`The second half of this sentence doesn't actually add anything. It'd be better to delve into more detail about this further down the page to satisfy readers who might be curious as to how it works.`}</p>\n    <h2>{`Tutorial`}</h2>\n    <p>{`Some users like to read about a topic at length, others just want to get stuck in and learn by doing. If there is guide/tutorial content related to this topic it might be worth offering that content up immediately after the introduction.`}</p>\n    <p>{`In the case of the Dai page, you might want to link users out to a walkthrough of how to get Dai or use Dai.`}</p>\n    <h2>{`Topic content sections and resources`}</h2>\n    <p>{`Again think of a wikipedia page. Under the page topic, there are multiple sub-topics that are needed to understand the page topic.`}</p>\n    <p>{`For example the page on Ethereum:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Ethereum`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Etymology`}</li>\n          <li parentName=\"ul\">{`History`}<ul parentName=\"li\">\n              <li parentName=\"ul\">{`Enterprise ethereum alliance`}</li>\n              <li parentName=\"ul\">{`...`}</li>\n            </ul></li>\n          <li parentName=\"ul\">{`Characteristics`}</li>\n        </ul></li>\n    </ul>\n    <p>{`Each sub-topic section provides a succinct explanation of the sub-topic. If it's a really broad topic then there'll be a link to a topic page dedicated to that.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/content/images/ethereum-wikipedia.png\",\n        \"alt\": \"ETH Wiki\"\n      }}></img></p>\n    <p>{`Think about the things a user needs to know about to get a well-rounded overview of the topic. For example, to get a decent overview of Dai you might need to know:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The problem it solves`}</li>\n      <li parentName=\"ul\">{`Dai use cases`}</li>\n      <li parentName=\"ul\">{`How it works (e.g. how it stays stable)`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`This section is broad so it would introduce other topic pages like \"The Dai savings rate, Stability fees and Vaults`}</li>\n        </ul></li>\n    </ul>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/content/images/guide-page-dai-landing.png\",\n        \"alt\": \"Dai explainer\"\n      }}></img></p>\n    <p>{`To get a decent overview of Maker governance you might need to know:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Types of governance: off-chain and on-chain (governance polls and executive votes)`}</li>\n      <li parentName=\"ul\">{`MKR tokens`}</li>\n      <li parentName=\"ul\">{`When a governance poll is used + examples`}</li>\n      <li parentName=\"ul\">{`When an executive vote is used + examples`}</li>\n    </ul>\n    <p>{`All those topics are broad so might have their own in-depth pages for users that want to earn more.`}</p>\n    <p>{`Some general advice for writing these sections:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Use keywords in headings – anticipate what the reader might be looking for`}</li>\n      <li parentName=\"ul\">{`Keep paragraphs short to make content appear less intimidating`}</li>\n      <li parentName=\"ul\">{`Any specialist terminology like \"emergency shutdown\" should be explained there and then or a link should be provided so the user can get the definition/more information`}</li>\n      <li parentName=\"ul\">{`Don't list everything to do with a topic on this page.`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Think: is an understanding of the Dai Savings Rate (DSR) crucial to helping a user understand Dai? If yes: add a section dedicated to DSR on this page? If no: refrain from adding it to the page – maybe reference it and link to a page dedicated to that.`}</li>\n        </ul></li>\n    </ul>\n    <CTA secondary mdxType=\"CTA\">\n      <p>{`💡 `}<em parentName=\"p\">{`The hardest part about structuring these pages is figuring out what not to include. Be ruthless about keeping out things that aren't crucial to giving users an overview understanding of the page's topic.`}</em></p>\n    </CTA>\n    <h3>{`Resources`}</h3>\n    <p>{`The community at large has created some amazing content that help enrich the learning experience. And there are things like \"Governance poll results\" that help provide examples of things. These are currently listed on Awesome MakerDAO. Try to include relevant resources to provide users the opportunity to go and find out more about a topic they're interested in. Try and do this where it's more contextually relevant. If not, just label any resources appropriately as extra reading.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/content/images/guide-page-governance.png\",\n        \"alt\": \"Governance landing explainer\"\n      }}></img></p>\n    <p>{`Links out to past governance polls helps the user explore the topic more`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/content/images/guide-page-governance-linkouts.png\",\n        \"alt\": \"Extra reading linkouts\"\n      }}></img></p>\n    <p>{`If there's a lot of content/guides about a topic surface these for curious readers`}</p>\n    <h2>{`Related pages and suggested reading`}</h2>\n    <p>{`Maybe there's a logical next step.`}</p>\n    <p>{`Now you've finished reading about Dai, go deeper by learning how you can earn interest on Dai with the Dai Savings rate.`}</p>\n    <p><strong parentName=\"p\"><em parentName=\"strong\"><em parentName=\"em\">{`or`}</em></em></strong></p>\n    <p>{`Now you've got an overview of Governance, go into detail about how voting works.`}</p>\n    <p>{`This acts almost as a way of suggesting the user goes to the next level to explore a more in-depth topic.`}</p>\n    <p>{`There might also be sibling pages that are relevant. For example \"Vaults\" is a good place to link users to from Dai because they're so closely related. Dai to Governance, not so much.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport {Children, Fragment} from 'react';\nimport { Box, Flex, jsx } from \"theme-ui\";\nimport Sticky from \"react-sticky-el\";\nimport { useLocation } from \"@reach/router\";\n\nimport { LanguageSelector } from \"@modules/localization\";\nimport { Sidenav, Breadcrumbs } from \"@modules/navigation\";\nimport { StatusBanner } from \"@modules/ui\";\nimport { SEO } from \"@modules/utility\";\n\n\nexport default (props) => {\n  const { children, pageContext, uri } = props;\n  const {\n    title,\n    description,\n    keywords,\n    featuredImage,\n    status,\n    hideLanguageSelector,\n    hideBreadcrumbs,\n  } = pageContext.frontmatter;\n\n  const statusProps =\n    typeof status === \"object\"\n      ? { children: status.text, ...status }\n      : { children: status };\n\n  const { pathname } = useLocation();\n  const path = pathname.split(\"/\");\n  const currentTopSection = path[2];\n\n  //For the sake of SEO we may want the page title to be based on the first h1 in our MDX file.\n  //if no title is specified in the metadata.\n  const getFirstHeading = () => {\n    //NOTE(Rejon): The children of layouts provided are MDX components!\n    //Find the first mdx child that's an H1\n    const firstHeading = Children.toArray(children).find(\n      (c) => c.props.mdxType === \"h1\"\n    );\n\n    //If we have an h1 in our file return it.\n    if (firstHeading !== undefined) {\n      return firstHeading.props.children;\n    }\n\n    return undefined;\n  };\n\n  //SEO page title priority is: frontmatter title -> First H1 in mdx -> Filename fallback from uri\n  //NOTE(Rejon): If the page is an index of a directory, the uri split will be the name of the directory. ie. /en/bounties -> bounties\n  const _pageTitle = title || getFirstHeading() || uri.split(\"/\").pop();\n\n  const hasTopSection =\n    currentTopSection !== undefined && currentTopSection !== \"\";\n\n  const seo = {\n    title: _pageTitle,\n    description,\n    keywords,\n    featuredImage,\n  };\n\n  return (\n    <Fragment>\n      <SEO {...seo} />\n      {status && (\n        <Box sx={{ marginTop: hasTopSection ? 2 : 0 }}>\n          <StatusBanner sticky {...statusProps} sx={{ width: \"100%\" }} />\n        </Box>\n      )}\n          {(!hideBreadcrumbs || (hasTopSection && !hideLanguageSelector)) && (\n            <Flex\n              sx={{\n                justifyContent: \"space-between\",\n                position: \"relative\",\n                alignItems: \"flex-start\",\n                flexWrap: [\"wrap\", \"wrap\", \"unset\"],\n                px: !hasTopSection ? [3, 3, 0] : 0,\n              }}\n            >\n              {!hideBreadcrumbs && <Breadcrumbs />}\n              {hasTopSection && !hideLanguageSelector && <LanguageSelector />}\n            </Flex>\n          )}\n          <Box\n            sx={\n              hasTopSection && !hideLanguageSelector\n                ? {\n                    \"& > *:nth-of-type(1)\": {\n                      lineHeight: \"normal\",\n                    },\n                    \"& > *:nth-of-type(1), & > *:nth-of-type(2)\": {\n                      maxWidth: [\"100%\", \"100%\", \"calc(100% - 234px - 1rem)\"],\n                    },\n                    \"& > *:nth-of-type(2)\": { mb: \"32px\" },\n                  }\n                : {}\n            }\n          >\n            {children}\n          </Box>\n    </Fragment>\n  );\n};\n"],"sourceRoot":""}