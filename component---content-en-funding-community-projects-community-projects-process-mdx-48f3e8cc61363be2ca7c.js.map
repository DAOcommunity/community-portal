{"version":3,"sources":["webpack:///./content/en/funding/community-projects/community-projects-process.mdx","webpack:///./src/modules/layouts/mdx_layout.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","Process","Box","Link","CTA","Accordion","List","Tout","Button","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","to","icon","secondary","image","isMDXComponent","useTranslation","locale","t","DEFAULT_LOCALE","allMdx","useStaticQuery","children","pageContext","uri","pagePath","frontmatter","title","description","keywords","featuredImage","status","hideLanguageSelector","hideBreadcrumbs","pathDirs","replace","split","slice","urlNoLocale","join","calculateTreeData","edges","sidenavData","breadcrumbData","languageSelectorData","filter","node","UrlConverter","getLocaleFromPath","fileAbsolutePath","map","value","label","statusProps","text","currentTopSection","useLocation","pathname","_pageTitle","firstHeading","Children","toArray","find","c","undefined","getFirstHeading","pop","hasTopSection","renderSidenav","hideSidenav","renderLanguageSelector","renderBreadcrumbs","seo","contentWidthSubtract","sx","width","display","boundaryElement","dontUpdateHolderHeightWhenSticky","style","position","hideOnBoundaryHit","data","currentPath","as","mt","pl","pr","pb","marginTop","sticky","justifyContent","alignItems","flexWrap","px"],"mappings":"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","file":"component---content-en-funding-community-projects-community-projects-process-mdx-48f3e8cc61363be2ca7c.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/community-portal/community-portal/src/modules/layouts/mdx_layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Process = makeShortcode(\"Process\");\nconst Box = makeShortcode(\"Box\");\nconst Link = makeShortcode(\"Link\");\nconst CTA = makeShortcode(\"CTA\");\nconst Accordion = makeShortcode(\"Accordion\");\nconst List = makeShortcode(\"List\");\nconst Tout = makeShortcode(\"Tout\");\nconst Button = makeShortcode(\"Button\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`The CDIP Process`}</h1>\n    <p>{`Hereâ€™s an outline of how self-directed projects move from `}<em parentName=\"p\">{`idea`}</em>{` to `}<em parentName=\"p\">{`approval`}</em>{` to `}<em parentName=\"p\">{`completed`}</em>{`. We've added some helpful resources to get you started.`}</p>\n    <p>{`At a high level, below is a visual representation of the current process.`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Green:`}</strong>{` Proposal Owner`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Purple:`}</strong>{` Approving Group`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Orange:`}</strong>{` Both`}</li>\n    </ul>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/images/CDIP-Contributor.png\",\n        \"alt\": \"The Process for Getting a Community Project Started\"\n      }}></img></p>\n    <h2>{`Roles`}</h2>\n    <p>{`There are many roles involved in growing a community project from idea to reality.`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Proposal Owner:`}</strong>{`  Creator of the proposal and the driver of the project. Leads meetings and communication, sets contributor roles, goals, timelines, and expectations.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Contributing Team:`}</strong>{` Contributes responsibilities or expertise to the owner, or lead`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Advisor:`}</strong>{` Supportive role that can help scope, follow up, brainstorm, test, and keep Community Development abreast of communications and project updates.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Approving Group:`}</strong>{` Evaluators reviewing and approving proposals. A mix of Maker Foundation employees and seasoned contributors of the community.`}</li>\n    </ul>\n    <hr></hr>\n    <h2>{`Process`}</h2>\n    <Process mdxType=\"Process\">\n      <Box mdxType=\"Box\">\n        <h2>{`Write a Proposal From Our Template`}</h2>\n        <p>{`A proposal should combine the suggested ideas and skills to improve resources for the MakerDAO community. Use this Google Doc template to structure the proposal so that information is clear and milestones are defined.`}</p>\n        <Link to=\"https://docs.google.com/document/d/1lF8mNuomrguIS3lnvqTomS4NdON40nuyKRbLS6ZkMoA/edit\" mdxType=\"Link\">\n  Open Proposal Template\n        </Link>\n      </Box>\n      <Box mdxType=\"Box\">\n        <h2>{`Post Your Proposal in Our Chat`}</h2>\n        <p>{`Post your proposal in our `}<Link to=\"https://chat.makerdao.com/channel/community-development\" mdxType=\"Link\">{`Community-Development Chat.`}</Link></p>\n      </Box>\n      <Box mdxType=\"Box\">\n        <h2>{`Engage With Feedback`}</h2>\n        <p>{`An Advisor will reach out to help you through the next steps.`}</p>\n        <p>{`The Approving Group will reach out to the proposal owner and provide feedback. Youâ€™ll work on the scope, budget, resources, and timeline.`}</p>\n      </Box>\n \n      <Box mdxType=\"Box\">\n        <h2>{`Wait for a Decision`}</h2>\n        <p>{`An Approving Group meets weekly to review proposals. They will stay in touch for regular updates.`}</p>\n        <p>{`The Approving Group discusses which proposals will get funding and which need more clarification. Weâ€™ll reach out to any proposal owners with the next steps and any comments.`}</p>\n      </Box>\n      <Box mdxType=\"Box\">\n        <h2>{`Start Work`}</h2>\n        <p>{`If itâ€™s a small or medium scoped project, and youâ€™ve addressed any feedback, work can begin.`}</p>\n        <p>{`For large projects, split proposals into GitHub issues/tasks. Another call with the approving group is needed to confirm the costs and resources.`}</p>\n      </Box>\n      <Box mdxType=\"Box\">\n        <h2>{`Communicate Progress`}</h2>\n        <p>{`All projects will have checkpoints. You should expect to present progress at Community weekly sync meetings.`}</p>\n      </Box>\n      <Box mdxType=\"Box\">\n        <h2>{`Evaluate at a Retrospective`}</h2>\n        <p>{`Upon completion, there is a review process. Share the work and discuss what went well, as well as what can be improved.`}</p>\n      </Box>\n    </Process>\n    <CTA icon=\"question_mark\" secondary mdxType=\"CTA\">\n      <p>{`If you are unsure about your proposal, post your idea in the chat for feedback. An Advisor will help you iterate on your project.`}</p>\n    </CTA>\n    <Accordion mdxType=\"Accordion\">\n      <h2><strong parentName=\"h2\">{`DO`}</strong></h2>\n      <ul>\n        <li parentName=\"ul\">{`Check `}<a parentName=\"li\" {...{\n            \"href\": \"https://github.com/makerdao/community/issues?q=label%3ACDIP+\"\n          }}>{`existing or past proposals.`}</a></li>\n        <li parentName=\"ul\">{`Spend 1-3 hours on properly fleshing out your project.`}</li>\n        <li parentName=\"ul\">{`Bring friends and colleagues to help if necessary.`}</li>\n        <li parentName=\"ul\">{`Solicit feedback early and often.`}</li>\n        <li parentName=\"ul\">{`Have some idea about when to check in with the team and your CDIP's Advisor on progress and blockers.`}</li>\n      </ul>\n    </Accordion>\n    <Accordion mdxType=\"Accordion\">\n      <h2><strong parentName=\"h2\">{`DON'T`}</strong></h2>\n      <ul>\n        <li parentName=\"ul\">{`Invoice for work before approval. You might not get paid for it.`}</li>\n        <li parentName=\"ul\">{`Submit more than one proposal at a time.`}</li>\n        <li parentName=\"ul\">{`Duplicate an existing proposal.`}</li>\n        <li parentName=\"ul\">{`Submit a proposal for small pieces of work.`}</li>\n      </ul>\n    </Accordion>\n    <h2>{`Community Resources`}</h2>\n    <p>{`Hereâ€™s a list of resources useful for executing on your proposal.`}</p>\n    <List mdxType=\"List\">\n      <Link to=\"/contribute/content/writing-style-guide\" mdxType=\"Link\"> Writing Style Guide:\nHow to Write Like a Maker Contributor\n      </Link>\n      <Link to=\"/contribute/content/reviewer-guide\" mdxType=\"Link\"> Editorial Standards: What to Look Out for When Reviewing Work\n      </Link>\n      <Link to=\"/contribute/content/visual-style-guide\" mdxType=\"Link\"> Writing Style Guide: How to Look Like Comm-Dev at Maker\n      </Link>\n      <Link to=\"https://www.notion.so/makerdao/Maker-Brand-ac517c82ff9a43089d0db5bb2ee045a4\" mdxType=\"Link\">\n Assets and Design Files: Maker's official logos, badges, and product screenshots from the Foundation design team.\n      </Link>\n    </List>\n    <h2>{`Proposal Details`}</h2>\n    <p>{`Outline anything you need in your proposal. `}</p>\n    <ul>\n      <li parentName=\"ul\">{`People Support: developers, designers, editors, writers, videographers`}</li>\n      <li parentName=\"ul\">{`Foundation Resources Support: brand assets, official product screenshots`}</li>\n    </ul>\n    <p>{`Let your Advisor know if you need more resources than you anticipated! They'll coordinate a meeting, outline any required resources, and present them to the Approving Group. Theyâ€™ll figure out whether or not to approve additional resources.`}</p>\n    <h2>{`What the CDIP Committee Looks For`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Roadmap: Clear scope, milestones, timeline, and a path to delivery`}</li>\n      <li parentName=\"ul\">{`Duration: Three months or less`}</li>\n      <li parentName=\"ul\">{`Budget: Below 5K DAI`}</li>\n      <li parentName=\"ul\">{`Purpose: Clear impact on community growth, team, operations improvements, or workflow improvements`}</li>\n      <li parentName=\"ul\">{`Research: Complete research upfront to help the clarity of the plan`}</li>\n    </ul>\n    <h2>{`Current CDIP Decision Process`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Advisor meeting complete, and table on second page complete`}</li>\n      <li parentName=\"ul\">{`Committee meets to determine if the impact is clear, and the ROI is defined`}</li>\n      <li parentName=\"ul\">{`Feedback is shared, if not approved, as well as the next steps for approval.`}</li>\n      <li parentName=\"ul\">{`Improvements shared and check-ins scheduled, if accepted`}</li>\n      <li parentName=\"ul\">{`The Advisor adds status updates and tags the GitHub issue`}</li>\n    </ul>\n    <h2>{`Quick Heuristics and Evaluative Questions`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`A simple set of deliverables; one or two items, a presentation, an MVP of a technical product, on a realistic timeline, is best.`}</li>\n      <li parentName=\"ul\">{`The budget is clear upfront; think defined number for set hours, try to avoid ranges.`}</li>\n      <li parentName=\"ul\">{`Does the contributor have a portfolio to cross-reference or demonstrate skills relevant to CDIP?`}</li>\n      <li parentName=\"ul\">{`Are the plans expedient?`}</li>\n    </ul>\n    <h2>{`Possible Blockers & Ways to Help`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Longer than a three-month timeline`}</li>\n      <li parentName=\"ul\">{`More than five hours of research is necessary to complete the idea phase. The idea is probably not clear enough.`}</li>\n      <li parentName=\"ul\">{`Too many web3 interactions or protocol dependencies. A hackathon may be a better format.`}</li>\n    </ul>\n    <h2>{`Questions`}</h2>\n    <p>{`Reach out to us on the community chat if you want to know more about submitting a community project idea.`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://chat.makerdao.com/channel/community-development\"\n      }}>{`Community Chat`}</a></p>\n    <h2>{`Submit a Proposal`}</h2>\n    <Tout image mdxType=\"Tout\">\n      <p>{`Ready to share your idea with us? Submit a proposal and earn up to 5000 Dai.`}</p>\n      <Button to=\"https://docs.google.com/document/d/1lF8mNuomrguIS3lnvqTomS4NdON40nuyKRbLS6ZkMoA/edit\" mdxType=\"Button\">\n  Template\n      </Button>\n    </Tout>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport {Children, Fragment} from 'react';\nimport { Box, Flex, jsx } from \"theme-ui\";\nimport Sticky from \"react-sticky-el\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\n\nimport {MobileNav} from '@modules/navigation';\nimport { useTranslation } from \"@modules/localization/\";\nimport { LanguageSelector } from \"@modules/localization\";\nimport { Sidenav, Breadcrumbs } from \"@modules/navigation\";\nimport { StatusBanner } from \"@modules/ui\";\nimport calculateTreeData from \"@modules/navigation/calculateTreeData\";\nimport { SEO } from \"@modules/utility\";\nimport { UrlConverter, getLocaleFromPath } from \"@utils\";\n\nexport default (props) => {\n  const { locale, t, DEFAULT_LOCALE } = useTranslation();\n\n  const { allMdx } = useStaticQuery(graphql`\n    query getMDXData {\n      # Regex for all files that are NOT config files\n      allMdx(\n        filter: {\n          fileAbsolutePath: {\n            regex: \"//([\\\\\\\\w]{2})/(?!header.mdx|index.mdx|sidenav.mdx|example.mdx|social.mdx|footer.mdx|404.mdx|.js|.json)/\"\n          }\n        }\n      ) {\n        edges {\n          node {\n            headings(depth: h1) {\n              value\n            }\n            fileAbsolutePath\n            frontmatter {\n              title\n              order\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const { children, pageContext, uri } = props;\n\n  const {pagePath} = pageContext; \n  const {\n    title,\n    description,\n    keywords,\n    featuredImage,\n    status,\n    hideLanguageSelector,\n    hideBreadcrumbs,\n  } = pageContext.frontmatter;\n\n  const pathDirs = pagePath.replace(/^\\/|\\/$/g, \"\").split(\"/\").slice(1);\n  const urlNoLocale = pathDirs.join(\"/\");\n  \n  const { sidenavData, breadcrumbData } = calculateTreeData(\n    allMdx.edges,\n    pathDirs[0],\n    DEFAULT_LOCALE,\n    locale,\n    pathDirs\n  );\n\n  //NOTE(Rejon): Must be in the shape that React Select expects for it's options.\n  //Something that can be queried? \n  const languageSelectorData = allMdx.edges\n    .filter(({ node }) => {\n      //Drop the end slash, remove the locale, compare the string\n      //TODO(Rejon): This works for now, but can probably be optimized with a Regex solution.\n      const nodeURL = UrlConverter(node)\n        .replace(/^\\/|\\/$/g, \"\")\n        .split(\"/\")\n        .slice(1)\n        .join(\"/\");\n\n      return (\n        nodeURL === urlNoLocale &&\n        getLocaleFromPath(node.fileAbsolutePath) !== locale\n      );\n    })\n    .map(({ node }) => ({\n      value: UrlConverter(node),\n      label: t(\n        \"Language\",\n        null,\n        null,\n        getLocaleFromPath(node.fileAbsolutePath)\n      ),\n    }));\n\n  const statusProps =\n    typeof status === \"object\"\n      ? { children: status.text, ...status }\n      : { children: status };\n\n  const { pathname } = useLocation();\n  const path = pathname.split(\"/\");\n  const currentTopSection = path[2];\n\n  //For the sake of SEO we may want the page title to be based on the first h1 in our MDX file.\n  //if no title is specified in the metadata.\n  const getFirstHeading = () => {\n    //NOTE(Rejon): The children of layouts provided are MDX components!\n    //Find the first mdx child that's an H1\n    const firstHeading = Children.toArray(children).find(\n      (c) => c.props.mdxType === \"h1\"\n    );\n\n    //If we have an h1 in our file return it.\n    if (firstHeading !== undefined) {\n      return firstHeading.props.children;\n    }\n\n    return undefined;\n  };\n\n  //SEO page title priority is: frontmatter title -> First H1 in mdx -> Filename fallback from uri\n  //NOTE(Rejon): If the page is an index of a directory, the uri split will be the name of the directory. ie. /en/bounties -> bounties\n  const _pageTitle = title || getFirstHeading() || uri.split(\"/\").pop();\n\n  const hasTopSection =\n    currentTopSection !== undefined && currentTopSection !== \"\";\n\n  const renderSidenav = pageContext.frontmatter && !pageContext.frontmatter.hideSidenav && hasTopSection;\n  const renderLanguageSelector = hasTopSection && !hideLanguageSelector;\n  const renderBreadcrumbs = (!hideBreadcrumbs || (hasTopSection && !hideLanguageSelector));\n\n  const seo = {\n    title: _pageTitle,\n    description,\n    keywords,\n    featuredImage,\n  };\n\n  let contentWidthSubtract = renderLanguageSelector ? 234 : 0; //NOTE(Rejon): Based on word from design, language selector being hidden doesn't change content width.\n\n  if (renderSidenav) {\n    contentWidthSubtract += 256;\n  }\n\n\n  return (\n    <Fragment>\n      {renderSidenav\n          &&\n          <Box\n            sx={{\n              width: \"256px\",\n              display: [\"none\", \"none\", \"initial\"],\n            }}\n          >\n          <Sticky\n            boundaryElement=\".content-boundary\"\n            dontUpdateHolderHeightWhenSticky={true}\n            style={{ position: \"relative\" }}\n            hideOnBoundaryHit={false}\n            sx={{display: [\"none\", \"none\", \"initial\"]}}\n          >\n            <Sidenav data={sidenavData} currentPath={pagePath}/>\n          </Sticky>\n        </Box>\n      }\n      <Box as=\"article\" sx={{\n        width: ['100%', '100%', `calc(100% - ${contentWidthSubtract}px)`],\n        mt: hasTopSection ? [4, 4, \"59px\"] : 0,\n        pl: hasTopSection ? [4, 4, \"64px\"] : 0,\n        pr: hasTopSection ? [4, 4, 0] : 0,\n        pb: 4,\n        \n      }}>\n      <SEO {...seo} />\n      \n      {status && (\n        <Box sx={{ marginTop: hasTopSection ? 2 : 0 }}>\n          <StatusBanner sticky {...statusProps} sx={{ width: \"100%\" }} />\n        </Box>\n      )}\n      {renderBreadcrumbs && \n        <Flex\n          sx={{\n            justifyContent: \"space-between\",\n            position: \"relative\",\n            alignItems: \"flex-start\",\n            flexWrap: [\"wrap\", \"wrap\", \"unset\"],\n            px: !hasTopSection ? [3, 3, 0] : 0,\n          }}\n        >\n          <Breadcrumbs data={breadcrumbData} pathDirs={pathDirs}/>\n        </Flex>\n      }\n      <Box sx={{display: ['block', 'block', 'none']}}>\n        {/* MOBILE LANGUAGE SELECTOR */}\n        {renderLanguageSelector && <LanguageSelector data={languageSelectorData} pagePath={pagePath}/>}\n      </Box>\n      <Box>\n        {children}\n      </Box>\n      </Box>\n      \n      <Box sx={{display: ['none', 'none', 'block']}}>\n        {/* DESKTOP LANGUAGE SELECTOR */}\n        {renderLanguageSelector && <LanguageSelector data={languageSelectorData} pagePath={pagePath}/>}\n      </Box>\n      <MobileNav sidenavData={sidenavData}/>\n    </Fragment>\n  );\n};\n"],"sourceRoot":""}