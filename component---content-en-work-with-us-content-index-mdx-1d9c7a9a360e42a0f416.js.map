{"version":3,"sources":["webpack:///./content/en/work_with_us/content/index.mdx","webpack:///./src/modules/layouts/mdx_layout.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","InfoBlock","Box","Callout","Checklist","Column","Link","Tout","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","secondary","icon","to","isMDXComponent","children","pageContext","uri","frontmatter","title","description","keywords","featuredImage","status","hideLanguageSelector","hideBreadcrumbs","statusProps","text","currentTopSection","useLocation","pathname","split","hasTopSection","undefined","seo","firstHeading","Children","toArray","find","c","getFirstHeading","pop","sx","marginTop","sticky","width","justifyContent","position","alignItems","flexWrap","px","lineHeight","maxWidth","mb"],"mappings":"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","file":"component---content-en-work-with-us-content-index-mdx-1d9c7a9a360e42a0f416.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/community-portal/community-portal/src/modules/layouts/mdx_layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InfoBlock = makeShortcode(\"InfoBlock\");\nconst Box = makeShortcode(\"Box\");\nconst Callout = makeShortcode(\"Callout\");\nconst Checklist = makeShortcode(\"Checklist\");\nconst Column = makeShortcode(\"Column\");\nconst Link = makeShortcode(\"Link\");\nconst Tout = makeShortcode(\"Tout\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`Contributing Content`}</h1>\n    <InfoBlock mdxType=\"InfoBlock\">\n      <p><img parentName=\"p\" {...{\n          \"src\": \"/images/illustrations/Squid-4.png\",\n          \"alt\": \"Content\"\n        }}></img></p>\n      <Box mdxType=\"Box\">\n        <h2>{`Help us improve the community site by creating new content, editing existing content, or suggesting improvements.`}</h2>\n        <p>{`Designers, Writers, Editors, and other skilled contributors are encouraged to help with current content creation efforts and propose new ones.\nCommunity-contributed content helps ensure up-to-date resources for learning about MakerDAO, Maker, and Dai.`}</p>\n      </Box>\n    </InfoBlock>\n    <Callout secondary icon=\"dai\" mdxType=\"Callout\">\n      <p>{`Get paid in Dai to create content for Comm-Dev.`}</p>\n    </Callout>\n    <h3>{`Requirements`}</h3>\n    <p>{`Designers, Writers, Editors, and other skilled contributors are encouraged to help with current content creation efforts and propose new ones.\nCommunity contributed content helps ensure up-to-date resources for learning about MakerDAO, Maker, and Dai.`}</p>\n    <p>{`Content contributors should be:`}</p>\n    <Checklist mdxType=\"Checklist\">\n      <p>{`Excited to grow the MakerDAO community and its resources.`}</p>\n      <p>{`Familiar with GitHub, Markdown, Google Docs, and HackMD.`}</p>\n      <p>{`Skilled at communication.`}</p>\n      <p>{`Effective writers.`}</p>\n      <p>{`Collaborative and used to working with a team.`}</p>\n    </Checklist>\n    <Column mdxType=\"Column\">\n      <Box mdxType=\"Box\">\n        <h2>{`Write New Content`}</h2>\n        <p>{`We welcome videos, documents, pictures.`}</p>\n        <p><a parentName=\"p\" {...{\n            \"href\": \"/work_with_us/content/writing-style-guide/\"\n          }}>{`How to write like Maker`}</a></p>\n        <p><a parentName=\"p\" {...{\n            \"href\": \"/work_with_us/onboarding/\"\n          }}>{`Contributor Onboarding Guide`}</a></p>\n        <p><a parentName=\"p\" {...{\n            \"href\": \"/work_with_us/content/common-tools/\"\n          }}>{`Contributing tools Guide`}</a></p>\n      </Box>\n      <Box mdxType=\"Box\">\n        <h2>{`Make Edits and Improvements`}</h2>\n        <p>{`Anyone can edit any page on this site because we believe open-source contributions are the key to a healthy community. If you spot any mistakes, or if you would like to add any information, feel free to hit Edit and make changes via GitHub. All edits go through a review process before being merged into the community repository.`}</p>\n        <p><a parentName=\"p\" {...{\n            \"href\": \"/work_with_us/content/reviewer-guide/\"\n          }}>{`How to review like Maker`}</a></p>\n        <p><a parentName=\"p\" {...{\n            \"href\": \"/work_with_us/content/using-github/\"\n          }}>{`How to Use Github`}</a></p>\n      </Box>\n    </Column>\n    {\n      /* <Column>\n      <Tout>\n      ### Educational Content\n      Educational content helps convert MakerDAO novices into experts while improving everyone’s technical understanding.\n      <List>\n      [Guide to Vaults](/learn/vaults/)\n      [Guide to DAI](/learn/Dai/)\n      [Guide to Governance](/learn/governance/)\n      [Awesome-MakerDAO](https://awesome.makerdao.com)\n      </List>\n      </Tout>\n      <Tout>\n      ### Reference Content\n      Reference content provides documented details about a given domain to help improve Maker’s processes.\n      <List>\n      [Governance Call Notes](/work_with_us/governance_and_risk_meetings/take-notes/)\n      [Writing Style Guide](/work_with_us/content/writing-style-guide/)\n      [Development Grants](/funding/development-grants)\n      Even this page...\n      </List>\n      </Tout>\n      </Column> */\n    }\n    {\n      /* <Callout icon=\"lightbulb\">\n      Be sure to look over our list of [open bounties](https://github.com/makerdao/community/projects/2?card_filter_query=label%3A%22help+wanted%22)  first to make sure your concept is unique.  Many ideas already offer bounties for contributors.\n      </Callout> */\n    }\n    <h2>{`Payment`}</h2>\n    <p>{`You can earn Dai for any content you create that gets approved. We'll reach out to you privately to discuss payment and compensation. Don't be afraid to ask someone in the community chat for help with submitting an invoice.`}</p>\n    <h2>{`Ready to Get Started?`}</h2>\n    <p>{`Reach out and introduce yourself to the community to let us know you want to contribute`}</p>\n    <Link to=\"https://chat.makerdao.com/channel/community-development\" icon=\"rocketchat\" mdxType=\"Link\">Community Chat</Link>\n    {\n      /* ## Content Resources\n      These resources should help with writing and editing content for the community:\n      <List>\n      </List> */\n    }\n    <h2>{`Suggested Reading`}</h2>\n    <Tout mdxType=\"Tout\">\n      <Box mdxType=\"Box\">\n        <h3>{`Publishing Process`}</h3>\n        <p>{`Learn how new content goes from an idea to becoming a published page on our site.`}</p>\n        <p><a parentName=\"p\" {...{\n            \"href\": \"/work_with_us/content/publishing-to-repo-process/\"\n          }}>{`Publishing Content`}</a></p>\n      </Box>\n      <Box mdxType=\"Box\">\n        <h3>{`Using GitHub`}</h3>\n        <p>{`We use GitHub to manage content on our site. Learn how it works.`}</p>\n        <p><a parentName=\"p\" {...{\n            \"href\": \"/work_with_us/content/using-github/\"\n          }}>{`How to Use Github`}</a></p>\n      </Box>\n    </Tout>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport {Children, Fragment} from 'react';\nimport { Box, Flex, jsx } from \"theme-ui\";\nimport Sticky from \"react-sticky-el\";\nimport { useLocation } from \"@reach/router\";\n\nimport { LanguageSelector } from \"@modules/localization\";\nimport { Sidenav, Breadcrumbs } from \"@modules/navigation\";\nimport { StatusBanner } from \"@modules/ui\";\nimport { SEO } from \"@modules/utility\";\n\n\nexport default (props) => {\n  const { children, pageContext, uri } = props;\n  const {\n    title,\n    description,\n    keywords,\n    featuredImage,\n    status,\n    hideLanguageSelector,\n    hideBreadcrumbs,\n  } = pageContext.frontmatter;\n\n  const statusProps =\n    typeof status === \"object\"\n      ? { children: status.text, ...status }\n      : { children: status };\n\n  const { pathname } = useLocation();\n  const path = pathname.split(\"/\");\n  const currentTopSection = path[2];\n\n  //For the sake of SEO we may want the page title to be based on the first h1 in our MDX file.\n  //if no title is specified in the metadata.\n  const getFirstHeading = () => {\n    //NOTE(Rejon): The children of layouts provided are MDX components!\n    //Find the first mdx child that's an H1\n    const firstHeading = Children.toArray(children).find(\n      (c) => c.props.mdxType === \"h1\"\n    );\n\n    //If we have an h1 in our file return it.\n    if (firstHeading !== undefined) {\n      return firstHeading.props.children;\n    }\n\n    return undefined;\n  };\n\n  //SEO page title priority is: frontmatter title -> First H1 in mdx -> Filename fallback from uri\n  //NOTE(Rejon): If the page is an index of a directory, the uri split will be the name of the directory. ie. /en/bounties -> bounties\n  const _pageTitle = title || getFirstHeading() || uri.split(\"/\").pop();\n\n  const hasTopSection =\n    currentTopSection !== undefined && currentTopSection !== \"\";\n\n  const seo = {\n    title: _pageTitle,\n    description,\n    keywords,\n    featuredImage,\n  };\n\n  return (\n    <Fragment>\n      <SEO {...seo} />\n      \n      {status && (\n        <Box sx={{ marginTop: hasTopSection ? 2 : 0 }}>\n          <StatusBanner sticky {...statusProps} sx={{ width: \"100%\" }} />\n        </Box>\n      )}\n          {(!hideBreadcrumbs || (hasTopSection && !hideLanguageSelector)) && (\n            <Flex\n              sx={{\n                justifyContent: \"space-between\",\n                position: \"relative\",\n                alignItems: \"flex-start\",\n                flexWrap: [\"wrap\", \"wrap\", \"unset\"],\n                px: !hasTopSection ? [3, 3, 0] : 0,\n              }}\n            >\n              {!hideBreadcrumbs && <Breadcrumbs />}\n              {hasTopSection && !hideLanguageSelector && <LanguageSelector />}\n            </Flex>\n          )}\n          <Box\n            sx={\n              hasTopSection && !hideLanguageSelector\n                ? {\n                    \"& > *:nth-of-type(1)\": {\n                      lineHeight: \"normal\",\n                    },\n                    \"& > *:nth-of-type(1), & > *:nth-of-type(2)\": {\n                      maxWidth: [\"100%\", \"100%\", \"calc(100% - 234px - 1rem)\"],\n                    },\n                    \"& > *:nth-of-type(2)\": { mb: \"32px\" },\n                  }\n                : {}\n            }\n          >\n            {children}\n          </Box>\n    </Fragment>\n  );\n};\n"],"sourceRoot":""}